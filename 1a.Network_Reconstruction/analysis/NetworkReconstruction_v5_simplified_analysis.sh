#!/bin/sh

##########################################################################################################################
#
# Analysis of reconstructed networks according to manuscript - 5 cichlids (O. niloticus, P. nyererei, A. burtoni, M .zebra, N. brichardi)
#
#
# By Tarang Mehta, Earlham, UK
# Version 1.0 2018
#
##########################################################################################################################


##########################################################################################################################
#
# 1.	Reconstructed gene regulatory networks of five cichlids
#
##########################################################################################################################

########################################################################################
# ~~~~~~~ #  a)	Start with number of edges and nodes per species + composition (genes, miRNAs, CNEs etc.) {DONE}
########################################################################################

EDGE=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes)
cd $EDGE

wc -l *-Edge_Attributes_Collated4d.txt # number of edges
# 20762752 Ab-Edge_Attributes_Collated4d.txt
# 21025078 Mz-Edge_Attributes_Collated4d.txt
# 13986258 Nb-Edge_Attributes_Collated4d.txt
# 23666531 On-Edge_Attributes_Collated4d.txt
# 19735004 Pn-Edge_Attributes_Collated4d.txt
# 99175628 total

for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="targetscan7"' $i | wc -l ; done # miRNA edges
# 2970628 - ab
# 2570543 - mz
# 1907605 - nb
# 3308048 - on
# 2096834 - pn
for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="co-expression_TF-TG"' $i | wc -l ; done # co-expressed TF-TG edges
# 3822 - ab
# 3964 - mz
# 3180 - nb
# 4099 - on
# 4029 - pn
for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="promoter_motif"' $i | wc -l ; done # Promoter TFBS
# 5355927 - ab
# 4760610 - mz
# 3292032 - nb
# 5896075 - on
# 4862871 - pn
for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="CNE_motif"||$18=="aCNE_motif"' $i | wc -l ; done # CNE TFBS
# 12050434 - ab
# 13316694 - mz
# 8392187 - nb
# 14055402 - on
# 12400759 - pn
for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="CNE_Proximal"||$18=="aCNE_Proximal"' $i | wc -l ; done # CNE proximal
# 381941 - ab
# 373267 - mz
# 391254 - nb
# 402907 - on
# 370511 - pn
for i in *-Edge_Attributes_Collated4d.txt ; do cut -f1,5 $i | awk '{OFS=RS;$1=$1}1' | sort -u | grep -v 'GeneA' | grep -v 'GeneB' | grep -v NA | wc -l ; done # total number of nodes
# 413309 - ab
# 408287 - mz
# 414377 - nb
# 433996 - on
# 399650 - pn
for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="co-expression_TF-TG" || $18=="promoter_motif"' $i | cut -f1,5 | awk '{OFS=RS;$1=$1}1' | sort -u | grep -v 'GeneA' | grep -v 'GeneB' | grep -v NA | wc -l ; done # total number of nodes - genes
# 11638 - ab
# 11075 - mz
# 10015 - nb
# 11790 - on
# 11070 - pn
for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="targetscan7"' $i | cut -f1 | sort -u | grep -v 'GeneA' | grep -v NA | wc -l ; done # total number of nodes - miRNAs
# 243 - Ab
# 185 - Mz
# 183 - Nb
# 198 - On
# 183 - Pn
for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="CNE_motif"||$18=="aCNE_motif"' $i | cut -f5 | sort -u | grep -v 'GeneB' | grep -v NA | wc -l ; done # total number of nodes - CNEs with TFBSs
# 144047 - Ab
# 164166 - Mz
# 135860 - Nb
# 144046 - On
# 141129 - Pn
for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="CNE_Proximal"||$18=="aCNE_Proximal"' $i | cut -f1 | sort -u | grep -v 'GeneA' | grep -v NA | wc -l ; done # total number of nodes - proximal CNEs
# 378008 - ab
# 369125 - mz
# 386738 - nb
# 402678 - on
# 366641 - pn

## Number of TFs in TF-TG and conf-levels
# a. total TFs in TF-TG
for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="promoter_motif"' $i | cut -f1 | sort -u | wc -l ; done
#  294 - Ab
#  274 - Mz
#  221 - Nb
#  283 - On
#  266 - Pn

#b. total TG in TF-TG
for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="promoter_motif"' $i | cut -f5 | sort -u | wc -l ; done
# 11471 - ab
# 10919 - mz
# 9891 - nb
# 11645 - on
# 10909 - pn

#c. Confidence level 1a - interactions in cichlids extrapolated from mouse that OVERLAP with interactions extrapolated from human, no of TFs
for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="promoter_motif" && $35=="1a"' $i | cut -f1 | sort -u | wc -l ; done
# 16 - Ab
# 18 - Mz
# 11 - Nb
# 18 - On
# 17 - Pn

#d. Confidence level 1b - interactions in cichlids extrapolated from mouse ONLY, no of TFs
for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="promoter_motif" && $35=="1b"' $i | cut -f1 | sort -u | wc -l ; done
# 257 - Ab
# 238 - Mz
# 188 - Nb
# 247 - On
# 231 - Pn

#e. Confidence level 1c - interactions in cichlids extrapolated from human ONLY, no of TFs
for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="promoter_motif" && $35=="1c"' $i | cut -f1 | sort -u | wc -l ; done
# 127 - Ab
# 120 - Mz
# 98 - Nb
# 126 - On
# 118 - Pn

#f. Confidence level 2a - FDR corrected interactions resulting from the FIMO scans using the extrapolated cichlid species specific matrices, no of TFs
for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="promoter_motif" && $35=="2a"' $i | cut -f1 | sort -u | wc -l ; done
# 102 - Ab
# 99 - Mz
# 79 - Nb
# 96 - On
# 95 - Pn

#g. Confidence level 2b - FDR corrected interactions resulting from the FIMO scans using the extrapolated non-species specific matrices, no of TFs
for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="promoter_motif" && $35=="2b"' $i | cut -f1 | sort -u | wc -l ; done
# 8 - Ab
# 8 - Mz
# 9 - Nb
# 8 - On
# 10 - Pn

#h. Confidence level 2c - FDR corrected interactions resulting from the FIMO scans using the Jaspar matrices, no of TFs
for i in *-Edge_Attributes_Collated4d.txt ; do awk '$18=="promoter_motif" && $35=="2c"' $i | cut -f1 | sort -u | wc -l ; done
# 20 - Ab
# 19 - Mz
# 19 - Nb
# 23 - On
# 18 - Pn

########################################################################################
# ~~~~~~~ #  b)	Connectivity of edges and nodes – the degree distribution of a network.
########################################################################################

# SINCE WE ARE ONLY FOCUSING ON TF-TG AND CO-EXPRESSION EDGES, FOCUS ON THOSE
# Use the TF-TG edges as used for rewiring analyses

cd /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/rewiring_files_DyNet_Marton/7.FINALedgetables_TFno1to1_TG1to1PresenceNULLOGIDS
mkdir igraph # {DONE}
cd igraph # {DONE}

Edge=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/rewiring_files_DyNet_Marton/7.FINALedgetables_TFno1to1_TG1to1PresenceNULLOGIDS/Edge_Attributes_Collated4c.coexpr_promONLY.NEWsimplified.matrix3.filteredPresentNULLOGIDS.txt)

awk '{if($14 == "1")print $3,$6;}' OFS='\t' $Edge > Mz_TFTG.txt
awk '{if($15 == "1")print $3,$6;}' OFS='\t' $Edge > Pn_TFTG.txt
awk '{if($16 == "1")print $3,$6;}' OFS='\t' $Edge > Ab_TFTG.txt
awk '{if($17 == "1")print $3,$6;}' OFS='\t' $Edge > Nb_TFTG.txt
awk '{if($18 == "1")print $3,$6;}' OFS='\t' $Edge > On_TFTG.txt

nano igraph_degree_dist.R # {DONE}

# The degree of a node refers to the number of links associated with a node.
# Degree can be measured as the links going in ("in degree"), out ("out degree"), or both.
# The degree() function takes a graph input and gives the degree of specified nodes.
# With the argument "v=V(graph)" you tell the function to give the degree of all nodes in the graph,
# while the "mode" argument specifies in, out, or both.

library("igraph")
# library("poweRlaw")
library("ggplot2")

setwd("~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/rewiring_files_DyNet_Marton/7.FINALedgetables_TFno1to1_TG1to1PresenceNULLOGIDS/igraph/")
base_dir <-("~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/rewiring_files_DyNet_Marton/7.FINALedgetables_TFno1to1_TG1to1PresenceNULLOGIDS/igraph/")

# Load in the data
Files1 <- dir(file.path(base_dir))
Edge_grep <- glob2rx("*_TFTG.txt") # create a grep pattern to select only specific files
Edge_grep2 <- grep(Edge_grep, Files1) # run the grep
Files2 <- Files1[Edge_grep2] # subset the files from the folder to only select the ones you want using the grep

for (i in 1:length(Files2)){
  tmp = read.delim(file = paste0(base_dir,Files2[i]),header = T)
  assign(Files2[i], tmp)
}

# Convert edge lists to igraph graph object
Ab <- graph.data.frame(`Ab_TFTG.txt`,directed=TRUE)
Mz <- graph.data.frame(`Mz_TFTG.txt`,directed=TRUE)
Pn <- graph.data.frame(`Pn_TFTG.txt`,directed=TRUE)
Nb <- graph.data.frame(`Nb_TFTG.txt`,directed=TRUE)
On <- graph.data.frame(`On_TFTG.txt`,directed=TRUE)

# List of degrees
Ab.degrees <- degree(Ab)
Mz.degrees <- degree(Mz)
Pn.degrees <- degree(Pn)
Nb.degrees <- degree(Nb)
On.degrees <- degree(On)

# Count the frequencies of each degree
Ab.degree.histogram <- as.data.frame(table(Ab.degrees))
Mz.degree.histogram <- as.data.frame(table(Mz.degrees))
Pn.degree.histogram <- as.data.frame(table(Pn.degrees))
Nb.degree.histogram <- as.data.frame(table(Nb.degrees))
On.degree.histogram <- as.data.frame(table(On.degrees))

# Need to convert the first column to numbers, otherwise log-log will not work
Ab.degree.histogram[,1] <- as.numeric(Ab.degree.histogram[,1])
Mz.degree.histogram[,1] <- as.numeric(Mz.degree.histogram[,1])
Pn.degree.histogram[,1] <- as.numeric(Pn.degree.histogram[,1])
Nb.degree.histogram[,1] <- as.numeric(Nb.degree.histogram[,1])
On.degree.histogram[,1] <- as.numeric(On.degree.histogram[,1])

# Now, plot it!
tiff('~/Documents/TGAC/Projects/Cichlid_GRNs/Manuscript/Figures/New/Supplementary/networks/FigS-R3Ac–Ab_edge_degree_dist.tiff', units="in", width=10, height=10, res=300)
ggplot(Ab.degree.histogram, aes(x = Ab.degrees, y = Freq)) +
  geom_point() +
  scale_x_continuous("log10 degree\n(- nodes with this amount of connections)",
                     breaks = c(1, 3, 10, 30, 100, 300, 600),
                     trans = "log10") +
  scale_y_continuous("log10 frequency",
                     breaks = c(1, 3, 10, 30, 100, 300, 1000),
                     trans = "log10") +
  ggtitle(expression(paste(italic("A. burtoni"), " regulatory network edge degree distribution"))) +
theme_bw()
dev.off()

tiff('~/Documents/TGAC/Projects/Cichlid_GRNs/Manuscript/Figures/New/Supplementary/networks/FigS-R3Aa–Mz_edge_degree_dist.tiff', units="in", width=10, height=10, res=300)
ggplot(Mz.degree.histogram, aes(x = Mz.degrees, y = Freq)) +
  geom_point() +
  scale_x_continuous("log10 degree\n(- nodes with this amount of connections)",
                     breaks = c(1, 3, 10, 30, 100, 300),
                     trans = "log10") +
  scale_y_continuous("log10 frequency",
                     breaks = c(1, 3, 10, 30, 100, 300, 1000),
                     trans = "log10") +
  ggtitle(expression(paste(italic("M. zebra"), " regulatory network edge degree distribution"))) +
theme_bw()
dev.off()

tiff('~/Documents/TGAC/Projects/Cichlid_GRNs/Manuscript/Figures/New/Supplementary/networks/FigS-R3Ab–Pn_edge_degree_dist.tiff', units="in", width=10, height=10, res=300)
ggplot(Pn.degree.histogram, aes(x = Pn.degrees, y = Freq)) +
  geom_point() +
  scale_x_continuous("log10 degree\n(- nodes with this amount of connections)",
                     breaks = c(1, 3, 10, 30, 100, 300),
                     trans = "log10") +
  scale_y_continuous("log10 frequency",
                     breaks = c(1, 3, 10, 30, 100, 300, 1000),
                     trans = "log10") +
  ggtitle(expression(paste(italic("P. nyererei"), " regulatory network edge degree distribution"))) +
theme_bw()
dev.off()

tiff('~/Documents/TGAC/Projects/Cichlid_GRNs/Manuscript/Figures/New/Supplementary/networks/FigS-R3Ad–Nb_edge_degree_dist.tiff', units="in", width=10, height=10, res=300)
ggplot(Nb.degree.histogram, aes(x = Nb.degrees, y = Freq)) +
  geom_point() +
  scale_x_continuous("log10 degree\n(- nodes with this amount of connections)",
                     breaks = c(1, 3, 10, 30, 100, 300),
                     trans = "log10") +
  scale_y_continuous("log10 frequency",
                     breaks = c(1, 3, 10, 30, 100, 300, 1000),
                     trans = "log10") +
  ggtitle(expression(paste(italic("N. brichardi"), " regulatory network edge degree distribution"))) +
theme_bw()
dev.off()

tiff('~/Documents/TGAC/Projects/Cichlid_GRNs/Manuscript/Figures/New/Supplementary/networks/FigS-R3Ae–On_edge_degree_dist.tiff', units="in", width=10, height=10, res=300)
ggplot(On.degree.histogram, aes(x = On.degrees, y = Freq)) +
  geom_point() +
  scale_x_continuous("log10 degree\n(- nodes with this amount of connections)",
                     breaks = c(1, 3, 10, 30, 100, 300),
                     trans = "log10") +
  scale_y_continuous("log10 frequency",
                     breaks = c(1, 3, 10, 30, 100, 300, 1000),
                     trans = "log10") +
  ggtitle(expression(paste(italic("O. niloticus"), " regulatory network edge degree distribution"))) +
theme_bw()
dev.off()

# Run the above
R CMD BATCH igraph_degree_dist.R


# THIS IS FOR ALL EDGES

nano cutedges.sh

#!/bin/bash -e
#SBATCH -p tgac-short # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --array=0-4
#SBATCH --mem-per-cpu 18000
#SBATCH -t 0-00:45
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR

ls -1 *-Edge_Attributes_Collated4d.txt > sp_edgetable2 # create a list of all edge tables
mapfile -t sp_edgetable2 < sp_edgetable2 # assign as elements to $sp_edgetable variable

cut -f1,5 ${sp_edgetable2[${SLURM_ARRAY_TASK_ID}]} > "$(basename "${sp_edgetable2[${SLURM_ARRAY_TASK_ID}]}" .txt)_CUT.txt"

# run the above
sbatch cutedges.sh

cd /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes # {DONE}
mkdir igraph # {DONE}
cd igraph # {DONE}

nano igraph_degree_dist.R # {DONE}

# The degree of a node refers to the number of links associated with a node.
# Degree can be measured as the links going in ("in degree"), out ("out degree"), or both.
# The degree() function takes a graph input and gives the degree of specified nodes.
# With the argument "v=V(graph)" you tell the function to give the degree of all nodes in the graph,
# while the "mode" argument specifies in, out, or both.

library("igraph")
# library("poweRlaw")
library("ggplot2")

setwd("~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/igraph/")
base_dir <-("~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/")

# Load in the data
Files1 <- dir(file.path(base_dir))
Edge_grep <- glob2rx("*-Edge_Attributes_Collated4d_CUT.txt") # create a grep pattern to select only specific files
Edge_grep2 <- grep(Edge_grep, Files1) # run the grep
Files2 <- Files1[Edge_grep2] # subset the files from the folder to only select the ones you want using the grep

for (i in 1:length(Files2)){
  tmp = read.delim(file = paste0(base_dir,Files2[i]),header = T)
  assign(Files2[i], tmp)
}

# Convert edge lists to igraph graph object
Ab <- graph.data.frame(`Ab-Edge_Attributes_Collated4d_CUT.txt`,directed=TRUE)
Mz <- graph.data.frame(`Mz-Edge_Attributes_Collated4d_CUT.txt`,directed=TRUE)
Pn <- graph.data.frame(`Pn-Edge_Attributes_Collated4d_CUT.txt`,directed=TRUE)
Nb <- graph.data.frame(`Nb-Edge_Attributes_Collated4d_CUT.txt`,directed=TRUE)
On <- graph.data.frame(`On-Edge_Attributes_Collated4d_CUT.txt`,directed=TRUE)

# List of degrees
Ab.degrees <- degree(Ab)
Mz.degrees <- degree(Mz)
Pn.degrees <- degree(Pn)
Nb.degrees <- degree(Nb)
On.degrees <- degree(On)

# Count the frequencies of each degree
Ab.degree.histogram <- as.data.frame(table(Ab.degrees))
Mz.degree.histogram <- as.data.frame(table(Mz.degrees))
Pn.degree.histogram <- as.data.frame(table(Pn.degrees))
Nb.degree.histogram <- as.data.frame(table(Nb.degrees))
On.degree.histogram <- as.data.frame(table(On.degrees))

# Need to convert the first column to numbers, otherwise log-log will not work
Ab.degree.histogram[,1] <- as.numeric(Ab.degree.histogram[,1])
Mz.degree.histogram[,1] <- as.numeric(Mz.degree.histogram[,1])
Pn.degree.histogram[,1] <- as.numeric(Pn.degree.histogram[,1])
Nb.degree.histogram[,1] <- as.numeric(Nb.degree.histogram[,1])
On.degree.histogram[,1] <- as.numeric(On.degree.histogram[,1])

# Now, plot it!
tiff('~/Documents/TGAC/Projects/Cichlid_GRNs/Manuscript/Figures/New/Supplementary/networks/FigS-R3Ac–Ab_edge_degree_dist.tiff', units="in", width=10, height=10, res=300)
ggplot(Ab.degree.histogram, aes(x = Ab.degrees, y = Freq)) +
  geom_point() +
  scale_x_continuous("log10 degree\n(- nodes with this amount of connections)",
                     breaks = c(1, 3, 10, 30, 100, 300, 600),
                     trans = "log10") +
  scale_y_continuous("log10 frequency",
                     breaks = c(1, 3, 10, 30, 100, 300, 1000),
                     trans = "log10") +
  ggtitle(expression(paste(italic("A. burtoni"), " regulatory network edge degree distribution"))) +
theme_bw()
dev.off()

tiff('~/Documents/TGAC/Projects/Cichlid_GRNs/Manuscript/Figures/New/Supplementary/networks/FigS-R3Aa–Mz_edge_degree_dist.tiff', units="in", width=10, height=10, res=300)
ggplot(Mz.degree.histogram, aes(x = Mz.degrees, y = Freq)) +
  geom_point() +
  scale_x_continuous("log10 degree\n(- nodes with this amount of connections)",
                     breaks = c(1, 3, 10, 30, 100, 300),
                     trans = "log10") +
  scale_y_continuous("log10 frequency",
                     breaks = c(1, 3, 10, 30, 100, 300, 1000),
                     trans = "log10") +
  ggtitle(expression(paste(italic("M. zebra"), " regulatory network edge degree distribution"))) +
theme_bw()
dev.off()

tiff('~/Documents/TGAC/Projects/Cichlid_GRNs/Manuscript/Figures/New/Supplementary/networks/FigS-R3Ab–Pn_edge_degree_dist.tiff', units="in", width=10, height=10, res=300)
ggplot(Pn.degree.histogram, aes(x = Pn.degrees, y = Freq)) +
  geom_point() +
  scale_x_continuous("log10 degree\n(- nodes with this amount of connections)",
                     breaks = c(1, 3, 10, 30, 100, 300),
                     trans = "log10") +
  scale_y_continuous("log10 frequency",
                     breaks = c(1, 3, 10, 30, 100, 300, 1000),
                     trans = "log10") +
  ggtitle(expression(paste(italic("P. nyererei"), " regulatory network edge degree distribution"))) +
theme_bw()
dev.off()

tiff('~/Documents/TGAC/Projects/Cichlid_GRNs/Manuscript/Figures/New/Supplementary/networks/FigS-R3Ad–Nb_edge_degree_dist.tiff', units="in", width=10, height=10, res=300)
ggplot(Nb.degree.histogram, aes(x = Nb.degrees, y = Freq)) +
  geom_point() +
  scale_x_continuous("log10 degree\n(- nodes with this amount of connections)",
                     breaks = c(1, 3, 10, 30, 100, 300),
                     trans = "log10") +
  scale_y_continuous("log10 frequency",
                     breaks = c(1, 3, 10, 30, 100, 300, 1000),
                     trans = "log10") +
  ggtitle(expression(paste(italic("N. brichardi"), " regulatory network edge degree distribution"))) +
theme_bw()
dev.off()

tiff('~/Documents/TGAC/Projects/Cichlid_GRNs/Manuscript/Figures/New/Supplementary/networks/FigS-R3Ae–On_edge_degree_dist.tiff', units="in", width=10, height=10, res=300)
ggplot(On.degree.histogram, aes(x = On.degrees, y = Freq)) +
  geom_point() +
  scale_x_continuous("log10 degree\n(- nodes with this amount of connections)",
                     breaks = c(1, 3, 10, 30, 100, 300),
                     trans = "log10") +
  scale_y_continuous("log10 frequency",
                     breaks = c(1, 3, 10, 30, 100, 300, 1000),
                     trans = "log10") +
  ggtitle(expression(paste(italic("O. niloticus"), " regulatory network edge degree distribution"))) +
theme_bw()
dev.off()

# Run the above
R CMD BATCH igraph_degree_dist.R


# a.	Sarah's encoding a network matrix (gene x gene, per species), then building a set of consensus nodes (all species super network)
  # i.	Sum and max no of connectivity occurrences in super network
  # ii.	Using super network, how many are common in all species, between haplochromines only, and pairwise between all species - all nodes/edges and dissected by interactions
  # iii.	Using super network, how many nodes are different in all species, between haplochromines only, and pairwise between all species- all nodes/edges and dissected by interactions
  # iv.	phylogenetic context of node/edge gain and loss - relate to distance.

cd /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes

nano getcols.sh

#!/bin/bash -e
#SBATCH -p tgac-medium # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --mem 48000 # memory pool for all cores
#SBATCH -t 0-23:59 # time (D-HH:MM)
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address

for i in *-Edge_Attributes_Collated4d.txt ; do
  awk '$18=="co-expression_TF-TG" || $18=="promoter_motif"' $i | cut -f3,9 > "$(basename "$i" .txt).coexpr_promONLY.txt"
done

for i in *-Edge_Attributes_Collated4d.txt ; do
  awk '$18=="targetscan7"' $i | cut -f1,9 > "$(basename "$i" .txt).targetscan7ONLY.txt"
done

for i in *-Edge_Attributes_Collated4d.txt ; do
  awk '$18=="CNE_motif" || $18=="aCNE_motif"' $i | cut -f3,5 > "$(basename "$i" .txt).CNEmotifONLY.txt"
done

for i in *-Edge_Attributes_Collated4d.txt ; do
  awk '$18=="CNE_Proximal" || $18=="aCNE_Proximal"' $i | cut -f1,9 > "$(basename "$i" .txt).CNEproximalONLY.txt"
done

# run the above
sbatch getcols.sh

# the above files have been shared with Sarah (hence, in group-vh) and she will prepare a script to encode a simple gene by gene matrix for each species - this we can use for identifying hubs etc.
# Sarah's script in /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes:
# 18/04/18 - this is how her script is ran
# source R-3.3.1
# sbatch -p tgac-medium --mem=60000 --wrap="Rscript NetworkEncoding.R”
# Should create 2 output tables, which can then be further analysed with
# source R-3.3.1
# sbatch -p tgac-long --mem=60000 --wrap="Rscript MatrixAnalysis.R”
# This also creates 2 output files (one for supernetwork and one for intersection). Tables have all the genes in columns and sum, max, number of occurrence in rows.


# b.	Motifs within the networks (miRNA-targetgene-TF) > how many conserved/diverged > compare (see Fig. 3 from PMID: 27794550)
### > need to run this for
# bA. all edges in each species, and
# bB. only 1to1 TF and TG orthologs
#   i.	Characterise the number of single TF motifs coregulating TGs with one or more miRNA and vice versa (miRNA coregulating TGs with at least one motif)
#   ii.	Then, does a particular TF significantly overlap with the targets of a particular miRNA, see Fig. 3 in PMCID: PMC2259112

EDGE=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes)
cd $EDGE

nano threenodemotif.sh

#!/bin/bash -e
#SBATCH -p tgac-medium # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --mem 48000 # memory pool for all cores
#SBATCH -t 1-23:59 # time (D-HH:MM)
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address

# cut geneA, geneB and source columns = targetscan7|co-expression_TF-TG|promoter_motif
for i in *-Edge_Attributes_Collated4d.txt ; do cut -f1,5,18 $i | awk '$3=="targetscan7"' > "$(basename "$i" .txt)_miRNACUT.txt" ; done # miRNA edges
for i in *-Edge_Attributes_Collated4d.txt ; do cut -f1,5,18 $i | awk '$3=="co-expression_TF-TG" || $3=="promoter_motif"' > "$(basename "$i" .txt)_TFCUT.txt" ; done # TF-TG edges
for i in *_miRNACUT.txt ; do cut -f2 $i | sort -u > "$(basename "$i" .txt).a.txt" ; done
for i in *_TFCUT.txt ; do cut -f2 $i | sort -u > "$(basename "$i" .txt).a.txt" ; done

# the match then needs to be to the target gene in each file - miRNA-TFsTG; then TF-miRNAsTG (col2 in each file)
for i in Ab Mz Nb Pn On ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL";}}' $i-Edge_Attributes_Collated4d_miRNACUT.a.txt $i-Edge_Attributes_Collated4d_TFCUT.txt | grep -v 'NULL' > $i-Edge_Attributes_Collated4d_TFCUT.b.txt
done

for i in Ab Mz Nb Pn On ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL";}}' $i-Edge_Attributes_Collated4d_TFCUT.a.txt $i-Edge_Attributes_Collated4d_miRNACUT.txt | grep -v 'NULL' > $i-Edge_Attributes_Collated4d_miRNACUT.b.txt
done

# print TG, TF/miRNA, source, then keep only unique and sort
for i in *CUT.b.txt ; do awk '{print $2,$1,$3}' OFS='\t' $i | sort -u | sort -k1,1 > "$(basename "$i" .b.txt).c.txt" ; done

# Use join to merge the files but with all TF-TG-miRNA combinations
echo Ab > list2
echo Nb >> list2
echo Pn >> list2
echo Mz >> list2
echo On >> list2
while read F ; do join $F-Edge_Attributes_Collated4d_miRNACUT.c.txt $F-Edge_Attributes_Collated4d_TFCUT.c.txt | sed 's/ /\t/g' > $F-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt ; done < list2

sbatch threenodemotif.sh # {DONE}


nano threenodemotif-1to1.sh

#!/bin/bash -e
#SBATCH -p tgac-medium # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --mem 48000 # memory pool for all cores
#SBATCH -t 1-23:59 # time (D-HH:MM)
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address

# cut geneA, geneB and source columns = targetscan7|co-expression_TF-TG|promoter_motif
for i in *-Edge_Attributes_Collated4d.txt ; do cut -f1,5,9,18 $i | awk '$4=="targetscan7"' > "$(basename "$i" .txt)_miRNACUT2.txt" ; done # miRNA edges
for i in *-Edge_Attributes_Collated4d.txt ; do cut -f1,3,5,9,18 $i | awk '$5=="co-expression_TF-TG" || $5=="promoter_motif"' > "$(basename "$i" .txt)_TFCUT2.txt" ; done # TF-TG edges
# map to 1to1 orthologs
for i in *_miRNACUT2.txt ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$3]){print $0,a[$3];}else{print $0,"REMOVEME";}}' ../Module_genesandexpr/OGIDS.1to1.txt5 $i | grep -v 'REMOVEME' > "$(basename "$i" .txt).b.txt" ; done
for i in *_TFCUT2.txt ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' ../Module_genesandexpr/OGIDS.1to1.txt5 $i | grep -v 'REMOVEME' > "$(basename "$i" .txt).a.txt" ; done
for i in *_TFCUT2.a.txt ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$4]){print $0,a[$4];}else{print $0,"REMOVEME";}}' ../Module_genesandexpr/OGIDS.1to1.txt5 $i | grep -v 'REMOVEME' > "$(basename "$i" .a.txt).b.txt" ; done
rm *_TFCUT2.a.txt
# cut the columns you need
for i in *_miRNACUT2.b.txt ; do cut -f2 $i | sort -u > "$(basename "$i" .b.txt).c.txt" ; done
for i in *_TFCUT2.b.txt ; do cut -f3 $i | sort -u > "$(basename "$i" .b.txt).c.txt" ; done

# the match then needs to be to the target gene in each file - miRNA-TFsTG; then TF-miRNAsTG (col2 in each file)
for i in Ab Mz Nb Pn On ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL";}}' $i-Edge_Attributes_Collated4d_miRNACUT2.c.txt $i-Edge_Attributes_Collated4d_TFCUT2.txt | grep -v 'NULL' > $i-Edge_Attributes_Collated4d_TFCUT-1to1.b.txt
done

for i in Ab Mz Nb Pn On ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL";}}' $i-Edge_Attributes_Collated4d_TFCUT2.c.txt $i-Edge_Attributes_Collated4d_miRNACUT2.txt | grep -v 'NULL' > $i-Edge_Attributes_Collated4d_miRNACUT-1to1.b.txt
done

# print TG, TF/miRNA, source, then keep only unique and sort
for i in *_miRNACUT-1to1.b.txt ; do awk '{print $2,$1,$3}' OFS='\t' $i | sort -u | sort -k1,1 > "$(basename "$i" .b.txt).c.txt" ; done
for i in *_TFCUT-1to1.b.txt ; do awk '{print $3,$1,$5}' OFS='\t' $i | sort -u | sort -k1,1 > "$(basename "$i" .b.txt).c.txt" ; done

# Use join to merge the files but with all TF-TG-miRNA combinations
echo Ab > list2
echo Nb >> list2
echo Pn >> list2
echo Mz >> list2
echo On >> list2
while read F ; do join $F-Edge_Attributes_Collated4d_miRNACUT-1to1.c.txt $F-Edge_Attributes_Collated4d_TFCUT-1to1.c.txt | sed 's/ /\t/g' > $F-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt ; done < list2

sbatch threenodemotif-1to1.sh # {DONE}

# remove intermediate files
rm *.a.txt
rm *.b.txt
rm *.c.txt
rm *_miRNACUT*
rm *_TFCUT*

# bA. all edges in each species, and
# i. get total counts for number of motifs, TFs, TGs and miRNAs
wc -l *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt #no. of motifs
# 15,326,512 Ab-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt
# 11,292,000 Mz-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt
#  6,633,227 Nb-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt
# 13,793,670 On-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt
#  9,013,195 Pn-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt
for i in *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt ; do cut -f1 $i | sort -u | wc -l ; done # TFs
# Ab - 10,917
# Mz - 10,389
# Nb - 8,986
# On - 11,234
# Pn - 10,093
for i in *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt ; do cut -f4 $i | sort -u | wc -l ; done # TGs
# Ab - 673
# Mz - 664
# Nb - 521
# On - 701
# Pn - 685
for i in *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt ; do cut -f2 $i | sort -u | wc -l ; done # miRNAs
# Ab - 243
# Mz - 185
# Nb - 183
# On - 198
# Pn - 183

# bB. only 1to1 TF and TG orthologs
# i. get total counts for number of motifs, TFs, TGs and miRNAs
wc -l *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt #no. of motifs
# 9,552,350 Ab-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt
# 7,130,777 Mz-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt
# 4,671,845 Nb-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt
# 8,259,496 On-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt
# 5,767,662 Pn-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt
for i in *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt ; do cut -f1 $i | sort -u | wc -l ; done # TFs
# Ab - 6370
# Mz - 6351
# Nb - 6097
# On - 6470
# Pn - 6232
for i in *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt ; do cut -f4 $i | sort -u | wc -l ; done # TGs
# Ab - 620
# Mz - 614
# Nb - 498
# On - 638
# Pn - 625
for i in *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt ; do cut -f2 $i | sort -u | wc -l ; done # miRNAs
# Ab - 243
# Mz - 185
# Nb - 183
# On - 198
# Pn - 183


# to ask questions of evolutioanry conserved signatures, create present/asbence matrices of TF-TG-miRNA

# 1. using all edges
nano threenodemotif-matrix.sh

#!/bin/bash -e
#SBATCH -p tgac-short # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --mem 28000 # memory pool for all cores
#SBATCH -t 0-0:45 # time (D-HH:MM)
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address

# cut geneA, geneB and source columns = targetscan7|co-expression_TF-TG|promoter_motif
for i in *-Edge_Attributes_Collated4d.txt ; do cut -f1,9,18 $i | awk '$3=="targetscan7"' > "$(basename "$i" .txt)_miRNACUT.txt" ; done # miRNA edges
for i in *-Edge_Attributes_Collated4d.txt ; do cut -f3,9,18 $i | awk '$3=="co-expression_TF-TG" || $3=="promoter_motif"' > "$(basename "$i" .txt)_TFCUT.txt" ; done # TF-TG edges
for i in *_miRNACUT.txt ; do cut -f2 $i | sort -u > "$(basename "$i" .txt).a.txt" ; done
for i in *_TFCUT.txt ; do cut -f2 $i | sort -u > "$(basename "$i" .txt).a.txt" ; done

# the match then needs to be to the target gene in each file - miRNA-TFsTG; then TF-miRNAsTG (col2 in each file)
for i in Ab Mz Nb Pn On ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL";}}' $i-Edge_Attributes_Collated4d_miRNACUT.a.txt $i-Edge_Attributes_Collated4d_TFCUT.txt | grep -v 'NULL' > $i-Edge_Attributes_Collated4d_TFCUT.b.txt
done

for i in Ab Mz Nb Pn On ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL";}}' $i-Edge_Attributes_Collated4d_TFCUT.a.txt $i-Edge_Attributes_Collated4d_miRNACUT.txt | grep -v 'NULL' > $i-Edge_Attributes_Collated4d_miRNACUT.b.txt
done

# print TG, TF/miRNA, source, then keep only unique and sort
for i in *CUT.b.txt ; do awk '{print $2,$1,$3}' OFS='\t' $i | sort -u | sort -k1,1 > "$(basename "$i" .b.txt).c.txt" ; done

# Use join to merge the files but with all TF-TG-miRNA combinations
echo Ab > list2
echo Nb >> list2
echo Pn >> list2
echo Mz >> list2
echo On >> list2
while read F ; do join $F-Edge_Attributes_Collated4d_miRNACUT.c.txt $F-Edge_Attributes_Collated4d_TFCUT.c.txt | sed 's/ /\t/g' > $F-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.a.txt ; done < list2

for i in Mz Pn Ab Nb On ; do
  awk -v i="$i" 'BEGIN{OFS="\t"}$6=i' $i-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.a.txt |
  awk '{print $1":"$4":"$2,$6}' OFS='\t' > $i-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.b.txt
done

# join species files and merge adding the 1/0 for presence/absence in Mz, Pn, Ab, Nb and On
cat *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.b.txt | cut -f1 | sort -u > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$1]){print $0,"1";}else{print $0,"0";}}' Mz-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.b.txt Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.txt > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.Mz.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$1]){print $0,"1";}else{print $0,"0";}}' Pn-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.b.txt Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.Mz.txt > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPn.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$1]){print $0,"1";}else{print $0,"0";}}' Ab-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.b.txt Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPn.txt > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAb.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$1]){print $0,"1";}else{print $0,"0";}}' Nb-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.b.txt Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAb.txt > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNb.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$1]){print $0,"1";}else{print $0,"0";}}' On-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.b.txt Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNb.txt > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn.txt

## Remove intermediate files
rm *_miRNACUT.txt
rm *_TFCUT.txt
rm *_miRNACUT.a.txt
rm *_TFCUT.a.txt
rm *_miRNACUT.b.txt
rm *_TFCUT.b.txt
rm *_miRNACUT.c.txt
rm *_TFCUT.c.txt
rm *_miRNA-TG-TFmotifs.a.txt
rm *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.b.txt
rm Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.txt
rm Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.Mz.txt
rm Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPn.txt
rm Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAb.txt
rm Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNb.txt


# 2. using 1to1 nodes of edges only
nano threenodemotif-1to1-matrix.sh

#!/bin/bash -e
#SBATCH -p tgac-short # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --mem 48000 # memory pool for all cores
#SBATCH -t 0-00:45 # time (D-HH:MM)
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address

# cut geneA, geneB and source columns = targetscan7|co-expression_TF-TG|promoter_motif
for i in *-Edge_Attributes_Collated4d.txt ; do cut -f1,9,18 $i | awk '$3=="targetscan7"' > "$(basename "$i" .txt)_miRNACUT2.txt" ; done # miRNA edges
for i in *-Edge_Attributes_Collated4d.txt ; do cut -f3,9,18 $i | awk '$3=="co-expression_TF-TG" || $3=="promoter_motif"' > "$(basename "$i" .txt)_TFCUT2.txt" ; done # TF-TG edges
# map to 1to1 orthologs
for i in *_miRNACUT2.txt ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' ../Module_genesandexpr/OGIDS.1to1.txt5 $i | grep -v 'REMOVEME' > "$(basename "$i" .txt).b.txt" ; done
for i in *_TFCUT2.txt ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$1]){print $0,a[$1];}else{print $0,"REMOVEME";}}' ../Module_genesandexpr/OGIDS.1to1.txt5 $i | grep -v 'REMOVEME' > "$(basename "$i" .txt).a.txt" ; done
for i in *_TFCUT2.a.txt ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' ../Module_genesandexpr/OGIDS.1to1.txt5 $i | grep -v 'REMOVEME' > "$(basename "$i" .a.txt).b.txt" ; done
rm *_TFCUT2.a.txt
# cut the columns you need
for i in *_miRNACUT2.b.txt ; do cut -f2 $i | sort -u > "$(basename "$i" .b.txt).c.txt" ; done
for i in *_TFCUT2.b.txt ; do cut -f2 $i | sort -u > "$(basename "$i" .b.txt).c.txt" ; done

# the match then needs to be to the target gene in each file - miRNA-TFsTG; then TF-miRNAsTG (col2 in each file)
for i in Ab Mz Nb Pn On ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL";}}' $i-Edge_Attributes_Collated4d_miRNACUT2.c.txt $i-Edge_Attributes_Collated4d_TFCUT2.txt | grep -v 'NULL' > $i-Edge_Attributes_Collated4d_TFCUT-1to1.b.txt
done

for i in Ab Mz Nb Pn On ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL";}}' $i-Edge_Attributes_Collated4d_TFCUT2.c.txt $i-Edge_Attributes_Collated4d_miRNACUT2.txt | grep -v 'NULL' > $i-Edge_Attributes_Collated4d_miRNACUT-1to1.b.txt
done

# print TG, TF/miRNA, source, then keep only unique and sort
for i in *_miRNACUT-1to1.b.txt ; do awk '{print $2,$1,$3}' OFS='\t' $i | sort -u | sort -k1,1 > "$(basename "$i" .b.txt).c.txt" ; done
for i in *_TFCUT-1to1.b.txt ; do awk '{print $2,$1,$3}' OFS='\t' $i | sort -u | sort -k1,1 > "$(basename "$i" .b.txt).c.txt" ; done

# Use join to merge the files but with all TF-TG-miRNA combinations
echo Ab > list2
echo Nb >> list2
echo Pn >> list2
echo Mz >> list2
echo On >> list2
while read F ; do join $F-Edge_Attributes_Collated4d_miRNACUT-1to1.c.txt $F-Edge_Attributes_Collated4d_TFCUT-1to1.c.txt | sed 's/ /\t/g' > $F-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.a.txt ; done < list2

for i in Mz Pn Ab Nb On ; do
  awk -v i="$i" 'BEGIN{OFS="\t"}$6=i' $i-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.a.txt |
  awk '{print $1":"$4":"$2,$6}' OFS='\t' > $i-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.b.txt
done

# join species files and merge adding the 1/0 for presence/absence in Mz, Pn, Ab, Nb and On
cat *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.b.txt | cut -f1 | sort -u > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$1]){print $0,"1";}else{print $0,"0";}}' Mz-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.b.txt Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.txt > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.Mz.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$1]){print $0,"1";}else{print $0,"0";}}' Pn-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.b.txt Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.Mz.txt > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPn.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$1]){print $0,"1";}else{print $0,"0";}}' Ab-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.b.txt Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPn.txt > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPnAb.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$1]){print $0,"1";}else{print $0,"0";}}' Nb-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.b.txt Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPnAb.txt > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPnAbNb.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$1]){print $0,"1";}else{print $0,"0";}}' On-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.b.txt Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPnAbNb.txt > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPnAbNbOn.txt

## Remove intermediate files
rm *_miRNACUT2.txt
rm *_TFCUT2.txt
rm *_miRNACUT2.a.txt
rm *_TFCUT2.a.txt
rm *_miRNACUT2.b.txt
rm *_TFCUT2.b.txt
rm *_miRNACUT2.c.txt
rm *_TFCUT2.c.txt
rm *_miRNA-TG-TFmotifs-1to1.a.txt
rm *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.b.txt
rm Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.txt
rm Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.Mz.txt
rm Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPn.txt
rm Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPnAb.txt
rm Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPnAbNb.txt
rm *_TFCUT-1to1.c.txt
rm *_miRNACUT-1to1.c.txt
rm *_miRNACUT-1to1.b.txt
rm *_TFCUT-1to1.b.txt

###### ~~~~ final TF-TG-miRNA matrices files to use ~~~~ ######
/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn.txt
/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPnAbNbOn.txt

#bC. how many conserved in all five species?
# 1. all edges
awk '$2==1 && $3==1 && $4==1 && $5==1 && $6==1' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn.txt | wc -l # 467,279/37,320,950 (1.3%)
# 2. 1to1 node edges
awk '$2==1 && $3==1 && $4==1 && $5==1 && $6==1' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPnAbNbOn.txt | wc -l # 467279/21708657 (2.2%)

#bD. how many conserved in all haplochromines only?
# 1. all edges
awk '$2==1 && $3==1 && $4==1 && $5==0 && $6==0' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn.txt | wc -l # 641,700/37,320,950 (1.7%)
# 2. 1to1 node edges
awk '$2==1 && $3==1 && $4==1 && $5==0 && $6==0' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPnAbNbOn.txt | wc -l # 450786/21708657 (2.1%)

#bE. how many conserved between Mz and Pn only
# 1. all edges
awk '$2==1 && $3==1 && $4==0 && $5==0 && $6==0' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn.txt | wc -l # 710,069/37,320,950 (1.9%)
# 2. 1to1 node edges
awk '$2==1 && $3==1 && $4==0 && $5==0 && $6==0' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPnAbNbOn.txt | wc -l # 433,606/21708657 (2.0%)

#bF. overlap of any housekeeping genes in conserved sets?

# housekeeping genes (https://www.sciencedirect.com/science/article/pii/S1567133X11000184?via%3Dihub)
# OG6966_0 OG15115_0 - Atp5g3, mitochondrial ATP synthase subunit 9, that expresses in a wide range of tissues
# OG8991_0 - ybx1
# OG1847_0 - gapdhs
# OG14597_0 - cyyr1

for i in OG6966_0 OG15115_0 OG8991_0 OG1847_0 OG14597_0; do
  awk '$2==1 && $3==1 && $4==1 && $5==1 && $6==1' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn.txt | grep $i > 3nodemotif_housekeeping.txt
  awk '$2==1 && $3==1 && $4==1 && $5==1 && $6==1' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPnAbNbOn.txt | grep $i >> 3nodemotif_housekeeping.txt
  awk '$2==1 && $3==1 && $4==1 && $5==0 && $6==0' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn.txt | grep $i >> 3nodemotif_housekeeping.txt
  awk '$2==1 && $3==1 && $4==1 && $5==0 && $6==0' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPnAbNbOn.txt | grep $i >> 3nodemotif_housekeeping.txt
  awk '$2==1 && $3==1 && $4==0 && $5==0 && $6==0' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn.txt | grep $i >> 3nodemotif_housekeeping.txt
  awk '$2==1 && $3==1 && $4==0 && $5==0 && $6==0' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.c.MzPnAbNbOn.txt | grep $i >> 3nodemotif_housekeeping.txt
done

# ybx1 housekeeping gene is a TF or a target in three node motifs conserved in all five species
for i in OG6966_0 OG15115_0 OG8991_0 OG1847_0 OG14597_0; do
  grep $i Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn.txt | awk '$2==1 && $3==1 && $4==1 && $5==1 && $6==1'
done

# OG10300_0:OG8991_0:miR-429a	1	1	1	1	1
# OG10300_0:OG8991_0:miR-429b	1	1	1	1	1
# OG10525_0:OG8991_0:miR-730	1	1	1	1	1
# OG13566_0:OG8991_0:miR-150	1	1	1	1	1
# OG13566_0:OG8991_0:miR-155	1	1	1	1	1
# OG13566_0:OG8991_0:miR-205	1	1	1	1	1
# OG4561_0:OG8991_0:miR-1388	1	1	1	1	1
# OG4561_0:OG8991_0:miR-192	1	1	1	1	1
# OG4561_0:OG8991_0:miR-489	1	1	1	1	1
# OG4561_0:OG8991_0:miR-723a	1	1	1	1	1
# OG4561_0:OG8991_0:miR-723b	1	1	1	1	1
# OG4561_0:OG8991_0:miR-725	1	1	1	1	1
# OG4561_0:OG8991_0:miR-96	1	1	1	1	1
# OG5398_0:OG8991_0:miR-181a	1	1	1	1	1
# OG5398_0:OG8991_0:miR-181b	1	1	1	1	1
# OG5398_0:OG8991_0:miR-23a	1	1	1	1	1
# OG5398_0:OG8991_0:miR-23b	1	1	1	1	1
# OG5398_0:OG8991_0:miR-23c	1	1	1	1	1
# OG5976_0:OG8991_0:miR-16c	1	1	1	1	1
# OG5976_0:OG8991_0:miR-204	1	1	1	1	1
# OG5976_0:OG8991_0:miR-21	1	1	1	1	1
# OG8930_0:OG8991_0:miR-10004	1	1	1	1	1
# OG8991_0:OG10032_0:miR-153a	1	1	1	1	1
# OG8991_0:OG10032_0:miR-153b	1	1	1	1	1
# OG8991_0:OG10032_0:miR-153c	1	1	1	1	1
# OG8991_0:OG10503_0:miR-153a	1	1	1	1	1
# OG8991_0:OG10503_0:miR-153b	1	1	1	1	1
# OG8991_0:OG10503_0:miR-153c	1	1	1	1	1
# OG8991_0:OG11092_0:miR-153a	1	1	1	1	1
# OG8991_0:OG11092_0:miR-153b	1	1	1	1	1
# OG8991_0:OG11092_0:miR-153c	1	1	1	1	1
# OG8991_0:OG11286_0:miR-153a	1	1	1	1	1
# OG8991_0:OG11286_0:miR-153b	1	1	1	1	1
# OG8991_0:OG11286_0:miR-153c	1	1	1	1	1
# OG8991_0:OG11307_0:miR-153a	1	1	1	1	1
# OG8991_0:OG11307_0:miR-153b	1	1	1	1	1
# OG8991_0:OG11307_0:miR-153c	1	1	1	1	1
# OG8991_0:OG11668_0:miR-153a	1	1	1	1	1
# OG8991_0:OG11668_0:miR-153b	1	1	1	1	1
# OG8991_0:OG11668_0:miR-153c	1	1	1	1	1
# OG8991_0:OG13887_0:miR-153a	1	1	1	1	1
# OG8991_0:OG13887_0:miR-153b	1	1	1	1	1
# OG8991_0:OG13887_0:miR-153c	1	1	1	1	1
# OG8991_0:OG14898_0:miR-153a	1	1	1	1	1
# OG8991_0:OG14898_0:miR-153b	1	1	1	1	1
# OG8991_0:OG14898_0:miR-153c	1	1	1	1	1
# OG8991_0:OG14912_0:miR-153a	1	1	1	1	1
# OG8991_0:OG14912_0:miR-153b	1	1	1	1	1
# OG8991_0:OG14912_0:miR-153c	1	1	1	1	1
# OG8991_0:OG456_0:miR-153a	1	1	1	1	1
# OG8991_0:OG456_0:miR-153b	1	1	1	1	1
# OG8991_0:OG456_0:miR-153c	1	1	1	1	1
# OG8991_0:OG4688_0:miR-153a	1	1	1	1	1
# OG8991_0:OG4688_0:miR-153b	1	1	1	1	1
# OG8991_0:OG4688_0:miR-153c	1	1	1	1	1
# OG8991_0:OG4758_0:miR-153a	1	1	1	1	1
# OG8991_0:OG4758_0:miR-153b	1	1	1	1	1
# OG8991_0:OG4758_0:miR-153c	1	1	1	1	1
# OG8991_0:OG4974_0:miR-153a	1	1	1	1	1
# OG8991_0:OG4974_0:miR-153b	1	1	1	1	1
# OG8991_0:OG4974_0:miR-153c	1	1	1	1	1
# OG8991_0:OG7567_0:miR-153a	1	1	1	1	1
# OG8991_0:OG7567_0:miR-153b	1	1	1	1	1
# OG8991_0:OG7567_0:miR-153c	1	1	1	1	1
# OG8991_0:OG7724_0:miR-153a	1	1	1	1	1
# OG8991_0:OG7724_0:miR-153b	1	1	1	1	1
# OG8991_0:OG7724_0:miR-153c	1	1	1	1	1
# OG8991_0:OG9029_0:miR-153a	1	1	1	1	1
# OG8991_0:OG9029_0:miR-153b	1	1	1	1	1
# OG8991_0:OG9029_0:miR-153c	1	1	1	1	1

# housekeeping haplochromine conservation only
# ybx1 housekeeping gene is a TF or a target in three node motifs conserved in haplochromines
# gapdhs as a TF in three node motifs conserved in haplochromines
for i in OG6966_0 OG15115_0 OG8991_0 OG1847_0 OG14597_0; do
  grep $i Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn.txt | awk '$2==1 && $3==1 && $4==1 && $5==0 && $6==0'
done

# OG10525_0:OG8991_0:miR-10d-5p	1	1	1	0	0
# OG10525_0:OG8991_0:miR-194b	1	1	1	0	0
# OG10525_0:OG8991_0:miR-499	1	1	1	0	0
# OG10525_0:OG8991_0:miR-734	1	1	1	0	0
# OG11493_0:OG8991_0:miR-10004	1	1	1	0	0
# OG11493_0:OG8991_0:miR-146	1	1	1	0	0
# OG4561_0:OG8991_0:miR-135d	1	1	1	0	0
# OG4561_0:OG8991_0:miR-181a	1	1	1	0	0
# OG4561_0:OG8991_0:miR-181b	1	1	1	0	0
# OG8991_0:OG10402_0:miR-137	1	1	1	0	0
# OG8991_0:OG12815_0:miR-137	1	1	1	0	0
# OG8991_0:OG14229_0:miR-137	1	1	1	0	0
# OG8991_0:OG14229_0:miR-153a	1	1	1	0	0
# OG8991_0:OG14229_0:miR-153b	1	1	1	0	0
# OG8991_0:OG14229_0:miR-153c	1	1	1	0	0
# OG8991_0:OG2728_0:miR-137	1	1	1	0	0
# OG8991_0:OG4759_0:miR-137	1	1	1	0	0
# OG8991_0:OG7539_0:miR-137	1	1	1	0	0
# OG8991_0:OG7539_0:miR-153a	1	1	1	0	0
# OG8991_0:OG7539_0:miR-153b	1	1	1	0	0
# OG8991_0:OG7539_0:miR-153c	1	1	1	0	0
# OG8991_0:OG9289_0:miR-137	1	1	1	0	0
# OG8991_0:OG9663_0:miR-137	1	1	1	0	0
# OG1847_0:OG10036_0:miR-10014	1	1	1	0	0
# OG1847_0:OG10036_0:miR-214	1	1	1	0	0
# OG1847_0:OG10036_0:miR-34	1	1	1	0	0
# OG1847_0:OG10402_0:miR-10014	1	1	1	0	0
# OG1847_0:OG10402_0:miR-214	1	1	1	0	0
# OG1847_0:OG10402_0:miR-34	1	1	1	0	0
# OG1847_0:OG11038_0:miR-10014	1	1	1	0	0
# OG1847_0:OG11038_0:miR-214	1	1	1	0	0
# OG1847_0:OG11038_0:miR-34	1	1	1	0	0
# OG1847_0:OG11101_0:miR-10014	1	1	1	0	0
# OG1847_0:OG11101_0:miR-214	1	1	1	0	0
# OG1847_0:OG11101_0:miR-34	1	1	1	0	0
# OG1847_0:OG11689_0:miR-10014	1	1	1	0	0
# OG1847_0:OG11689_0:miR-214	1	1	1	0	0
# OG1847_0:OG11689_0:miR-34	1	1	1	0	0
# OG1847_0:OG13684_0:miR-10014	1	1	1	0	0
# OG1847_0:OG13684_0:miR-214	1	1	1	0	0
# OG1847_0:OG13684_0:miR-34	1	1	1	0	0
# OG1847_0:OG14912_0:miR-10014	1	1	1	0	0
# OG1847_0:OG14912_0:miR-214	1	1	1	0	0
# OG1847_0:OG14912_0:miR-34	1	1	1	0	0
# OG1847_0:OG15265_0:miR-10014	1	1	1	0	0
# OG1847_0:OG15265_0:miR-214	1	1	1	0	0
# OG1847_0:OG15265_0:miR-34	1	1	1	0	0
# OG1847_0:OG15527_0:miR-10014	1	1	1	0	0
# OG1847_0:OG15527_0:miR-214	1	1	1	0	0
# OG1847_0:OG15527_0:miR-34	1	1	1	0	0
# OG1847_0:OG2136_0:miR-10014	1	1	1	0	0
# OG1847_0:OG2136_0:miR-214	1	1	1	0	0
# OG1847_0:OG2136_0:miR-34	1	1	1	0	0
# OG1847_0:OG2535_0:miR-10014	1	1	1	0	0
# OG1847_0:OG2535_0:miR-214	1	1	1	0	0
# OG1847_0:OG2535_0:miR-34	1	1	1	0	0
# OG1847_0:OG2537_0:miR-10014	1	1	1	0	0
# OG1847_0:OG2537_0:miR-214	1	1	1	0	0
# OG1847_0:OG2537_0:miR-34	1	1	1	0	0
# OG1847_0:OG3184_0:miR-10014	1	1	1	0	0
# OG1847_0:OG3184_0:miR-214	1	1	1	0	0
# OG1847_0:OG3184_0:miR-34	1	1	1	0	0
# OG1847_0:OG3582_0:miR-10014	1	1	1	0	0
# OG1847_0:OG3582_0:miR-214	1	1	1	0	0
# OG1847_0:OG3582_0:miR-34	1	1	1	0	0
# OG1847_0:OG4198_0:miR-10014	1	1	1	0	0
# OG1847_0:OG4198_0:miR-214	1	1	1	0	0
# OG1847_0:OG4198_0:miR-34	1	1	1	0	0
# OG1847_0:OG4989_0:miR-10014	1	1	1	0	0
# OG1847_0:OG4989_0:miR-214	1	1	1	0	0
# OG1847_0:OG4989_0:miR-34	1	1	1	0	0
# OG1847_0:OG5051_0:miR-10014	1	1	1	0	0
# OG1847_0:OG5051_0:miR-214	1	1	1	0	0
# OG1847_0:OG5051_0:miR-34	1	1	1	0	0
# OG1847_0:OG5053_0:miR-10014	1	1	1	0	0
# OG1847_0:OG5053_0:miR-214	1	1	1	0	0
# OG1847_0:OG5053_0:miR-34	1	1	1	0	0
# OG1847_0:OG605_0:miR-10014	1	1	1	0	0
# OG1847_0:OG605_0:miR-214	1	1	1	0	0
# OG1847_0:OG605_0:miR-34	1	1	1	0	0
# OG1847_0:OG606_0:miR-10014	1	1	1	0	0
# OG1847_0:OG606_0:miR-214	1	1	1	0	0
# OG1847_0:OG606_0:miR-34	1	1	1	0	0
# OG1847_0:OG6541_0:miR-10014	1	1	1	0	0
# OG1847_0:OG6541_0:miR-214	1	1	1	0	0
# OG1847_0:OG6541_0:miR-34	1	1	1	0	0
# OG1847_0:OG6985_0:miR-10014	1	1	1	0	0
# OG1847_0:OG6985_0:miR-214	1	1	1	0	0
# OG1847_0:OG6985_0:miR-34	1	1	1	0	0
# OG1847_0:OG7567_0:miR-10014	1	1	1	0	0
# OG1847_0:OG7567_0:miR-214	1	1	1	0	0
# OG1847_0:OG7567_0:miR-34	1	1	1	0	0
# OG1847_0:OG9068_0:miR-10014	1	1	1	0	0
# OG1847_0:OG9068_0:miR-214	1	1	1	0	0
# OG1847_0:OG9068_0:miR-34	1	1	1	0	0
# OG1847_0:OG9289_0:miR-10014	1	1	1	0	0
# OG1847_0:OG9289_0:miR-214	1	1	1	0	0
# OG1847_0:OG9289_0:miR-34	1	1	1	0	0
# OG1847_0:OG9422_0:miR-10014	1	1	1	0	0
# OG1847_0:OG9422_0:miR-214	1	1	1	0	0
# OG1847_0:OG9422_0:miR-34	1	1	1	0	0

# any candidate genes in these sets?
awk '$2==1 && $3==1 && $4==1 && $5==1 && $6==1' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn.txt > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn-5cons.txt
awk '$2==1 && $3==1 && $4==1 && $5==0 && $6==0' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn.txt > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn-haplocons.txt
awk '$2==1 && $3==1 && $4==0 && $5==0 && $6==0' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn.txt > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn-MzPncons.txt

cut -f1 /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/9.Candidates/Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt2 | xargs -i grep -i {} Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn-5cons.txt > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn-5cons_cand.txt
cut -f1 /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/9.Candidates/Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt2 | xargs -i grep -i {} Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn-haplocons.txt > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn-haplocons_cand.txt
cut -f1 /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/9.Candidates/Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt2 | xargs -i grep -i {} Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn-MzPncons.txt > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.c.MzPnAbNbOn-MzPncons_cand.txt

# ii. TF-miRNA significant overlap
# for this, just run counts of each TF-miRNA relationship by cutting (from same TG line - the TF, miRNA), then joining (TF-miRNA), then counting occurences.

nano TF-miRNAoverlap.sh

#!/bin/bash -e
#SBATCH -p tgac-medium # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --mem 38000 # memory pool for all cores
#SBATCH -t 0-5:59 # time (D-HH:MM)
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../Module_genesandexpr/OGIDS.txt5-ab Ab-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt > Ab-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../Module_genesandexpr/OGIDS.txt5-ab Ab-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt > Ab-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../Module_genesandexpr/OGIDS.txt5-mz Mz-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt > Mz-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../Module_genesandexpr/OGIDS.txt5-mz Mz-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt > Mz-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../Module_genesandexpr/OGIDS.txt5-pn Pn-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt > Pn-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../Module_genesandexpr/OGIDS.txt5-pn Pn-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt > Pn-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../Module_genesandexpr/OGIDS.txt5-nb Nb-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt > Nb-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../Module_genesandexpr/OGIDS.txt5-nb Nb-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt > Nb-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../Module_genesandexpr/OGIDS.txt5-on On-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt > On-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../Module_genesandexpr/OGIDS.txt5-on On-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt > On-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt2

# A. All edges
for i in *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt2 ; do
  awk '{print $6":"$2}' $i | sort | uniq -c | sed 's/ //g' | sed 's/ab.gene/\tab.gene/g' | sed 's/nb.gene/\tnb.gene/g' | sed 's/pn.gene/\tpn.gene/g' | sed 's/mz.gene/\tmz.gene/g' | sed 's/on.gene/\ton.gene/g' | sort -k1,1rn | sed $'s/OG/\tOG/g' > "$(basename "$i" .txt2).TF-miRNAoverlap.txt"
done

# B. 1to1 edges only
for i in *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.txt2 ; do
  awk '{print $6":"$2}' $i | sort | uniq -c | sed 's/ //g' | sed 's/ab.gene/\tab.gene/g' | sed 's/nb.gene/\tnb.gene/g' | sed 's/pn.gene/\tpn.gene/g' | sed 's/mz.gene/\tmz.gene/g' | sed 's/on.gene/\ton.gene/g' | sort -k1,1rn | sed $'s/OG/\tOG/g' > "$(basename "$i" .txt2).TF-miRNAoverlap.txt"
done

# remove intermediates
rm *.txt2

# run the above
sbatch TF-miRNAoverlap.sh

cp *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-* /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/
cp *.TF-miRNAoverlap.txt /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/

# count files are local here:
/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/*.TF-miRNAoverlap.txt

# add species column to each file
for i in Mz Pn Ab Nb On ; do
  awk -v i="$i" 'BEGIN{OFS="\t"}$3=i' $i-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.TF-miRNAoverlap.txt > $i-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.TF-miRNAoverlap.txt2
done

for i in Mz Pn Ab Nb On ; do
  awk -v i="$i" 'BEGIN{OFS="\t"}$3=i' $i-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.TF-miRNAoverlap.txt > $i-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.TF-miRNAoverlap.txt2
done

# collate each species file for plotting
cat *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.TF-miRNAoverlap.txt2 | sort -k1,1 -rn > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.TF-miRNAoverlap.txt2
cat *-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.TF-miRNAoverlap.txt2 | sort -k1,1 -rn > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.TF-miRNAoverlap.txt2

# before plotting, map the geneA (TF) orthogroups to gene_symbols
awk -F':' '{print $1,$2}' OFS='\t' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.TF-miRNAoverlap.txt2 | cut -f2 > OGs1
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../OGIDS.txt5 OGs1 | cut -f1,11,13,16 | awk '{OFS="\t"} {if ($2=="NULL") $2=$3; print $0}' | awk '{OFS="\t"} {if ($3=="NULL") $3=$4; print $0}' | awk '{OFS="\t"} {if ($4=="NULL") $4=$3; print $0}' | awk '{OFS="\t"} {if ($3=="NULL") $3=$2; print $0}' | awk '{OFS="\t"} {if ($2=="NULL") $2=$4; print $0}' | awk '{OFS="\t"} {if ($2=="NULL" || $3=="NULL" || $4=="NULL") $2=$1; print $0}' | cut -f2 > OGs2
paste -d'\t' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.TF-miRNAoverlap.txt2 OGs2 | awk -F':' '{print $1,$2}' OFS='\t' | awk '{print $1,$5":"$3,$4}' OFS='\t' | sed 's/_(1_of_many)//g' > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.TF-miRNAoverlap.txt2a ; rm OGs1 ; rm OGs2

awk -F':' '{print $1,$2}' OFS='\t' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.TF-miRNAoverlap.txt2 | cut -f2 > OGs1
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../OGIDS.txt5 OGs1 | cut -f1,11,13,16 | awk '{OFS="\t"} {if ($2=="NULL") $2=$3; print $0}' | awk '{OFS="\t"} {if ($3=="NULL") $3=$4; print $0}' | awk '{OFS="\t"} {if ($4=="NULL") $4=$3; print $0}' | awk '{OFS="\t"} {if ($3=="NULL") $3=$2; print $0}' | awk '{OFS="\t"} {if ($2=="NULL") $2=$4; print $0}' | awk '{OFS="\t"} {if ($2=="NULL" || $3=="NULL" || $4=="NULL") $2=$1; print $0}' | cut -f2 > OGs2
paste -d'\t' Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.TF-miRNAoverlap.txt2 OGs2 | awk -F':' '{print $1,$2}' OFS='\t' | awk '{print $1,$5":"$3,$4}' OFS='\t' | sed 's/_(1_of_many)//g' > Edge_Attributes_Collated4d_miRNA-TG-TFmotifs-1to1.TF-miRNAoverlap.txt2a ; rm OGs1 ; rm OGs2








# how does this compare, in each species - plot the top 100 relationships (in a heatmap of counts) including all five species to observe any correlation:
# /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/threenodemotifplots.R


# # to get stats on network motifs, can run mfinder
# cd /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/
# wget http://www.weizmann.ac.il/mcb/UriAlon/sites/mcb.UriAlon/files/uploads/mfinder1.21_unix.tar
# tar -xvf mfinder1.21_unix.tar
# cd mfinder1.21
# make
# mkdir input_files
# cd input_files
# # input files are similar to fanmod below so amend those!
# for i in ../../fanmod/input_files/*.FANMOD ; do
#   awk '$3=1' OFS='\t' $i | sort -u | awk '$1!=$2' > "$(basename "$i" .FANMOD).mfinder"
# done
# cd ../
# mkdir output_files
#
# # run mfinder
# ./mfinder input_files/Mz-Edge_Attributes_Collated4c.txt.mfinder -s 3 -r 100 -f output_files/Mz-Edge_Attributes_Collated4c.txt.mfinder.out


# ####### Don't bother reporting FANMOD analysis - not much point
# # iii. FANMOD analysis
#
# ###### Originally, did not get FANMOD to run on command line but runs on Applications however, integers cannot go above 65535
# ## Instead, install through a separate network analysis tool - IndeCut
#
# ## install on cluster to run
# slurm
# ssh software
# # source hpccore-5
# mkdir -p /tgac/software/testing/fanmod/0.1/{src,x86_64}
# source git-2.7.1
# cd /tgac/software/testing/fanmod/0.1/src
# git clone https://github.com/megrawlab/IndeCut.git # download all source code from IndeCut
#
# cp -r IndeCut/software/fanmod/source-code/* .
# rm -r IndeCut/
#
# # make_fanmod:
# cd ../
# make -C src/ clean
# make -C src/ all
#
# # create a wrapper for the program - this needs refining as does not work
# cp -r src/* x86_64/
# create-software-testing-wrapper fanmod-0.1
# # update software wrapper
# vim /tgac/software/testing/bin/fanmod-0.1
# i
# #insert
# source gcc-5.3.0
# export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/tgac/software/testing/fanmod/0.1/x86_64/fanmod_linux:/tgac/software/testing/fanmod/0.1/x86_64/fanmod_linux
# esc
# :wq
#
# # add fanmod to ~/.bash_profile and ~/.bashrc and source
# echo 'alias fanmod='/tgac/software/testing/fanmod/0.1/x86_64/fanmod_linux'' >> ~/.bash_profile
# echo 'alias fanmod='/tgac/software/testing/fanmod/0.1/x86_64/fanmod_linux'' >> ~/.bashrc
# source ~/.bash_profile ; source ~/.bashrc
#
#
# # ## this is for local installation
# # cd /Users/mehtat/Downloads
# # git clone https://github.com/megrawlab/IndeCut.git # download all source code from IndeCut
# # cd /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes # copy fanmod to here (as per below)
# # cp -r /Users/mehtat/Downloads/IndeCut/software/fanmod .
# # # make_fanmod:
# # make -C fanmod/source-code/ clean
# # make -C fanmod/source-code/ all
# # # add fanmod to ~/.bash_profile and ~/.bashrc and source
# # echo 'alias fanmod='/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/fanmod/source-code/fanmod_linux'' >> ~/.bash_profile
# # echo 'alias fanmod='/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/fanmod/source-code/fanmod_linux'' >> ~/.bashrc
# # source ~/.bash_profile ; source ~/.bashrc
# # # now, fanmod can be ran by just typing 'fanmod'
# # # make directory for input files
# # mkdir /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/fanmod/input_files
# #
# # # prepare a unified script so that fanmod can be ran with simple input files etc. (parameters can be changed by altering the script):
# # cd /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/fanmod
#
# mkdir /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/fanmod
# mkdir /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/fanmod/input_files
#
# cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/fanmod
# # prepare a unified script so that fanmod can be ran with simple input files etc. (parameters can be changed by altering the script):
# nano run_fanmod.sh
#
# #!/bin/bash
#
# thisdir=`pwd`
# prog='/tgac/software/testing/fanmod/0.1/x86_64/fanmod_linux'
# ingraph_dir=$thisdir/input_files
#
# graphname=$1
# ngraphs=$2
# input_graph=$ingraph_dir/$graphname.FANMOD
# outdir=$thisdir/fn_out/$graphname.$ngraphs
#
# if [ ! -d $outdir ]
# then
#     mkdir -p $outdir
# fi
#
# motifsize=3 #3-8
# nsamps=100000 # Here you can select how many samples shall be taken in order to estimate the number of subgraphs (motif candidates) that will be found during the search - best to keep default
# full_enum=1
# infilename=$infile
# directed=1
# colored_vertices=1
# colored_edges=0
# random_type=0
# regard_vertex_colors=1
# regard_edge_colors=0
# reest_subgraph_num=0
# nrandnets=$ngraphs
# nexchanges_per_edge=3
# nexchange_attempts_per_edge=3
# outfile_format=0
# create_dumpfile=0
#
# outfile=$outdir/$graphname.rand.fanmod.txt
# timerec=$outdir/$graphname.time.txt
#
# date > $timerec
#
# $prog $motifsize $nsamps $full_enum $input_graph $directed $colored_vertices $colored_edges $random_type $regard_vertex_colors $regard_edge_colors $reest_subgraph_num $nrandnets $nexchanges_per_edge $nexchange_attempts_per_edge $outfile $outfile_format $create_dumpfile
#
# date >> $timerec
#
# outfilesdir=$outdir/$graphname.rand.fanmod
#
#
#
# # prep files FOR FANMOD INPUT
# EDGE=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes)
# cd $EDGE
#
# # A. for all edges
# nano prepFANMOD.sh
#
# #!/bin/bash -e
# #SBATCH -p tgac-medium # partition (queue)
# #SBATCH -N 1 # number of nodes
# #SBATCH -n 1 # number of tasks
# #SBATCH --mem 38000 # memory pool for all cores
# #SBATCH -t 0-5:59 # time (D-HH:MM)
# #SBATCH -o slurm.%N.%j.out # STDOUT
# #SBATCH -e slurm.%N.%j.err # STDERR
# #SBATCH --mail-type=ALL # notifications for job done & fail
# #SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address
#
# for i in *-Edge_Attributes_Collated4d.txt ; do
#   cut -f1,18 $i | awk '$2=="targetscan7" || $2=="co-expression_TF-TG" || $2=="promoter_motif"' > $i.geneA # cut geneA columns with source to filter out unwanted source rows
#   cut -f5,18 $i | awk '$2=="targetscan7" || $2=="co-expression_TF-TG" || $2=="promoter_motif"' > $i.geneB # cut geneB columns with source to filter out unwanted source rows
# done
#
# echo ab > list1
# echo nb >> list1
# echo pn >> list1
# echo mz >> list1
# echo on >> list1
#
# while read -u 3 -r file1 && read -u 4 -r file2 # map geneA and geneB to OGIDs and use OGIDs to assign number by removing letters
# do
#   awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-${file1} ${file2}-Edge_Attributes_Collated4d.txt.geneA | sed 's/OG//g' | sed 's/_0//g' | sed 's/_1//g' | sed 's/_2//g' > ${file2}-Edge_Attributes_Collated4d.txt.geneA.1
# done 3<list1 4<list2
#
# while read -u 3 -r file1 && read -u 4 -r file2 # map geneA and geneB to OGIDs and use OGIDs to assign number by removing letters
# do
#   awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-${file1} ${file2}-Edge_Attributes_Collated4d.txt.geneB | sed 's/OG//g' | sed 's/_0//g' | sed 's/_1//g' | sed 's/_2//g' > ${file2}-Edge_Attributes_Collated4d.txt.geneB.1
# done 3<list1 4<list2
#
# cat *.geneA | grep 'targetscan7' | cut -f1 | sort -u | awk '$1=(NR+20000 "\t" $1)' | awk '{print $2,$1}' OFS='\t' > miRNA_OGIDs.txt # create integer only IDs starting from 20001 for all miRNAs
#
# for i in *-Edge_Attributes_Collated4d.txt ; do
#   awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' miRNA_OGIDs.txt $i.geneA | cut -f3 > $i.geneA.2 # map all miRNAs to integer only IDs
# done
#
# # If the number of integers allow, load above files into FANMOD and run to generate stats here: /Applications/Fanmod.app
# paste -d'\t' Ab*.geneA.1 Ab*.geneB.1 Ab*.geneA.2 | sed 's/targetscan7/1/g' | sed 's/co-expression_TF-TG/2/g' | sed 's/promoter_motif/3/g' | awk '{if($2 == "1")print $7, $6, $2;else print $3, $6, $2;}' OFS=' ' | grep -v NA | sort -u > Ab-Edge_Attributes_Collated4d.txt.FANMOD # create integer only interactions and add colour for third column (edge source; 1 - targetscan7; 2 - co-expression_TF-TG; 3 - promoter_motif)
# paste -d'\t' Mz*.geneA.1 Mz*.geneB.1 Mz*.geneA.2 | sed 's/targetscan7/1/g' | sed 's/co-expression_TF-TG/2/g' | sed 's/promoter_motif/3/g' | awk '{if($2 == "1")print $7, $6, $2;else print $3, $6, $2;}' OFS=' ' | grep -v NA | sort -u > Mz-Edge_Attributes_Collated4d.txt.FANMOD # create integer only interactions and add colour for third column (edge source; 1 - targetscan7; 2 - co-expression_TF-TG; 3 - promoter_motif)
# paste -d'\t' Pn*.geneA.1 Pn*.geneB.1 Pn*.geneA.2 | sed 's/targetscan7/1/g' | sed 's/co-expression_TF-TG/2/g' | sed 's/promoter_motif/3/g' | awk '{if($2 == "1")print $7, $6, $2;else print $3, $6, $2;}' OFS=' ' | grep -v NA | sort -u > Pn-Edge_Attributes_Collated4d.txt.FANMOD # create integer only interactions and add colour for third column (edge source; 1 - targetscan7; 2 - co-expression_TF-TG; 3 - promoter_motif)
# paste -d'\t' Nb*.geneA.1 Nb*.geneB.1 Nb*.geneA.2 | sed 's/targetscan7/1/g' | sed 's/co-expression_TF-TG/2/g' | sed 's/promoter_motif/3/g' | awk '{if($2 == "1")print $7, $6, $2;else print $3, $6, $2;}' OFS=' ' | grep -v NA | sort -u > Nb-Edge_Attributes_Collated4d.txt.FANMOD # create integer only interactions and add colour for third column (edge source; 1 - targetscan7; 2 - co-expression_TF-TG; 3 - promoter_motif)
# paste -d'\t' On*.geneA.1 On*.geneB.1 On*.geneA.2 | sed 's/targetscan7/1/g' | sed 's/co-expression_TF-TG/2/g' | sed 's/promoter_motif/3/g' | awk '{if($2 == "1")print $7, $6, $2;else print $3, $6, $2;}' OFS=' ' | grep -v NA | sort -u > On-Edge_Attributes_Collated4d.txt.FANMOD # create integer only interactions and add colour for third column (edge source; 1 - targetscan7; 2 - co-expression_TF-TG; 3 - promoter_motif)
#
# # run the above
# sbatch prepFANMOD.sh # DONE - RAN FINE
#
# # A. for only 1to1 TF/TG edges
#
# nano prepFANMOD-1to1.sh
#
# #!/bin/bash -e
# #SBATCH -p tgac-medium # partition (queue)
# #SBATCH -N 1 # number of nodes
# #SBATCH -n 1 # number of tasks
# #SBATCH --mem 38000 # memory pool for all cores
# #SBATCH -t 0-23:59 # time (D-HH:MM)
# #SBATCH -o slurm.%N.%j.out # STDOUT
# #SBATCH -e slurm.%N.%j.err # STDERR
# #SBATCH --mail-type=ALL # notifications for job done & fail
# #SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address
#
# for i in *-Edge_Attributes_Collated4d.txt ; do
#   cut -f1,3,18 $i | awk '$3=="targetscan7" || $3=="co-expression_TF-TG" || $3=="promoter_motif"' > $i.geneA1 # cut geneA columns with source to filter out unwanted source rows
#   cut -f1 ../Module_genesandexpr/OGIDS.1to1.txt5 | xargs -i grep -wiF {} $i.geneA1 | cut -f1,3 > $i.geneA2
#   cut -f5,9,18 $i | awk '$3=="targetscan7" || $3=="co-expression_TF-TG" || $3=="promoter_motif"' > $i.geneB1 # cut geneB columns with source to filter out unwanted source rows
#   cut -f1 ../Module_genesandexpr/OGIDS.1to1.txt5 | xargs -i grep -wiF {} $i.geneB1 | cut -f1,3 > $i.geneB2
# done
#
# echo ab > list1
# echo nb >> list1
# echo pn >> list1
# echo mz >> list1
# echo on >> list1
#
# while read -u 3 -r file1 && read -u 4 -r file2 # map geneA and geneB to OGIDs and use OGIDs to assign number by removing letters
# do
#   awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-${file1} ${file2}-Edge_Attributes_Collated4d.txt.geneA2 | sed 's/OG//g' | sed 's/_0//g' | sed 's/_1//g' | sed 's/_2//g' > ${file2}-Edge_Attributes_Collated4d.txt.geneA2.1
# done 3<list1 4<list2
#
# while read -u 3 -r file1 && read -u 4 -r file2 # map geneA and geneB to OGIDs and use OGIDs to assign number by removing letters
# do
#   awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-${file1} ${file2}-Edge_Attributes_Collated4d.txt.geneB2 | sed 's/OG//g' | sed 's/_0//g' | sed 's/_1//g' | sed 's/_2//g' > ${file2}-Edge_Attributes_Collated4d.txt.geneB2.1
# done 3<list1 4<list2
#
# cat *.geneA2 | grep 'targetscan7' | cut -f1 | sort -u | awk '$1=(NR+20000 "\t" $1)' | awk '{print $2,$1}' OFS='\t' > miRNA_OGIDs2.txt # create integer only IDs starting from 20001 for all miRNAs
#
# for i in *-Edge_Attributes_Collated4d.txt ; do
#   awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' miRNA_OGIDs2.txt $i.geneA2 | cut -f3 > $i.geneA2.2 # map all miRNAs to integer only IDs
# done
#
# # If the number of integers allow, load above files into FANMOD and run to generate stats here: /Applications/Fanmod.app
# paste -d'\t' Ab*.geneA2.1 Ab*.geneB2.1 Ab*.geneA2.2 | sed 's/targetscan7/1/g' | sed 's/co-expression_TF-TG/2/g' | sed 's/promoter_motif/3/g' | awk '{if($2 == "1")print $7, $6, $2;else print $3, $6, $2;}' OFS=' ' | grep -v NA | sort -u > Ab-Edge_Attributes_Collated4d.txt.1to1.FANMOD # create integer only interactions and add colour for third column (edge source; 1 - targetscan7; 2 - co-expression_TF-TG; 3 - promoter_motif)
# paste -d'\t' Mz*.geneA2.1 Mz*.geneB2.1 Mz*.geneA2.2 | sed 's/targetscan7/1/g' | sed 's/co-expression_TF-TG/2/g' | sed 's/promoter_motif/3/g' | awk '{if($2 == "1")print $7, $6, $2;else print $3, $6, $2;}' OFS=' ' | grep -v NA | sort -u > Mz-Edge_Attributes_Collated4d.txt.1to1.FANMOD # create integer only interactions and add colour for third column (edge source; 1 - targetscan7; 2 - co-expression_TF-TG; 3 - promoter_motif)
# paste -d'\t' Pn*.geneA2.1 Pn*.geneB2.1 Pn*.geneA2.2 | sed 's/targetscan7/1/g' | sed 's/co-expression_TF-TG/2/g' | sed 's/promoter_motif/3/g' | awk '{if($2 == "1")print $7, $6, $2;else print $3, $6, $2;}' OFS=' ' | grep -v NA | sort -u > Pn-Edge_Attributes_Collated4d.txt.1to1.FANMOD # create integer only interactions and add colour for third column (edge source; 1 - targetscan7; 2 - co-expression_TF-TG; 3 - promoter_motif)
# paste -d'\t' Nb*.geneA2.1 Nb*.geneB2.1 Nb*.geneA2.2 | sed 's/targetscan7/1/g' | sed 's/co-expression_TF-TG/2/g' | sed 's/promoter_motif/3/g' | awk '{if($2 == "1")print $7, $6, $2;else print $3, $6, $2;}' OFS=' ' | grep -v NA | sort -u > Nb-Edge_Attributes_Collated4d.txt.1to1.FANMOD # create integer only interactions and add colour for third column (edge source; 1 - targetscan7; 2 - co-expression_TF-TG; 3 - promoter_motif)
# paste -d'\t' On*.geneA2.1 On*.geneB2.1 On*.geneA2.2 | sed 's/targetscan7/1/g' | sed 's/co-expression_TF-TG/2/g' | sed 's/promoter_motif/3/g' | awk '{if($2 == "1")print $7, $6, $2;else print $3, $6, $2;}' OFS=' ' | grep -v NA | sort -u > On-Edge_Attributes_Collated4d.txt.1to1.FANMOD # create integer only interactions and add colour for third column (edge source; 1 - targetscan7; 2 - co-expression_TF-TG; 3 - promoter_motif)
#
#
# # run the above
# sbatch prepFANMOD-1to1.sh # RUNNING
#
# ## remove all intermediate files from above
# rm *-Edge_Attributes_Collated4d.txt.gene*
#
#
# # ### copy the relevant files for running FANMOD locally
# # mkdir /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/fanmod
# # cp *.FANMOD /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/fanmod
# # # A. *.FANMOD files copied local to here: /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/fanmod/input_files
# # # B. ensure all input files have name: *.FANMOD
# # # C. change to the directory to run FANMOD:
# # cd /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/fanmod
#
#
# # Run FANMOD analyses
#
# # A. ensure all input files are here: /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/fanmod/input_files
# cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/fanmod/input_files
# for i in ../../*FANMOD ; do
#   ln -s $i
# done
# # B. ensure all input files have name: *.FANMOD
# # C. change to the directory:
# cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/fanmod/
# # D. run using the following command - ./run_fanmod.sh $(graphname) $(ngraphs) # e.g ./run_fanmod.sh Ab-Edge_Attributes_Collated4d.txt.n5000.random 1000
# # ngraphs - motifs are detected by comparing their frequency of occurrence in the original network to their frequency of occurrence in a number of similar, yet randomized networks
# # ngraphs value state how many random networks should be looked at - default on program is 1000
# # create a while loop to run several files
#
# # i. all edges
#
# nano alledges.FANMODrun.sh
#
# #!/bin/bash -e
# #SBATCH -p tgac-medium # partition (queue)
# #SBATCH -N 1 # number of nodes
# #SBATCH -n 1 # number of tasks
# #SBATCH --mem 38000 # memory pool for all cores
# #SBATCH -t 6-23:59 # time (D-HH:MM)
# #SBATCH -o slurm.%N.%j.out # STDOUT
# #SBATCH -e slurm.%N.%j.err # STDERR
# #SBATCH --mail-type=ALL # notifications for job done & fail
# #SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address
#
# ls -1 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/fanmod/input_files/*.txt.FANMOD | xargs -n 1 basename | sed 's/.FANMOD//g' > all.graphname.files
#
# while read F ; do
#   ./run_fanmod.sh $F 1000
# done < all.graphname.files
#
# #run above
# sbatch alledges.FANMODrun.sh
#
# # ii. 1to1 edges
#
# nano 1to1edges.FANMODrun.sh
#
# #!/bin/bash -e
# #SBATCH -p tgac-medium # partition (queue)
# #SBATCH -N 1 # number of nodes
# #SBATCH -n 1 # number of tasks
# #SBATCH --mem 38000 # memory pool for all cores
# #SBATCH -t 6-23:59 # time (D-HH:MM)
# #SBATCH -o slurm.%N.%j.out # STDOUT
# #SBATCH -e slurm.%N.%j.err # STDERR
# #SBATCH --mail-type=ALL # notifications for job done & fail
# #SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address
#
# ls -1 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/fanmod/input_files/*.txt.1to1.FANMOD | xargs -n 1 basename | sed 's/.FANMOD//g' > 1to1.graphname.files
#
# while read F ; do
#   ./run_fanmod.sh $F 1000
# done < 1to1.graphname.files
#
# #run above
# sbatch 1to1edges.FANMODrun.sh
#
#
# #### NOT DOING THE LOTO ANALYSIS - EITHER WAY, FILES ARE READY AND CAN BE LOADED IF NECESSARY
# ## Evolutionary conserved signatures – compare against each other and O. niloticus (look at PMID: 27794550)
# #   i.	TF-TG-miRNA pairwise comparisons
# #   ii.	Loto – graphlet (13, three node TF-TG) comparative analysis http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0163497#sec002: http://dlab.cl/loto/
#
# EDGE=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes)
# cd $EDGE
#
# OGID=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5)
#
# #   i.	TF-TG-miRNA pairwise comparisons
# # map each TF and TG to OGID, then join TFOGID:TGOGID:miRNA
# for i in mz pn ab nb on ; do
#   awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $OGID-$i $i-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.txt | awk '{print $2,$1,$6,$3,$4,$5}' OFS='\t' > $i-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.OGIDS1.txt ;
#   awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $OGID-$i $i-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.OGIDS1.txt | awk '{print $2,$3,$4,$1,$7,$5,$6}' OFS='\t' > $i-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.OGIDS2.txt ;
#   cut -f2,5,6 $i-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.OGIDS2.txt | sed 's/\t/:/g' > $i-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.OGIDS3.txt ;
# done
#
# # compare pairwise, create matrix of number of matches
# mzTFTGmiRNA=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/mz-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.OGIDS3.txt)
# pnTFTGmiRNA=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/pn-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.OGIDS3.txt)
# abTFTGmiRNA=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/ab-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.OGIDS3.txt)
# nbTFTGmiRNA=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/nb-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.OGIDS3.txt)
# onTFTGmiRNA=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/on-Edge_Attributes_Collated4d_miRNA-TG-TFmotifs.OGIDS3.txt)
#
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $mzTFTGmiRNA $pnTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/mz-pn\t/g' > d-i.TFTGmiRNA_pairwise.txt
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $mzTFTGmiRNA $abTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/mz-ab\t/g' >> d-i.TFTGmiRNA_pairwise.txt
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $mzTFTGmiRNA $nbTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/mz-nb\t/g' >> d-i.TFTGmiRNA_pairwise.txt
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $mzTFTGmiRNA $onTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/mz-on\t/g' >> d-i.TFTGmiRNA_pairwise.txt
#
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $pnTFTGmiRNA $mzTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/pn-mz\t/g' >> d-i.TFTGmiRNA_pairwise.txt
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $pnTFTGmiRNA $abTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/pn-ab\t/g' >> d-i.TFTGmiRNA_pairwise.txt
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $pnTFTGmiRNA $nbTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/pn-nb\t/g' >> d-i.TFTGmiRNA_pairwise.txt
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $pnTFTGmiRNA $onTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/pn-on\t/g' >> d-i.TFTGmiRNA_pairwise.txt
#
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $abTFTGmiRNA $mzTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/ab-mz\t/g' >> d-i.TFTGmiRNA_pairwise.txt
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $abTFTGmiRNA $pnTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/ab-pn\t/g' >> d-i.TFTGmiRNA_pairwise.txt
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $abTFTGmiRNA $nbTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/ab-nb\t/g' >> d-i.TFTGmiRNA_pairwise.txt
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $abTFTGmiRNA $onTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/ab-on\t/g' >> d-i.TFTGmiRNA_pairwise.txt
#
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $nbTFTGmiRNA $mzTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/nb-mz\t/g' >> d-i.TFTGmiRNA_pairwise.txt
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $nbTFTGmiRNA $pnTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/nb-pn\t/g' >> d-i.TFTGmiRNA_pairwise.txt
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $nbTFTGmiRNA $abTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/nb-ab\t/g' >> d-i.TFTGmiRNA_pairwise.txt
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $nbTFTGmiRNA $onTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/nb-on\t/g' >> d-i.TFTGmiRNA_pairwise.txt
#
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $onTFTGmiRNA $mzTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/on-mz\t/g' >> d-i.TFTGmiRNA_pairwise.txt
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $onTFTGmiRNA $pnTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/on-pn\t/g' >> d-i.TFTGmiRNA_pairwise.txt
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $onTFTGmiRNA $abTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/on-ab\t/g' >> d-i.TFTGmiRNA_pairwise.txt
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $onTFTGmiRNA $nbTFTGmiRNA | grep -v NA | wc -l | sed $'s/^/on-nb\t/g' >> d-i.TFTGmiRNA_pairwise.txt
#
# printf 'Species pairwise comparison\tShared TF-TG-miRNA relationships\n' > TFTGmiRNA_pairwise_colheads # add column headers and revert filename
# cat TFTGmiRNA_pairwise_colheads d-i.TFTGmiRNA_pairwise.txt > d-i.TFTGmiRNA_pairwise.txt2
# rm d-i.TFTGmiRNA_pairwise.txt ; mv d-i.TFTGmiRNA_pairwise.txt2 d-i.TFTGmiRNA_pairwise.txt
#
# # pinpoint interesting cases of shared and non-shared 'network motifs' - search for your candidates
# # copied Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt into this folder {DONE}
# cut -f1 Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt | xargs -i grep -wiF {} $mzTFTGmiRNA > mzTFTGmiRNA.candidates
# cut -f1 Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt | xargs -i grep -wiF {} $pnTFTGmiRNA > pnTFTGmiRNA.candidates
# cut -f1 Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt | xargs -i grep -wiF {} $abTFTGmiRNA > abTFTGmiRNA.candidates
# cut -f1 Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt | xargs -i grep -wiF {} $nbTFTGmiRNA > nbTFTGmiRNA.candidates
# cut -f1 Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt | xargs -i grep -wiF {} $onTFTGmiRNA > onTFTGmiRNA.candidates
#
#
# #   ii.	Loto – graphlet (13, three node TF-TG) comparative analysis - input is a three column TSV (TFOGID, TGOGID, 1/0 - True/False connection)
# # cut geneA, geneB, source, score
#
# OGID=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5)
#
# for i in *-Edge_Attributes_Collated4d.txt ; do cut -f1,5,18,XX $i | awk '$3=="co-expression_TF-TG || $3=="promoter_motif"' > "$(basename "$i" .txt)_TFCUT2.txt" ; done # TF-TG edges
#
# for i in mz pn ab nb on ; do
#   awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $OGID-$i $i-Edge_Attributes_Collated4d_TFCUT2.txt | awk '{print $2,$1,$5,$3,$4}' OFS='\t' > $i-Edge_Attributes_Collated4d_TFCUT2.OGIDS1.txt ;
#   awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $OGID-$i $i-Edge_Attributes_Collated4d_TFCUT2.OGIDS1.txt | awk '{print $2,$3,$1,$6,$4,$5}' OFS='\t' > $i-Edge_Attributes_Collated4d_TFCUT2.OGIDS2.txt ;
#   awk '{print $1,$3,$2,$4,$5,$6}' OFS='\t' $i-Edge_Attributes_Collated4d_TFCUT2.OGIDS2.txt | awk '{print $0, "1"}' OFS='\t' > $i-Edge_Attributes_Collated4d_TFCUT2.OGIDS3.txt ;
#   cut -f1,2,7 $i-Edge_Attributes_Collated4d_TFCUT2.OGIDS3.txt > $i-Edge_Attributes_Collated4d_TFCUT2.OGIDS4.txt ;
# done
#
# # Load $i-Edge_Attributes_Collated4d_TFCUT2.OGIDS4.txt into Loto for graphlet comparisons


########################################################################################
# ~~~~~~~ # c)	Split the species-specific networks by multi-tissue co-expression modules, then single tissue-co-expression modules - do you see a pattern of:
# i.	network clustering, according to tissue
# ii.	modular regulatory rewiring - are switched genes rewired in networks? Number of switched genes to differences in networks? How does this compare to non-switched genes - percentages rewired networks?
# iii.	does this link to function (as per GO enrichment below).

########################################################################################

## i.	Network clustering, according to tissue
# No major scripts required - load whole network into cytoscape to view
# Load in multi-tissue module assignment to overlap with GeneA and GeneB
# Load in single-tissue module assignment to overlap with GeneA and GeneB
# Colour according to multi-tissue and single-tissue modules (amend single-tissue module files so that they contain a column for the tissue)

cd /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Arboretum_SingleTissue_New/Results #run locally
for k in br ey ht kd ms ts ; do
  for j in Mz Pn Ab Nb On ; do
    for i in $k/$j-expr-mod.txt ; do
    awk -v k="$k" '{print $0, k}' OFS='\t' $i | grep -v Dummy | sed '1d' | sort -k1,1 > $k/"$(basename "$i" .txt)_STload.txt" ;
    echo on.gene.LG5.750'\t'-1.16758'\t'0'\t'ht >> ht/On-expr-mod_STload.txt ; # the On heart file is missing a gene
    sort -k1,1 ht/On-expr-mod_STload.txt > ht/On-expr-mod_STload.txt2 ; rm ht/On-expr-mod_STload.txt ; mv ht/On-expr-mod_STload.txt2 ht/On-expr-mod_STload.txt
    cat $k/*_STload.txt > $k-STloadcollated.txt ;
    paste -d'\t' *-STloadcollated.txt | cut -f1-4,6-8,10-12,14-16,18-20,22-24 > 6Tissue-STloadcollated.txt ;
  done
done
done

# Final single-tissue file to load into Cytoscape
# /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Arboretum_SingleTissue_New/Results/6Tissue-STloadcollated.txt

## ii.	modular regulatory rewiring - are switched genes rewired in networks?
# Number of switched genes to differences in networks?
# How does this compare to non-switched genes - percentages rewired networks higher?
# all analysis carried out in part 2 below - numbers in ppt slides

## iii.	does this link to function (as per GO enrichment below).


########################################################################################
# ~~~~~~~ # d)	GO enrichment of edge lists – move nicely onto Regulons to look in detail at functional landscape
########################################################################################

# Christopher shared all the cichlid-specific GO terms from Brawand et al. 2014
software
cd /usr/users/ga004/mehtat
wget -r --no-parent http://pages.discovery.wisc.edu/~ckoch/cichlids/GO_Analysis/ . # download everything
exit

EDGE=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes)
mkdir $EDGE/1.EdgeGOenrichment
WDedgeGO=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment)
cd $WDedgeGO

mv /usr/users/ga004/mehtat/pages.discovery.wisc.edu/~ckoch/cichlids/GO_Analysis .
rm -r /usr/users/ga004/mehtat/pages.discovery.wisc.edu
rm $WDedgeGO/GO_Analysis/index*

# There are four subdirectories:

# 1. GO_terms
# - For each species, contains a ${SPECIES}_gotermap.txt file which gives the GO terms associated with the genes in the given species, and a ${SPECIES}_genecnt.txt file that gives the number of genes associated with each term
# 2. motif_terms
# - Same contents as (1), but motifs rather than GO terms
# 3. EnrichAnalyzer
# - Program for doing GO enrichment analysis, as well as code and makefile

# The enrichAnalyzer program can be run as such:
# enrichAnalyzer module_input gene_list go_term_prefix fdr output_prefix test_type

# 4. example_inputs_outputs
# - example_inputs_outputs/example_usage.txt gives an example usage of enrichAnalyzer that I pulled from one of the previous module enrichment analyses we did. The relevant files to run the enrichment analysis are present in this directory as well.

# Prepare gene names INPUT files - create a single file for each species with all module gene GO inputs
# this creates the GO input file: cuts genes | convert to single column | add # to each newline | replace GeneA to Cluster | replace GeneB with a tab - have to use ANSI-C style quoting with the '$' to get it to work on OSX | get rid of the first character on every new line | replace \t# with just a \t - have to use ANSI-C style quoting with the '$' to get it to work on OSX |replace luster to Cluster (as it got rid of first character) > new file #done

nano GOinputcreate.sh

#!/bin/bash -e
#SBATCH -p tgac-short # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --mem 24000 # memory pool for all cores
#SBATCH -t 0-0:45 # time (D-HH:MM)
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address

for i in 0 1 2 3 4 5 6 7 8 9 ; do
  for k in Mz Pn Ab Nb On ; do
    for j in ../${k}-Edge_Attributes_Collated4d-Module${i}.txt ; do
    cut -f1,5 $j |
    awk '{ for(i=1;i<=NF;i++){ print $i}}' |
    tr '\n' '#' |
    sed "s/GeneA/Cluster${i}/g" |
    sed $'s/#GeneB/\t/g' |
    sed 's/^.\{1\}//' |
    sed $'s|\t#|\t|g' |
    sed "s/luster${i}/Cluster${i}/g" |
    sed -e '$a\' > GO_INPUT_${k}-Module${i}_Edge_Attributes ;
  done
done
done

cat GO_INPUT_Mz-Module*_Edge_Attributes > GO_INPUT_Mz_Edge_Attributes
cat GO_INPUT_Pn-Module*_Edge_Attributes > GO_INPUT_Pn_Edge_Attributes
cat GO_INPUT_Ab-Module*_Edge_Attributes > GO_INPUT_Ab_Edge_Attributes
cat GO_INPUT_Nb-Module*_Edge_Attributes > GO_INPUT_Nb_Edge_Attributes
cat GO_INPUT_On-Module*_Edge_Attributes > GO_INPUT_On_Edge_Attributes
rm GO_INPUT_*-Module*_Edge_Attributes

# Prepare genelist files (background)
echo Ab > list-sp
echo Mz >> list-sp
echo Pn >> list-sp
echo Nb >> list-sp
echo On >> list-sp

while read F ; do cut -f1 ../../Module_genesandexpr/$F-speciesspecnames_clusterassign.txt > $F-genelist.txt ; done < list-sp #done

# run above
sbatch GOinputcreate.sh

# Association files mapping GO term to gene names are found in GO_Analysis/GO_terms/XX_
# XX is Asbu, Meze, Nebr, Orni and Puny

# Run enrichment

echo /tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer GO_INPUT_Mz_Edge_Attributes Mz-genelist.txt GO_Analysis/GO_terms/Meze_ 1 Mz-genelist_OUTPUT persg > GOcode
echo /tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer GO_INPUT_Pn_Edge_Attributes Pn-genelist.txt GO_Analysis/GO_terms/Puny_ 1 Pn-genelist_OUTPUT persg >> GOcode
echo /tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer GO_INPUT_Ab_Edge_Attributes Ab-genelist.txt GO_Analysis/GO_terms/Asbu_ 1 Ab-genelist_OUTPUT persg >> GOcode
echo /tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer GO_INPUT_Nb_Edge_Attributes Nb-genelist.txt GO_Analysis/GO_terms/Nebr_ 1 Nb-genelist_OUTPUT persg >> GOcode
echo /tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer GO_INPUT_On_Edge_Attributes On-genelist.txt GO_Analysis/GO_terms/Orni_ 1 On-genelist_OUTPUT persg >> GOcode

nano edgeGO.sh

#!/bin/bash -e
#SBATCH -p tgac-short # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --array=0-4
#SBATCH --mem-per-cpu 28000
#SBATCH -t 0-00:45
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR

ml gcc
ml zlib
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/tgac/software/testing/enrichAnalyzer/0.1/x86_64/lib:/tgac/software/testing/enrichAnalyzer/0.1/x86_64/lib2/

mapfile -t GOcode < GOcode # assign as elements to $GOcode variable
${GOcode[${SLURM_ARRAY_TASK_ID}]}

# run the above
sbatch edgeGO.sh

cp *-genelist_OUTPUT_details.txt /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/

# Ran the enrichment, now:
# 1. Prepare the GO enrichment files into a readable format
# 2. Select those with a q-value (adjusted p-value) of < 0.05

nano GOsplit.R

setwd("/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment")
filenames <- list.files(path="/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/",pattern="*OUTPUT_details.txt")
## Create list of data frame names without the ".txt" part
library(stringr)
names <-str_sub(filenames,1,-5)

### Load all files as delimited data frames, no headers and row.names as first column
for(i in names){
  filepath <- file.path("/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/",paste(i,".txt",sep=""))
  assign(i, read.delim(filepath,
                       header=FALSE,
                       sep = "\t"))
}
# Make a list of dataframes
l.df <- setNames(lapply(ls(pattern="*OUTPUT_details"), function(x) get(x)), ls(pattern="*OUTPUT_details"))
# Split the final V10 column according to ; and place into a new row with other column filled
library(data.table)
library(splitstackshape)
library(plyr)
split_list <- llply(l.df, function(x) {
  unique(cSplit((x), "V10", ";", "long"))
})
# Write each element in list to data frame
sapply(names(split_list),function (x) write.table(split_list[[x]],quote=FALSE, sep="\t", row.names=FALSE, col.names=FALSE, file=paste0(x, "_Split.txt")))

source R-3.4.3
R CMD BATCH GOsplit.R # run the above interactively

# filter based on rows where the q-value is < 0.05
for i in *-genelist_OUTPUT_details_Split.txt ; do awk '($4 < 0.05 )' $i | awk -v OFS='\t' '{print $10,$2,$1,$3,$4,$5,$6,$7,$8,$9}' > Sort_${i} ; done

# 2. Create GO enrichment interaction table

nano GOinteractions.sh # {DONE}

#!/bin/bash -e
#SBATCH -p tgac-medium # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --mem 48000 # memory pool for all cores
#SBATCH -t 0-03:59 # time (D-HH:MM)
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address

# Col1 - GeneA
# Col2 - GeneA symbol
# Col3 - GeneA enriched GO term
# Col4 - GeneB
# Col5 - GeneB symbol
# Col6 - GeneB enriched GO term
# Col7 - interaction_type: GOterm for all

# cut the geneA column > file
for i in ../*-Edge_Attributes_Collated4d-Module*.txt ; do cut -f1 $i > geneA_${i#../} ; done

# cut the geneB column > file
for i in ../*-Edge_Attributes_Collated4d-Module*.txt ; do cut -f5 $i > geneB_${i#../} ; done

# map to filtered GO enrichment
printf 'Sort_Ab-genelist_OUTPUT_details_Split.txt\n%.0s' {1..10} > GOTerms
printf 'Sort_Mz-genelist_OUTPUT_details_Split.txt\n%.0s' {1..10} >> GOTerms
printf 'Sort_Nb-genelist_OUTPUT_details_Split.txt\n%.0s' {1..10} >> GOTerms
printf 'Sort_On-genelist_OUTPUT_details_Split.txt\n%.0s' {1..10} >> GOTerms
printf 'Sort_Pn-genelist_OUTPUT_details_Split.txt\n%.0s' {1..10} >> GOTerms # Assign all GO term files to a variable
ls -1 geneA_*-Edge_Attributes_Collated4d-Module*.txt > geneA
ls -1 geneB_*-Edge_Attributes_Collated4d-Module*.txt > geneB

while read -u 3 -r file1 && read -u 4 -r file2
do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' ${file1} ${file2} > GOmap_${file2}
done 3<GOTerms 4<geneA

while read -u 3 -r file1 && read -u 4 -r file2
do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' ${file1} ${file2} > GOmap_${file2}
done 3<GOTerms 4<geneB

# cut appropriate columns from edge attributes and paste to the GO terms and add the interaction 'GOterm'
for i in ../*-Edge_Attributes_Collated4d-Module*.txt ; do cut -f2,6 $i > GeneSymbols_${i#../} ; done
# join all corresponding files together and rearrange columns
GOTermsAMap=(GOmap_geneA_*-Edge_Attributes_Collated4d-Module*.txt) # Assign all GeneA GO term mapped files to a variable
GOTermsBMap=(GOmap_geneB_*-Edge_Attributes_Collated4d-Module*.txt) # Assign all GeneB GO term mapped files to a variable
GeneSymbols=(GeneSymbols_*-Edge_Attributes_Collated4d-Module*.txt) # Assign all gene symbol files to a variable
for ((i = 0; i < ${#GOTermsAMap[@]} && i < ${#GOTermsBMap[@]} && i < ${#GeneSymbols[@]}; i++)); do
  paste -d'\t' "${GeneSymbols[i]}" "${GOTermsAMap[i]}" "${GOTermsBMap[i]}" | awk -v OFS='\t' '{print $3,$1,$4,$5,$2,$6}' > GeneSymbols2_${GeneSymbols[i]#GeneSymbols_} ;
done # paste all corresponding files together and then rearrange columns

# REMOVE ALL INTERMEDIATE FILES
rm geneA_*
rm geneB_*
rm GeneSymbols_*
rm GOmap_gene*
rm Sort_*

# Add appropriate column headers
printf 'GeneA\tGeneA_Symbol\tGeneA_enrichedGOterm\tGeneB\tGeneB_Symbol\tGeneB_enrichedGOterm\n' > colheads_GO # prepare the colheads file
ls -h GeneSymbols2_* > list_genesymbols2files #prepare the #F for all folders
while read F ; do cat colheads_GO $F | awk -v OFS="\t" 'NR==1{print $0, "interaction_type";next}{print $0,"GOterm"}' | sed -e '2d' > ${F#.txt}_Final.txt ; done < list_genesymbols2files # add the header and interaction_type column to all files

# Remove rows with NA for GO terms in column3 or column6
for i in GeneSymbols2_*_Final.txt ; do awk '$3!="NA" && $6!="NA"' $i > ${i}2 ; done ; rm GeneSymbols2_*.txt

## run the above
sbatch GOinteractions.sh # {DONE}

# Final files are GeneSymbols2_*.txt2
# Load these files straight into cytoscape (col3 > col7 < col6) using NetworkAnalyzer to visualize parameters:
# 1. map node size to 'degree': low values to small sizes
# 2. edge size according to 'betweenness': low values to small sizes
# 3. map node color to 'BetweennessCentrality': low values to bright colours
# 4. map edge colour to 'NumberOfUnderlyingEdges': low values to bright colours
# 5. remove duplicated edges and self-loops
# 6. style > Node > label color > black
# 7. style > Node > Border Width > 2.0
# 8. style > Node > Border Paint > Grey
# 9. organic layout

## Work from local now # {DONE}
mkdir /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/
cp -r GeneSymbols2_* /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/
mkdir ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment # copy GeneSymbols2_*_Final.txt2 to here # {DONE}
mkdir ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/networkproperties # {DONE}
cd ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/ # {DONE}

## convert all files to SIF network files as input for cytoscape
for i in *.txt2 ; do
  awk '{print $6,$7,$6}' OFS='\t' $i | sed '1d' > "$(basename "$i" .txt2).sif"
done

### Using cyREST api and py2cytoscape in cytoscape to load networks from above GO edge lists via the command line
## then, have to manually edit other things, accordingly:
# run NetworkAnalyzer
		# 1. map node size to 'degree': low values to small sizes
		# 2. edge size according to 'betweenness': low values to small sizes
		# 3. map node color to 'BetweennessCentrality': low values to bright colours
		# 4. map edge colour to 'NumberOfUnderlyingEdges': low values to bright colours
		# 5. remove duplicated edges and self-loops
		# 6. style > Node > label color > black
		# 7. style > Node > Border Width > 2.0
		# 8. style > Node > Border Paint > Grey
		# 9. circular layout
## python script created for network loading: /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GOedge_networks_Cytoscape.py

## Networks can be sorted based on degree
# Batch run Network Analyzer of the GOterm network interactions (col3 > col7 < col6) to then save the 'Network Analysis' table.
cd /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/ # copy GeneSymbols2_*.txt2 to here
mkdir NetworkAnalyzer_Output
mkdir NetworkAnalyzer_Input
cp *.sif NetworkAnalyzer_Input
cd NetworkAnalyzer_Input
find . -maxdepth 1 -size 0c -exec rm {} \; # remove any 0 byte (empty) files
# # 1. Then, NetworkAnalyzer > batch analysis (inputting above SIF files as node1[tab]interaction[tab]node2) and save with .sif extension in NetworkAnalyzer_Output/
# # 2. Sort nodes according to the Degree column (high to low) - that way you can search and prioritise key GO term nodes in each module
for i in NetworkAnalyzer_Output/GeneSymbols2_*.sif-u.nattributes ; do
  sort -k4,4 -rn -t $'\t' $i | sed '1h;1d;$!H;$!d;G' > NetworkAnalyzer_Output/"$(basename "$i")2" ;
done



# # Use igraph to get GO Network Properties; then load these into cytoscape to amend node and edge size.
#
# # A. create GeneA and GeneB enriched GO terms edge tables
# for i in GeneSymbols2_*_Final.txt2 ; do cut -f3,6 $i | sed '1d' > "$(basename "$i" .txt2)_CUT.txt" ; done # {DONE}
#
# # B. create igraph script to calculate network properties
#
# nano pRoperties.R
#
# # source("https://bioconductor.org/biocLite.R")
# # biocLite("igraph")
#
# options(digits = 3, quote = F, scientific = F, stringsAsFactors = F)
# library("igraph")
# args <- commandArgs(trailingOnly = TRUE)
#
# #read data
# # test if there is at least one argument: if not, return an error, otherwise, pass to the user supplied outfile from command line
# if (length(args)==0) {
#   stop("At least one argument must be supplied (input file).\n", call.=FALSE)
# } else if (length(args)==1) {
#   # default output file
#   args[2] = args[2]
# }
#
# t = read.table(args[1], header = F, sep = "\t")
# g = graph.edgelist(as.matrix(t[,1:2]))
#
# #betweenness
# bt=betweenness(g)
# lnBtw=(log2(bt))
# lnBtw[lnBtw=="-Inf"] <- 0
# n=V(g)$name
# #degree
# degi=degree(g, mode=c("in"))
# dego=degree(g, mode=c("out"))
# #closeness
# clo=closeness(g)
# #eccentricity
# ecc=degree(g, mode=c("all"))
#
# #print results
# results<-data.frame(n,degi,dego,lnBtw,ecc,clo)
# n_n<-"Node"
# degi_n<-"Degree_In"
# dego_n<-"Degree_Out"
# lnBtw_n<-"ln(BC)"
# ecc_n<-"Eccentricity"
# clo_n<-"Closeness"
# names(results) <-c(n_n,degi_n,dego_n,lnBtw_n,ecc_n,clo_n)
# write.table(results, file=args[2], row.names=F, col.names=T, quote=F, sep="\t")
#
# #global properties i Rmd file
# #pa <- get.shortest.paths(g, 5, 9)[[1]]
#
# # C. create a bash script that calls arguments $1 passed by bash script, then creates outfiles $2 and Rout and Rerr files that are then deleted
#
# nano getNetworkProp1.sh
#
# #!/bin/bash
# #calculate network properties for each node separately
# R --no-save --args $1 < pRoperties.R $2 1> Prop.out 2>Prop.err
# rm -f Prop.err Prop.out
#
# # D. Run the above script
#
# for i in GeneSymbols2_*_Final_CUT.txt ; do
#   bash getNetworkProp1.sh $i networkproperties/"$(basename "$i" .txt)-NetworkProperties.txt"
# done

##########################################################################################################################
#
# 2.	Modular regulatory rewiring instances in networks
#
##########################################################################################################################

##### NOTE: one thing to remember is that /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/*-Edge_Attributes_Collated4d.txt are the files to use since they represent edges that have been removed based on tblastx (of whether is gene is confirmed as present/absent from the genome)

# a)	Reconstructed 0/1 matrix of edge/node presence/absence in each species, per source and added modules and any switches to this

cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes
mkdir matrix
cd matrix

nano getcols.sh

#!/bin/bash
cd $PBS_O_WORKDIR;

for i in /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/*-Edge_Attributes_Collated4c.txt ; do
  awk '$18=="co-expression_TF-TG" || $18=="promoter_motif"' $i | cut -f3,9,18 > "$(basename "$i" .txt).coexpr_promONLY.txt"
done

for i in /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/*-Edge_Attributes_Collated4c.txt ; do
  awk '$18=="targetscan7"' $i | cut -f1,9,18 > "$(basename "$i" .txt).targetscan7ONLY.txt"
done

for i in /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/*-Edge_Attributes_Collated4c.txt ; do
  awk '$18=="CNE_motif" || $18=="aCNE_motif"' $i | cut -f3,5,18 > "$(basename "$i" .txt).CNEmotifONLY.txt"
done

for i in /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/*-Edge_Attributes_Collated4c.txt ; do
  awk '$18=="CNE_Proximal" || $18=="aCNE_Proximal"' $i | cut -f1,9,18 > "$(basename "$i" .txt).CNEproximalONLY.txt"
done

# run the above
qsub -q Test -l select=1:mem=60GB:ncpus=1 getcols.sh


nano getmatrix.sh

#!/bin/bash
cd $PBS_O_WORKDIR;

# Comparisons for presence/absence

# 0. re-structure the column tables so that edges can be matched
for i in *ONLY.txt ; do
  awk '{print $1":"$2,$1,$2,$3}' OFS='\t' $i > $i.tmp1
done

# 1. collate all possible node interactions from each species, removing redundant edges
cat *.coexpr_promONLY.txt.tmp1 | sort -u > Edge_Attributes_Collated4c.coexpr_promONLY.txt.tmp1
cat *.CNEmotifONLY.txt.tmp1 | sort -u > Edge_Attributes_Collated4c.CNEmotifONLY.txt.tmp1
cat *.CNEproximalONLY.txt.tmp1 | sort -u > Edge_Attributes_Collated4c.CNEproximalONLY.txt.tmp1
cat *.targetscan7ONLY.txt.tmp1 | sort -u > Edge_Attributes_Collated4c.targetscan7ONLY.txt.tmp1

# 2. Then, do the species presence/absence
# Mz - presence/absence of edges
ls -1 Mz*ONLY.txt.tmp1 > Mzfiles
ls -1 Edge_Attributes_Collated4c.*ONLY.txt.tmp1 > edge.tmp1
while read -u 3 -r file1 && read -u 4 -r file2
do
  awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' ${file1} ${file2} > "$(basename "${file2}" .tmp1).tmp2"
done 3<Mzfiles 4<edge.tmp1

# Pn - presence/absence of edges
ls -1 Pn*ONLY.txt.tmp1 > Pnfiles
ls -1 Edge_Attributes_Collated4c.*ONLY.txt.tmp2 > edge.tmp2
while read -u 3 -r file1 && read -u 4 -r file2
do
  awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' ${file1} ${file2} > "$(basename "${file2}" .tmp2).tmp3"
done 3<Pnfiles 4<edge.tmp2

# Ab - presence/absence of edges
ls -1 Ab*ONLY.txt.tmp1 > Abfiles
ls -1 Edge_Attributes_Collated4c.*ONLY.txt.tmp3 > edge.tmp3
while read -u 3 -r file1 && read -u 4 -r file2
do
  awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' ${file1} ${file2} > "$(basename "${file2}" .tmp3).tmp4"
done 3<Abfiles 4<edge.tmp3

# Nb - presence/absence of edges
ls -1 Nb*ONLY.txt.tmp1 > Nbfiles
ls -1 Edge_Attributes_Collated4c.*ONLY.txt.tmp4 > edge.tmp4
while read -u 3 -r file1 && read -u 4 -r file2
do
  awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' ${file1} ${file2} > "$(basename "${file2}" .tmp4).tmp5"
done 3<Nbfiles 4<edge.tmp4

# On - presence/absence of edges
ls -1 On*ONLY.txt.tmp1 > Onfiles
ls -1 Edge_Attributes_Collated4c.*ONLY.txt.tmp5 > edge.tmp5
while read -u 3 -r file1 && read -u 4 -r file2
do
  awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' ${file1} ${file2} > "$(basename "${file2}" .tmp5).tmp6"
done 3<Onfiles 4<edge.tmp5

# 3. create colheaders and add
printf 'interaction\tGeneA\tGeneB\tsource\tMz.P-1_A-0\tPn.P-1_A-0\tAb.P-1_A-0\tNb.P-1_A-0\tOn.P-1_A-0\n' > matrix_colheads
cat matrix_colheads Edge_Attributes_Collated4c.CNEmotifONLY.txt.tmp6 | grep -v 'NA' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix.txt
cat matrix_colheads Edge_Attributes_Collated4c.CNEproximalONLY.txt.tmp6 | grep -v 'NA' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix.txt
cat matrix_colheads Edge_Attributes_Collated4c.coexpr_promONLY.txt.tmp6 | grep -v 'NA' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix.txt
cat matrix_colheads Edge_Attributes_Collated4c.targetscan7ONLY.txt.tmp6 | grep -v 'NA' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix.txt

# run the above
qsub -q Test -l select=1:mem=60GB:ncpus=1 getmatrix.sh

# remove all temp files
rm *.tmp*

# number of lines in each file
# 1930417 Edge_Attributes_Collated4c.CNEmotifONLY.matrix.txt
#  594207 Edge_Attributes_Collated4c.CNEproximalONLY.matrix.txt
# 1053166 Edge_Attributes_Collated4c.coexpr_promONLY.matrix.txt
# 1021752 Edge_Attributes_Collated4c.targetscan7ONLY.matrix.txt
# 4599542 total

# then we ask the question of:
# i. How many module switched genes are associated with per species consensus nodes (two nodes interacting and present in all species) - again, in a phylo context
# ia. first, we need to add all species GeneA and GeneB modules to the tables (for CNEmotif add for GeneA; CNEproximal and targetscan7 - GeneB)
# iaa. create mapping files
awk 'BEGIN{OFS="\t"}NR==FNR{a[$2]=$1;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../../Module_genesandexpr/OGIDS.txt5 ../../Module_genesandexpr/Mz-speciesspecnames_clusterassign.txt | awk '{print $3,$2}' OFS='\t' | grep -v NULL > ../../Module_genesandexpr/Mz-speciesspecnames_clusterassign.OGID.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$3]=$1;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../../Module_genesandexpr/OGIDS.txt5 ../../Module_genesandexpr/Pn-speciesspecnames_clusterassign.txt | awk '{print $3,$2}' OFS='\t' | grep -v NULL > ../../Module_genesandexpr/Pn-speciesspecnames_clusterassign.OGID.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$4]=$1;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../../Module_genesandexpr/OGIDS.txt5 ../../Module_genesandexpr/Ab-speciesspecnames_clusterassign.txt | awk '{print $3,$2}' OFS='\t' | grep -v NULL > ../../Module_genesandexpr/Ab-speciesspecnames_clusterassign.OGID.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$5]=$1;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../../Module_genesandexpr/OGIDS.txt5 ../../Module_genesandexpr/Nb-speciesspecnames_clusterassign.txt | awk '{print $3,$2}' OFS='\t' | grep -v NULL > ../../Module_genesandexpr/Nb-speciesspecnames_clusterassign.OGID.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$6]=$1;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' ../../Module_genesandexpr/OGIDS.txt5 ../../Module_genesandexpr/On-speciesspecnames_clusterassign.txt | awk '{print $3,$2}' OFS='\t' | grep -v NULL > ../../Module_genesandexpr/On-speciesspecnames_clusterassign.OGID.txt
for i in ../../Module_genesandexpr/*-speciesspecnames_clusterassign.OGID.txt ; do ln -s $i ; done
# iab. map to add module assignment
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL","NULL";}}' Mz-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY.matrix.txt | cut -f1-9,11 > Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp1
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL","NULL";}}' Pn-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp1 | cut -f1-10,12 > Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL","NULL";}}' Ab-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp2 | cut -f1-11,13 > Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp3
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL","NULL";}}' Nb-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp3 | cut -f1-12,14 > Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp4
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL","NULL";}}' On-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp4 | cut -f1-13,15 | sed '1d' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp5
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' Mz-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp5 | cut -f1-14,16 > Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp6
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' Pn-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp6 | cut -f1-15,17 > Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp7
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' Ab-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp7 | cut -f1-16,18 > Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp8
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' Nb-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp8 | cut -f1-17,19 > Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp9
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' On-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp9 | cut -f1-18,20 > Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp10
printf 'interaction\tGeneA\tGeneB\tsource\tMz.P-1_A-0\tPn.P-1_A-0\tAb.P-1_A-0\tNb.P-1_A-0\tOn.P-1_A-0\tMz_GeneAModule\tPn_GeneAModule\tAb_GeneAModule\tNb_GeneAModule\tOn_GeneAModule\tMz_GeneBModule\tPn_GeneBModule\tAb_GeneBModule\tNb_GeneBModule\tOn_GeneBModule\n' > matrix_colheads2
cat matrix_colheads2 Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp10 > Edge_Attributes_Collated4c.coexpr_promONLY.matrix2.txt
rm Edge_Attributes_Collated4c.coexpr_promONLY.matrix.tmp* # DONE

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL","NULL";}}' Mz-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.CNEmotifONLY.matrix.txt | cut -f1-9,11 > Edge_Attributes_Collated4c.CNEmotifONLY.matrix.tmp1
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL","NULL";}}' Pn-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.CNEmotifONLY.matrix.tmp1 | cut -f1-10,12 > Edge_Attributes_Collated4c.CNEmotifONLY.matrix.tmp2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL","NULL";}}' Ab-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.CNEmotifONLY.matrix.tmp2 | cut -f1-11,13 > Edge_Attributes_Collated4c.CNEmotifONLY.matrix.tmp3
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL","NULL";}}' Nb-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.CNEmotifONLY.matrix.tmp3 | cut -f1-12,14 > Edge_Attributes_Collated4c.CNEmotifONLY.matrix.tmp4
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL","NULL";}}' On-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.CNEmotifONLY.matrix.tmp4 | cut -f1-13,15 | sed '1d' | awk '{print $0,"NULL","NULL","NULL","NULL","NULL"}' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix.tmp5
cat matrix_colheads2 Edge_Attributes_Collated4c.CNEmotifONLY.matrix.tmp5 > Edge_Attributes_Collated4c.CNEmotifONLY.matrix2.txt
rm Edge_Attributes_Collated4c.CNEmotifONLY.matrix.tmp* # DONE

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' Mz-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.CNEproximalONLY.matrix.txt | cut -f1-9,11 > Edge_Attributes_Collated4c.CNEproximalONLY.matrix.tmp1
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' Pn-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.CNEproximalONLY.matrix.tmp1 | cut -f1-10,12 > Edge_Attributes_Collated4c.CNEproximalONLY.matrix.tmp2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' Ab-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.CNEproximalONLY.matrix.tmp2 | cut -f1-11,13 > Edge_Attributes_Collated4c.CNEproximalONLY.matrix.tmp3
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' Nb-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.CNEproximalONLY.matrix.tmp3 | cut -f1-12,14 > Edge_Attributes_Collated4c.CNEproximalONLY.matrix.tmp4
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' On-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.CNEproximalONLY.matrix.tmp4 | cut -f1-13,15 | sed '1d' | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,"NULL","NULL","NULL","NULL","NULL",$10,$11,$12,$13,$14}' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix.tmp5
cat matrix_colheads2 Edge_Attributes_Collated4c.CNEproximalONLY.matrix.tmp5 > Edge_Attributes_Collated4c.CNEproximalONLY.matrix2.txt # DONE
rm Edge_Attributes_Collated4c.CNEproximalONLY.matrix.tmp* # DONE

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' Mz-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.targetscan7ONLY.matrix.txt | cut -f1-9,11 > Edge_Attributes_Collated4c.targetscan7ONLY.matrix.tmp1
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' Pn-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.targetscan7ONLY.matrix.tmp1 | cut -f1-10,12 > Edge_Attributes_Collated4c.targetscan7ONLY.matrix.tmp2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' Ab-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.targetscan7ONLY.matrix.tmp2 | cut -f1-11,13 > Edge_Attributes_Collated4c.targetscan7ONLY.matrix.tmp3
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' Nb-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.targetscan7ONLY.matrix.tmp3 | cut -f1-12,14 > Edge_Attributes_Collated4c.targetscan7ONLY.matrix.tmp4
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' On-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.targetscan7ONLY.matrix.tmp4 | cut -f1-13,15 | sed '1d' | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,"NULL","NULL","NULL","NULL","NULL",$10,$11,$12,$13,$14}' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix.tmp5
cat matrix_colheads2 Edge_Attributes_Collated4c.targetscan7ONLY.matrix.tmp5 > Edge_Attributes_Collated4c.targetscan7ONLY.matrix2.txt
rm Edge_Attributes_Collated4c.targetscan7ONLY.matrix.tmp*

# iac. check all column numbers for each row
for i in *matrix2.txt ; do awk '{print NF}' $i | sort -nu | head -n 1 ; done # 19
for i in *matrix2.txt ; do awk '{print NF}' $i | sort -nu | tail -n 1 ; done # 19

# ib. then compare the GeneA modules per species, and same for GeneB to highlight module switches - add 1 for switch, 0 for noswitch, and "NULL" if no comparison can be made for all pairwise comparisons
# Mz-Pn - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($10=="NULL" || $11=="NULL")print $0,$20="NULL";else if($10!=$11)print $0,$20=1;else print $0,$20=0;}' OFS='\t' $i > $i.1
  awk '{if($15=="NULL" || $16=="NULL")print $0,$21="NULL";else if($15!=$16)print $0,$21=1;else print $0,$21=0;}' OFS='\t' $i.1 > $i.2
done
# Mz-Ab - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($10=="NULL" || $12=="NULL")print $0,$22="NULL";else if($10!=$12)print $0,$22=1;else print $0,$22=0;}' OFS='\t' $i.2 > $i.3
  awk '{if($15=="NULL" || $17=="NULL")print $0,$23="NULL";else if($15!=$17)print $0,$23=1;else print $0,$23=0;}' OFS='\t' $i.3 > $i.4
done
# Mz-Nb - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($10=="NULL" || $13=="NULL")print $0,$24="NULL";else if($10!=$13)print $0,$24=1;else print $0,$24=0;}' OFS='\t' $i.4 > $i.5
  awk '{if($15=="NULL" || $18=="NULL")print $0,$25="NULL";else if($15!=$18)print $0,$25=1;else print $0,$25=0;}' OFS='\t' $i.5 > $i.6
done
# Mz-On - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($10=="NULL" || $14=="NULL")print $0,$26="NULL";else if($10!=$14)print $0,$26=1;else print $0,$26=0;}' OFS='\t' $i.6 > $i.7
  awk '{if($15=="NULL" || $19=="NULL")print $0,$27="NULL";else if($15!=$19)print $0,$27=1;else print $0,$27=0;}' OFS='\t' $i.7 > $i.8
done
# Pn-Ab - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($11=="NULL" || $12=="NULL")print $0,$28="NULL";else if($11!=$12)print $0,$28=1;else print $0,$28=0;}' OFS='\t' $i.8 > $i.9
  awk '{if($16=="NULL" || $17=="NULL")print $0,$29="NULL";else if($16!=$17)print $0,$29=1;else print $0,$29=0;}' OFS='\t' $i.9 > $i.10
done
# Pn-Nb - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($11=="NULL" || $13=="NULL")print $0,$30="NULL";else if($11!=$13)print $0,$30=1;else print $0,$30=0;}' OFS='\t' $i.10 > $i.11
  awk '{if($16=="NULL" || $18=="NULL")print $0,$31="NULL";else if($16!=$18)print $0,$31=1;else print $0,$31=0;}' OFS='\t' $i.11 > $i.12
done
# Pn-On - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($11=="NULL" || $14=="NULL")print $0,$32="NULL";else if($11!=$14)print $0,$32=1;else print $0,$32=0;}' OFS='\t' $i.12 > $i.13
  awk '{if($16=="NULL" || $19=="NULL")print $0,$33="NULL";else if($16!=$19)print $0,$33=1;else print $0,$33=0;}' OFS='\t' $i.13 > $i.14
done
# Ab-Nb - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($12=="NULL" || $13=="NULL")print $0,$34="NULL";else if($12!=$13)print $0,$34=1;else print $0,$34=0;}' OFS='\t' $i.14 > $i.15
  awk '{if($17=="NULL" || $18=="NULL")print $0,$35="NULL";else if($17!=$18)print $0,$35=1;else print $0,$35=0;}' OFS='\t' $i.15 > $i.16
done
# Ab-On - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($12=="NULL" || $14=="NULL")print $0,$36="NULL";else if($12!=$14)print $0,$36=1;else print $0,$36=0;}' OFS='\t' $i.16 > $i.17
  awk '{if($17=="NULL" || $19=="NULL")print $0,$37="NULL";else if($17!=$19)print $0,$37=1;else print $0,$37=0;}' OFS='\t' $i.17 > $i.18
done
# Nb-On - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($13=="NULL" || $14=="NULL")print $0,$38="NULL";else if($13!=$14)print $0,$38=1;else print $0,$38=0;}' OFS='\t' $i.18 > $i.19
  awk '{if($18=="NULL" || $19=="NULL")print $0,$39="NULL";else if($18!=$19)print $0,$39=1;else print $0,$39=0;}' OFS='\t' $i.19 > $i.20
done

printf 'interaction\tGeneA\tGeneB\tsource\tMz.P-1_A-0\tPn.P-1_A-0\tAb.P-1_A-0\tNb.P-1_A-0\tOn.P-1_A-0\tMz_GeneAModule\tPn_GeneAModule\tAb_GeneAModule\tNb_GeneAModule\tOn_GeneAModule\tMz_GeneBModule\tPn_GeneBModule\tAb_GeneBModule\tNb_GeneBModule\tOn_GeneBModule\tMz-Pn_GeneA\tMz-Pn_GeneB\tMz-Ab_GeneA\tMz-Ab_GeneB\tMz-Nb_GeneA\tMz-Nb_GeneB\tMz-On_GeneA\tMz-On_GeneB\tPn-Ab_GeneA\tPn-Ab_GeneB\tPn-Nb_GeneA\tPn-Nb_GeneB\tPn-On_GeneA\tPn-On_GeneB\tAb-Nb_GeneA\tAb-Nb_GeneB\tAb-On_GeneA\tAb-On_GeneB\tNb-On_GeneA\tNb-On_GeneB\n' > matrix_colheads3
cat matrix_colheads3 Edge_Attributes_Collated4c.coexpr_promONLY.matrix2.txt.20 > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.txt
cat matrix_colheads3 Edge_Attributes_Collated4c.CNEmotifONLY.matrix2.txt.20 > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3.txt
cat matrix_colheads3 Edge_Attributes_Collated4c.CNEproximalONLY.matrix2.txt.20 > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3.txt
cat matrix_colheads3 Edge_Attributes_Collated4c.targetscan7ONLY.matrix2.txt.20 > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3.txt
rm *.matrix2.txt.*

for i in *matrix3.txt ; do awk '{print NF}' $i | sort -nu | head -n 1 ; done # 39
for i in *matrix3.txt ; do awk '{print NF}' $i | sort -nu | tail -n 1 ; done # 39

## final edge matrices
ls -tlrh /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/matrix/*matrix3.txt # these are per edge type, not species


#### For all comparisons, you should only use 1:1 orthologs - that way we ensure edges are absent not based on absence from genome or modules of coexpression
cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/matrix
mkdir 1to1only
cd 1to1only
awk '$2!="NULL" && $3!="NULL" && $4!="NULL" && $5!="NULL" && $6!="NULL"' OFS='\t' ../../Module_genesandexpr/OGIDS.txt5 > ../../Module_genesandexpr/OGIDS.1to1.txt5
ln -s ../../../Module_genesandexpr/OGIDS.1to1.txt5
for i in ../Edge_Attributes_Collated4c.*ONLY.matrix3.txt ; do ln -s $i ; done
# only use edges where a 1to1 ortholog present in both col2 and col3
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.txt | grep -v 'REMOVEME' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneA1to1OGID.txt #533270/1053167 - 51%
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$3]){print $0,a[$3];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneA1to1OGID.txt | grep -v 'REMOVEME' | cut -f1-39 > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt #215810/1053167 - 20%
rm Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneA1to1OGID.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3.txt | grep -v 'REMOVEME' | cut -f1-39 > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt # 1034457/1930418 - 54%
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$3]){print $0,a[$3];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3.txt | grep -v 'REMOVEME' | cut -f1-39 > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt # 235548/594208 - 40%
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$3]){print $0,a[$3];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3.txt | grep -v 'REMOVEME' | cut -f1-39 > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt # 460320/1021753 - 45%
# final 1to1 OGID consensus edge files to use
# Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt
# Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt
# Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt
# Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt

## create one large script to pull out all the comparison files
cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/matrix/1to1only
nano 1to1_getmodandedgeswitch_all.sh

#!/bin/bash
cd $PBS_O_WORKDIR;

# 1. Interactions present in all 5 species (consensus nodes)
#coexpr_promONLY - TF (geneA)
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$20==1 || $22==1 || $24==1 || $26==1 || $28==1 || $30==1 || $32==1 || $34==1 || $36==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_AllTFsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$20==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_MzPnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$22==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_MzAbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$24==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_MzNbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$26==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_MzOnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$28==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_PnAbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$30==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_PnNbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$32==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_PnOnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$34==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_AbNbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$36==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_AbOnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$38==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_NbOnTFsw.txt

#coexpr_promONLY - TG (geneB)
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$21==1 || $23==1 || $25==1 || $27==1 || $29==1 || $31==1 || $33==1 || $35==1 || $37==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_AllTGsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$21==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_MzPnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$23==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_MzAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$25==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_MzNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$27==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_MzOnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$29==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_PnAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$31==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_PnNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$33==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_PnOnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$35==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_AbNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$37==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_AbOnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$39==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_NbOnTGsw.txt

# CNEmotif - TF GeneA
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$20==1 || $22==1 || $24==1 || $26==1 || $28==1 || $30==1 || $32==1 || $34==1 || $36==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-OnNbAbPnMz_AllTFsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$20==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-OnNbAbPnMz_MzPnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$22==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-OnNbAbPnMz_MzAbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$24==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-OnNbAbPnMz_MzNbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$26==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-OnNbAbPnMz_MzOnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$28==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-OnNbAbPnMz_PnAbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$30==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-OnNbAbPnMz_PnNbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$32==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-OnNbAbPnMz_PnOnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$34==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-OnNbAbPnMz_AbNbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$36==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-OnNbAbPnMz_AbOnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$38==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-OnNbAbPnMz_NbOnTFsw.txt

# CNEproximal - TG GeneB
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$21==1 || $23==1 || $25==1 || $27==1 || $29==1 || $31==1 || $33==1 || $35==1 || $37==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_AllTGsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$21==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_MzPnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$23==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_MzAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$25==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_MzNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$27==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_MzOnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$29==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_PnAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$31==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_PnNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$33==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_PnOnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$35==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_AbNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$37==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_AbOnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$39==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_NbOnTGsw.txt

# targetscan7 - TG GeneB
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$21==1 || $23==1 || $25==1 || $27==1 || $29==1 || $31==1 || $33==1 || $35==1 || $37==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_AllTGsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$21==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_MzPnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$23==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_MzAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$25==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_MzNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$27==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_MzOnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$29==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_PnAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$31==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_PnNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$33==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_PnOnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$35==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_AbNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$37==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_AbOnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$39==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_NbOnTGsw.txt

# 2. Interactions present in Nb, Ab, Pn, Mz ONLY
#coexpr_promONLY - TF (geneA)
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$20==1 || $22==1 || $24==1 || $28==1 || $30==1 || $34==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_AllTFsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$20==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_MzPnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$22==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_MzAbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$24==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_MzNbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$28==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_PnAbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$30==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_PnNbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$34==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_AbNbTFsw.txt

#coexpr_promONLY - TG (geneB)
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$21==1 || $23==1 || $25==1 || $29==1 || $31==1 || $35==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_AllTGsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$21==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_MzPnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$23==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_MzAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$25==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_MzNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$29==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_PnAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$31==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_PnNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$35==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_AbNbTGsw.txt

# CNEmotif - TF GeneA
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$20==1 || $22==1 || $24==1 || $28==1 || $30==1 || $34==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-NbAbPnMz_AllTFsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$20==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-NbAbPnMz_MzPnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$22==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-NbAbPnMz_MzAbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$24==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-NbAbPnMz_MzNbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$28==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-NbAbPnMz_PnAbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$30==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-NbAbPnMz_PnNbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$34==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-NbAbPnMz_AbNbTFsw.txt

# CNEproximal - TG GeneB
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$21==1 || $23==1 || $25==1 || $29==1 || $31==1 || $35==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-NbAbPnMz_AllTGsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$21==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-NbAbPnMz_MzPnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$23==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-NbAbPnMz_MzAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$25==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-NbAbPnMz_MzNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$29==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-NbAbPnMz_PnAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$31==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-NbAbPnMz_PnNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$35==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-NbAbPnMz_AbNbTGsw.txt

# targetscan7 - TG GeneB
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$21==1 || $23==1 || $25==1 || $29==1 || $31==1 || $35==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-NbAbPnMz_AllTGsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$21==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-NbAbPnMz_MzPnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$23==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-NbAbPnMz_MzAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$25==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-NbAbPnMz_MzNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$29==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-NbAbPnMz_PnAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$31==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-NbAbPnMz_PnNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$35==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-NbAbPnMz_AbNbTGsw.txt

# 3. Interactions present in Ab, Pn, Mz (haplochromines) ONLY
#coexpr_promONLY - TF (geneA)
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$20==1 || $22==1 || $28==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-AbPnMz_AllTFsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$20==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-AbPnMz_MzPnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$22==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-AbPnMz_MzAbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$28==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-AbPnMz_PnAbTFsw.txt

#coexpr_promONLY - TG (geneB)
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$21==1 || $23==1 || $29==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-AbPnMz_AllTGsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$21==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-AbPnMz_MzPnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$23==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-AbPnMz_MzAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$29==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-AbPnMz_PnAbTGsw.txt

# CNEmotif - TF GeneA
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$20==1 || $22==1 || $28==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-AbPnMz_AllTFsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$20==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-AbPnMz_MzPnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$22==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-AbPnMz_MzAbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$28==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-AbPnMz_PnAbTFsw.txt

# CNEproximal - TG GeneB
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$21==1 || $23==1 || $29==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-AbPnMz_AllTGsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$21==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-AbPnMz_MzPnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$23==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-AbPnMz_MzAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$29==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-AbPnMz_PnAbTGsw.txt

# targetscan7 - TG GeneB
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$21==1 || $23==1 || $29==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-AbPnMz_AllTGsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$21==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-AbPnMz_MzPnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$23==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-AbPnMz_MzAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$29==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-AbPnMz_PnAbTGsw.txt

# 4. Interactions present in Pn, Mz ONLY
#coexpr_promONLY - TF (geneA)
# a. get the switches between the single pair
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$20==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-PnMz_AllTFsw.txt

#coexpr_promONLY - TG (geneB)
# a. get the switches between the single pair
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$21==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-PnMz_AllTGsw.txt

# CNEmotif - TF GeneA
# a. get the switches between the single pair
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$20==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-PnMz_AllTFsw.txt

# CNEproximal - TG GeneB
# a. get the switches between the single pair
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$21==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-PnMz_AllTGsw.txt

# targetscan7 - TG GeneB
# a. get the switches between the single pair
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$21==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-PnMz_AllTGsw.txt

# 5. TF-TG interactions where both genes switched (along phylogeny) but found in same module as each other (cis)
# a. Interactions present in all 5 species (consensus nodes), any of the five species have TF-TG switched and foundin same module
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '(($20==1) && ($21==1)) || (($22==1) && ($23==1)) || (($24==1) && ($25==1)) || (($26==1) && ($27==1)) || (($28==1) && ($29==1)) || (($30==1) && ($31==1)) || (($32==1) && ($33==1)) || (($34==1) && ($35==1)) || (($36==1) && ($37==1)) || (($38==1) && ($39==1))' OFS='\t' | awk '$10==$15 || $11==$16 || $12==$17 || $13==$18 || $14==$19' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_AllTFTGswSameMod.txt
# b. Interactions present in NbAbPnMz
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '(($20==1) && ($21==1)) || (($22==1) && ($23==1)) || (($24==1) && ($25==1)) || (($26==1) && ($27==1)) || (($28==1) && ($29==1)) || (($30==1) && ($31==1)) || (($32==1) && ($33==1)) || (($34==1) && ($35==1)) || (($36==1) && ($37==1))' OFS='\t' | awk '$10==$15 || $11==$16 || $12==$17 || $13==$18' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_AllTFTGswSameMod.txt
# c. Interactions present in AbPnMz
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '(($20==1) && ($21==1)) || (($22==1) && ($23==1)) || (($24==1) && ($25==1)) || (($26==1) && ($27==1)) || (($28==1) && ($29==1)) || (($30==1) && ($31==1)) || (($32==1) && ($33==1)) || (($34==1) && ($35==1))' OFS='\t' | awk '$10==$15 || $11==$16 || $12==$17' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-AbPnMz_AllTFTGswSameMod.txt
# d. Interactions present in PnMz
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '(($20==1) && ($21==1)) || (($22==1) && ($23==1)) || (($24==1) && ($25==1)) || (($26==1) && ($27==1)) || (($28==1) && ($29==1)) || (($30==1) && ($31==1)) || (($32==1) && ($33==1))' OFS='\t' | awk '$10==$15 || $11==$16' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-PnMz_AllTFTGswSameMod.txt

# 6. TF-TG interactions where both genes switched (along phylogeny) but found in different modules as each other (trans)
# a. Interactions present in all 5 species (consensus nodes), any of the five species have TF-TG switched and foundin same module
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '(($20==1) && ($21==1)) || (($22==1) && ($23==1)) || (($24==1) && ($25==1)) || (($26==1) && ($27==1)) || (($28==1) && ($29==1)) || (($30==1) && ($31==1)) || (($32==1) && ($33==1)) || (($34==1) && ($35==1)) || (($36==1) && ($37==1)) || (($38==1) && ($39==1))' OFS='\t' | awk '$10!=$15 || $11!=$16 || $12!=$17 || $13!=$18 || $14!=$19' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_AllTFTGswDiffMod.txt
# b. Interactions present in NbAbPnMz
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '(($20==1) && ($21==1)) || (($22==1) && ($23==1)) || (($24==1) && ($25==1)) || (($26==1) && ($27==1)) || (($28==1) && ($29==1)) || (($30==1) && ($31==1)) || (($32==1) && ($33==1)) || (($34==1) && ($35==1)) || (($36==1) && ($37==1))' OFS='\t' | awk '$10!=$15 || $11!=$16 || $12!=$17 || $13!=$18' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_AllTFTGswDiffMod.txt
# c. Interactions present in AbPnMz
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '(($20==1) && ($21==1)) || (($22==1) && ($23==1)) || (($24==1) && ($25==1)) || (($26==1) && ($27==1)) || (($28==1) && ($29==1)) || (($30==1) && ($31==1)) || (($32==1) && ($33==1)) || (($34==1) && ($35==1))' OFS='\t' | awk '$10!=$15 || $11!=$16 || $12!=$17' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-AbPnMz_AllTFTGswDiffMod.txt
# d. Interactions present in PnMz
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '(($20==1) && ($21==1)) || (($22==1) && ($23==1)) || (($24==1) && ($25==1)) || (($26==1) && ($27==1)) || (($28==1) && ($29==1)) || (($30==1) && ($31==1)) || (($32==1) && ($33==1))' OFS='\t' | awk '$10!=$15 || $11!=$16' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-PnMz_AllTFTGswDiffMod.txt


# total number of consensus edges present in those species only along the phylogeny
for i in *.matrix3*1to1OGID.txt ; do
  awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' $i | wc -l >> 1a.OnNbAbPnMz_totalstartingedges
done # OnNbAbPnMz

for i in *.matrix3*1to1OGID.txt ; do
  awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' $i | wc -l >> 1b.NbAbPnMz_totalstartingedges
done # NbAbPnMz

for i in *.matrix3*1to1OGID.txt ; do
  awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' $i | wc -l >> 1c.AbPnMz_totalstartingedges
done # AbPnMz

for i in *.matrix3*1to1OGID.txt ; do
  awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' $i | wc -l >> 1d.PnMz_totalstartingedges
done # PnMz


wc -l Edge_Attributes_Collated4c.*.matrix3-*1to1OGID-*_All*sw.txt > 2.modswitchcounts
## pull out numbers - where are expansions of switched TF/TG in consensus edges, remember, these are specific for those ancestral nodes, absent in the others


# iii.	How many module switched genes are also rewired in networks? > how many of these are associated with duplicated genes? If it is too many then a separate paper.
# In the main files, perform the same comparisons along the phylogeny (all 5 species, 4 species, 3 and 2) of
  # module switches in GeneA and GeneB (col20-39), this time though,
  # the edge needs to be absent in at least one of the comparison species (col5-9) and
  # at least one other edge with the same node (col2/3) must exist

#coexpr_promONLY - TF (geneA)
# a. first, get network switches (at least one '1' in cols 5-9), then, the module switch needs to be the same as an absent interaction (don't bother in scenarios when 0 in more than one species, make this species specific within the species you're comparing and cat)
awk '$5==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$20==1 || $22==1 || $24==1 || $26==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW2.txt #Mz requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$6==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$20==1 || $28==1 || $30==1 || $32==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW2.txt #Pn requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$7==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$22==1 || $28==1 || $34==1 || $36==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW2.txt #Ab requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$8==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$24==1 || $30==1 || $34==1 || $38==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW2.txt #Nb requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$26==1 || $32==1 || $36==1 || $38==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW2.txt #On requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
sort -u Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW2.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt
rm Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW2.txt

# b. Re-usage events linked to module assignment switches (edge presence in species, loss in some species and presence in a common ancestor/basal species in tree + switches vs basal species implies re-usage derived from switch)
# MzOn-PnAbNb (edge present in Mz and On, absent in 3 species, TF switched in Mz vs On and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$26==1' OFS='\t' | awk '$20==1 || $22==1 || $24==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_MzOn-PnAbNb.txt
# MzNb-PnAbOn (edge present in Mz and Nb, absent in 3 species, TF switched in Mz vs Nb and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$24==1' OFS='\t' | awk '$20==1 || $22==1 || $26==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_MzNb-PnAbOn.txt
# MzAb-PnNbOn (edge present in Mz and Ab, absent in 3 species, TF switched in Mz vs Ab and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in Ab (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$22==1' OFS='\t' | awk '$20==1 || $24==1 || $26==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_MzAb-PnNbOn.txt
# MzPn-AbNbOn (edge present in Mz and Pn, absent in 3 species, TF switched in Mz vs Pn and Mz vs any of other 3 species) - this implies re-usage of an MzPn ancestral state but re-purpose in Mz derived from TF module assignment switch
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$20==1' OFS='\t' | awk '$22==1 || $24==1 || $26==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_MzPn-AbNbOn.txt

# PnOn-MzAbNb (edge present in Pn and On, absent in 3 species, TF switched in Pn vs On and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$32==1' OFS='\t' | awk '$20==1 || $28==1 || $30==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_PnOn-MzAbNb.txt
# PnNb-MzAbOn (edge present in Pn and Nb, absent in 3 species, TF switched in Pn vs Nb and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$30==1' OFS='\t' | awk '$20==1 || $28==1 || $32==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_PnNb-MzAbOn.txt
# PnAb-MzNbOn (edge present in Pn and Ab, absent in 3 species, TF switched in Pn vs Ab and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in Ab (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$28==1' OFS='\t' | awk '$20==1 || $30==1 || $32==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_PnAb-MzNbOn.txt
# PnMz-AbNbOn (edge present in Pn and Mz, absent in 3 species, TF switched in Pn vs Mz and Pn vs any of other 3 species) - this implies re-usage of an PnMz ancestral state but re-purpose in Pn derived from TF module assignment switch
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$20==1' OFS='\t' | awk '$28==1 || $30==1 || $32==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_PnMz-AbNbOn.txt

# AbOn-MzPnNb (edge present in Ab and On, absent in 3 species, TF switched in Ab vs On and Ab vs any of other 3 species) - this implies re-usage in Ab of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$36==1' OFS='\t' | awk '$22==1 || $28==1 || $34==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_AbOn-MzPnNb.txt
# AbNb-MzPnOn (edge present in Ab and Nb, absent in 3 species, TF switched in Ab vs Nb and Ab vs any of other 3 species) - this implies re-usage in Ab of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$34==1' OFS='\t' | awk '$22==1 || $28==1 || $36==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_AbNb-MzPnOn.txt
# AbPn-MzNbOn (edge present in Ab and Pn, absent in 3 species, TF switched in Ab vs Pn and Ab vs any of other 3 species) - this implies re-usage of an AbPn ancestral state (haplochromine) but re-purpose in Ab derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$28==1' OFS='\t' | awk '$22==1 || $34==1 || $36==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_AbPn-MzNbOn.txt
# AbMz-PnNbOn (edge present in Ab and Mz, absent in 3 species, TF switched in Ab vs Mz and Ab vs any of other 3 species) - this implies re-usage of an AbMz ancestral state (haplochromine) but re-purpose in Ab derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$22==1' OFS='\t' | awk '$28==1 || $34==1 || $36==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_AbMz-PnNbOn.txt

# NbOn-MzPnAb (edge present in Nb and On, absent in 3 species, TF switched in Nb vs On and Nb vs any of other 3 species) - this implies re-usage in Nb of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$38==1' OFS='\t' | awk '$24==1 || $30==1 || $34==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_NbOn-MzPnAb.txt
# NbAb-MzPnOn (edge present in Nb and Ab, absent in 3 species, TF switched in Nb vs Ab and Nb vs any of other 3 species) - this implies re-usage of an NbAb ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$34==1' OFS='\t' | awk '$24==1 || $30==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_NbAb-MzPnOn.txt
# NbPn-MzAbOn (edge present in Nb and Pn, absent in 3 species, TF switched in Nb vs Pn and Nb vs any of other 3 species) - this implies re-usage of an NbPn ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$30==1' OFS='\t' | awk '$24==1 || $34==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_NbPn-MzAbOn.txt
# NbMz-PnAbOn (edge present in Nb and Mz, absent in 3 species, TF switched in Nb vs Mz and Nb vs any of other 3 species) - this implies re-usage of an NbMz ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$24==1' OFS='\t' | awk '$30==1 || $34==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_NbMz-PnAbOn.txt

# OnNb-MzPnAb (edge present in On and Nb, absent in 3 species, TF switched in On vs Nb and On vs any of other 3 species) - this implies re-usage of an OnNb ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$38==1' OFS='\t' | awk '$26==1 || $32==1 || $36==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_OnNb-MzPnAb.txt
# OnAb-MzPnNb (edge present in On and Ab, absent in 3 species, TF switched in On vs Ab and On vs any of other 3 species) - this implies re-usage of an OnAb ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$36==1' OFS='\t' | awk '$26==1 || $32==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_OnAb-MzPnNb.txt
# OnPn-MzAbNb (edge present in On and Pn, absent in 3 species, TF switched in On vs Pn and On vs any of other 3 species) - this implies re-usage of an OnPn ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$32==1' OFS='\t' | awk '$26==1 || $36==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_OnPn-MzAbNb.txt
# OnMz-PnAbNb (edge present in On and Mz, absent in 3 species, TF switched in On vs Mz and On vs any of other 3 species) - this implies re-usage of an OnMz ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt | awk '$26==1' OFS='\t' | awk '$32==1 || $36==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_OnMz-PnAbNb.txt

# c. Re-wiring events linked to module assignment switches (edge present in only one species + switching in any of the other species and then check for reocurring geneA nodes, so that there will be an edge containing that node in the other species)
# Mz-PnAbNbOn (edge present in Mz, absent in other species and TF switched vs at least any one of the other species)
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$20==1 || $22==1 || $24==1 || $26==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Mz-PnAbNbOn.txt
# Pn-MzAbNbOn (edge present in Pn, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$20==1 || $28==1 || $30==1 || $32==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt
# Ab-MzPnNbOn (edge present in Ab, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$22==1 || $28==1 || $34==1 || $36==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt
# Nb-MzPnAbOn (edge present in Nb, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$24==1 || $30==1 || $34==1 || $38==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt
# On-MzPnAbNb (edge present in On, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$26==1 || $32==1 || $36==1 || $38==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_On-MzPnAbNb.txt

# d. then, highlight the number of switches between pairs (pairwise-specific rewiring events) irrespective of other species - this can be represented as a matrix
# Mz-Pn (edge present in Mz, absent in Pn, TF switched in Mz vs Pn)
awk '$5==1 && $6==0 && $20==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_MzvsPn.txt
# Pn-Mz
awk '$5==0 && $6==1 && $20==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_PnvsMz.txt
# Mz-Ab
awk '$5==1 && $7==0 && $22==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_MzvsAb.txt
# Ab-Mz
awk '$5==0 && $7==1 && $22==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_AbvsMz.txt
# Mz-Nb
awk '$5==1 && $8==0 && $24==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_MzvsNb.txt
# Nb-Mz
awk '$5==0 && $8==1 && $24==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_NbvsMz.txt
# Mz-On
awk '$5==1 && $9==0 && $26==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_MzvsOn.txt
# On-Mz
awk '$5==0 && $9==1 && $26==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_OnvsMz.txt
# Pn-Ab
awk '$6==1 && $7==0 && $28==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_PnvsAb.txt
# Ab-Pn
awk '$6==0 && $7==1 && $28==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_AbvsPn.txt
# Pn-Nb
awk '$6==1 && $8==0 && $30==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_PnvsNb.txt
# Nb-Pn
awk '$6==0 && $8==1 && $30==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_NbvsPn.txt
# Pn-On
awk '$6==1 && $9==0 && $32==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_PnvsOn.txt
# On-Pn
awk '$6==0 && $9==1 && $32==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_OnvsPn.txt
# Ab-Nb
awk '$7==1 && $8==0 && $34==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_AbvsNb.txt
# Nb-Ab
awk '$7==0 && $8==1 && $34==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_NbvsAb.txt
# Ab-On
awk '$7==1 && $9==0 && $36==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_AbvsOn.txt
# On-Ab
awk '$7==0 && $9==1 && $36==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_OnvsAb.txt
# Nb-On
awk '$8==1 && $9==0 && $38==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_NbvsOn.txt
# On-Nb
awk '$8==0 && $9==1 && $38==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_OnvsNb.txt
# get total number of pairwise rows
wc -l Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_*.txt > 3.coexpr_geneApairwiseSW_wc

# e. then, highlight the number of switches in the haplochromines specifically (haplochromine-specific rewiring events)
# Create another main table from which to work
# for this, the edge needs to be present in any of the haplochromines (Mz || Pn || Ab) AND,
# also any of the ancestor (Nb || On) to be rewired in the haplochromines AND,
# the col2/col3 node needs to be present as other edges
awk '$5==1 || $6==1 || $7==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$8==1 || $9==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW.txt # 148985
# Mz-PnAb (edge present in Mz, absent in Pn and Ab, TF switched in Mz vs Pn and Mz vs Ab)
awk '$5==1 && $6==0 && $7==0 && $20==1 && $22==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_MzvsPnAb.txt
# Pn-MzAb
awk '$5==0 && $6==1 && $7==0 && $20==1 && $28==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_PnvsMzAb.txt
# Ab-MzPn
awk '$5==0 && $6==0 && $7==1 && $22==1 && $28==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_AbvsMzPn.txt
# get total numbers
wc -l Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_*.txt > 4.coexpr_geneAhaploSW_wc


#coexpr_promONLY - TG (geneB)
# a. first, get network switches (at least one '1' in cols 5-9), then, the module switch needs to be the same as an absent interaction (don't bother in scenarios when 0 in more than one species, make this species specific within the species you're comparing and cat)
awk '$5==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$21==1 || $23==1 || $25==1 || $27==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW2.txt #Mz requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$6==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$21==1 || $29==1 || $31==1 || $33==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW2.txt #Pn requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$7==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$23==1 || $29==1 || $35==1 || $37==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW2.txt #Ab requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$8==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$25==1 || $31==1 || $35==1 || $39==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW2.txt #Nb requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$27==1 || $33==1 || $37==1 || $39==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW2.txt #On requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
sort -u Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW2.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt
rm Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW2.txt

# b. Re-usage events linked to module assignment switches (edge presence in species, loss in some species and presence in a common ancestor/basal species in tree + switches vs basal species implies re-usage derived from switch)
# MzOn-PnAbNb (edge present in Mz and On, absent in 3 species, TF switched in Mz vs On and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$27==1' OFS='\t' | awk '$21==1 || $23==1 || $25==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_MzOn-PnAbNb.txt
# MzNb-PnAbOn (edge present in Mz and Nb, absent in 3 species, TF switched in Mz vs Nb and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$25==1' OFS='\t' | awk '$21==1 || $23==1 || $27==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_MzNb-PnAbOn.txt
# MzAb-PnNbOn (edge present in Mz and Ab, absent in 3 species, TF switched in Mz vs Ab and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in Ab (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$23==1' OFS='\t' | awk '$21==1 || $25==1 || $27==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_MzAb-PnNbOn.txt
# MzPn-AbNbOn (edge present in Mz and Pn, absent in 3 species, TF switched in Mz vs Pn and Mz vs any of other 3 species) - this implies re-usage of an MzPn ancestral state but re-purpose in Mz derived from TF module assignment switch
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$21==1' OFS='\t' | awk '$23==1 || $25==1 || $27==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_MzPn-AbNbOn.txt

# PnOn-MzAbNb (edge present in Pn and On, absent in 3 species, TF switched in Pn vs On and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$33==1' OFS='\t' | awk '$21==1 || $29==1 || $31==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_PnOn-MzAbNb.txt
# PnNb-MzAbOn (edge present in Pn and Nb, absent in 3 species, TF switched in Pn vs Nb and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$31==1' OFS='\t' | awk '$21==1 || $29==1 || $33==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_PnNb-MzAbOn.txt
# PnAb-MzNbOn (edge present in Pn and Ab, absent in 3 species, TF switched in Pn vs Ab and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in Ab (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$29==1' OFS='\t' | awk '$21==1 || $31==1 || $33==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_PnAb-MzNbOn.txt
# PnMz-AbNbOn (edge present in Pn and Mz, absent in 3 species, TF switched in Pn vs Mz and Pn vs any of other 3 species) - this implies re-usage of an PnMz ancestral state but re-purpose in Pn derived from TF module assignment switch
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$21==1' OFS='\t' | awk '$29==1 || $31==1 || $33==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_PnMz-AbNbOn.txt

# AbOn-MzPnNb (edge present in Ab and On, absent in 3 species, TF switched in Ab vs On and Ab vs any of other 3 species) - this implies re-usage in Ab of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$37==1' OFS='\t' | awk '$23==1 || $29==1 || $35==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_AbOn-MzPnNb.txt
# AbNb-MzPnOn (edge present in Ab and Nb, absent in 3 species, TF switched in Ab vs Nb and Ab vs any of other 3 species) - this implies re-usage in Ab of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$35==1' OFS='\t' | awk '$23==1 || $29==1 || $37==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_AbNb-MzPnOn.txt
# AbPn-MzNbOn (edge present in Ab and Pn, absent in 3 species, TF switched in Ab vs Pn and Ab vs any of other 3 species) - this implies re-usage of an AbPn ancestral state (haplochromine) but re-purpose in Ab derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$29==1' OFS='\t' | awk '$23==1 || $35==1 || $37==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_AbPn-MzNbOn.txt
# AbMz-PnNbOn (edge present in Ab and Mz, absent in 3 species, TF switched in Ab vs Mz and Ab vs any of other 3 species) - this implies re-usage of an AbMz ancestral state (haplochromine) but re-purpose in Ab derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$23==1' OFS='\t' | awk '$29==1 || $35==1 || $37==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_AbMz-PnNbOn.txt

# NbOn-MzPnAb (edge present in Nb and On, absent in 3 species, TF switched in Nb vs On and Nb vs any of other 3 species) - this implies re-usage in Nb of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$39==1' OFS='\t' | awk '$25==1 || $31==1 || $35==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_NbOn-MzPnAb.txt
# NbAb-MzPnOn (edge present in Nb and Ab, absent in 3 species, TF switched in Nb vs Ab and Nb vs any of other 3 species) - this implies re-usage of an NbAb ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$35==1' OFS='\t' | awk '$25==1 || $31==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_NbAb-MzPnOn.txt
# NbPn-MzAbOn (edge present in Nb and Pn, absent in 3 species, TF switched in Nb vs Pn and Nb vs any of other 3 species) - this implies re-usage of an NbPn ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$31==1' OFS='\t' | awk '$25==1 || $35==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_NbPn-MzAbOn.txt
# NbMz-PnAbOn (edge present in Nb and Mz, absent in 3 species, TF switched in Nb vs Mz and Nb vs any of other 3 species) - this implies re-usage of an NbMz ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$25==1' OFS='\t' | awk '$31==1 || $35==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_NbMz-PnAbOn.txt

# OnNb-MzPnAb (edge present in On and Nb, absent in 3 species, TF switched in On vs Nb and On vs any of other 3 species) - this implies re-usage of an OnNb ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$39==1' OFS='\t' | awk '$27==1 || $33==1 || $37==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_OnNb-MzPnAb.txt
# OnAb-MzPnNb (edge present in On and Ab, absent in 3 species, TF switched in On vs Ab and On vs any of other 3 species) - this implies re-usage of an OnAb ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$37==1' OFS='\t' | awk '$27==1 || $33==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_OnAb-MzPnNb.txt
# OnPn-MzAbNb (edge present in On and Pn, absent in 3 species, TF switched in On vs Pn and On vs any of other 3 species) - this implies re-usage of an OnPn ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$33==1' OFS='\t' | awk '$27==1 || $37==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_OnPn-MzAbNb.txt
# OnMz-PnAbNb (edge present in On and Mz, absent in 3 species, TF switched in On vs Mz and On vs any of other 3 species) - this implies re-usage of an OnMz ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt | awk '$27==1' OFS='\t' | awk '$33==1 || $37==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_OnMz-PnAbNb.txt

# c. Re-wiring events linked to module assignment switches (edge present in only one species + switching in any of the other species and then check for reocurring geneB nodes, so that there will be an edge containing that node in the other species)
# Mz-PnAbNbOn (edge present in Mz, absent in other species and TG switched vs at least any one of the other species)
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$21==1 || $23==1 || $25==1 || $27==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_Mz-PnAbNbOn.txt
# Pn-MzAbNbOn (edge present in Pn, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$21==1 || $29==1 || $31==1 || $33==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_Pn-MzAbNbOn.txt
# Ab-MzPnNbOn (edge present in Ab, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$23==1 || $29==1 || $35==1 || $37==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_Ab-MzPnNbOn.txt
# Nb-MzPnAbOn (edge present in Nb, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$25==1 || $31==1 || $35==1 || $39==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_Nb-MzPnAbOn.txt
# On-MzPnAbNb (edge present in On, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$27==1 || $33==1 || $37==1 || $39==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_On-MzPnAbNb.txt

# d. then, highlight the number of switches between pairs
# Mz-Pn (edge present in Mz, absent in Pn, TF switched in Mz vs Pn)
awk '$5==1 && $6==0 && $21==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_MzvsPn.txt
# Pn-Mz
awk '$5==0 && $6==1 && $21==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_PnvsMz.txt
# Mz-Ab
awk '$5==1 && $7==0 && $23==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_MzvsAb.txt
# Ab-Mz
awk '$5==0 && $7==1 && $23==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_AbvsMz.txt
# Mz-Nb
awk '$5==1 && $8==0 && $25==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_MzvsNb.txt
# Nb-Mz
awk '$5==0 && $8==1 && $25==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_NbvsMz.txt
# Mz-On
awk '$5==1 && $9==0 && $27==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_MzvsOn.txt
# On-Mz
awk '$5==0 && $9==1 && $27==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_OnvsMz.txt
# Pn-Ab
awk '$6==1 && $7==0 && $29==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_PnvsAb.txt
# Ab-Pn
awk '$6==0 && $7==1 && $29==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_AbvsPn.txt
# Pn-Nb
awk '$6==1 && $8==0 && $31==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_PnvsNb.txt
# Nb-Pn
awk '$6==0 && $8==1 && $31==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_NbvsPn.txt
# Pn-On
awk '$6==1 && $9==0 && $33==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_PnvsOn.txt
# On-Pn
awk '$6==0 && $9==1 && $33==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_OnvsPn.txt
# Ab-Nb
awk '$7==1 && $8==0 && $35==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_AbvsNb.txt
# Nb-Ab
awk '$7==0 && $8==1 && $35==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_NbvsAb.txt
# Ab-On
awk '$7==1 && $9==0 && $37==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_AbvsOn.txt
# On-Ab
awk '$7==0 && $9==1 && $37==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_OnvsAb.txt
# Nb-On
awk '$8==1 && $9==0 && $39==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_NbvsOn.txt
# On-Nb
awk '$8==0 && $9==1 && $39==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_OnvsNb.txt

# get total number of pairwise rows
wc -l Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_*.txt > 5.coexpr_geneBpairwiseSW_wc

# e. then, highlight the number of switches in the haplochromines specifically (haplochromine-specific rewiring events)
# Create another main table from which to work
# for this, the edge needs to be present in any of the haplochromines (Mz || Pn || Ab) AND,
# also any of the ancestor (Nb || On) to be rewired in the haplochromines AND,
# the col2/col3 node needs to be present as other edges
awk '$5==1 || $6==1 || $7==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | awk '$8==1 || $9==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW.txt
# Mz-PnAb (edge present in Mz, absent in Pn and Ab, TF switched in Mz vs Pn and Mz vs Ab)
awk '$5==1 && $6==0 && $7==0 && $21==1 && $23==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_MzvsPnAb.txt
# Pn-MzAb
awk '$5==0 && $6==1 && $7==0 && $21==1 && $29==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_PnvsMzAb.txt
# Ab-MzPn
awk '$5==0 && $6==0 && $7==1 && $23==1 && $29==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_AbvsMzPn.txt
# get total numbers
wc -l Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_*.txt > 6.coexpr_geneBhaploSW_wc


#CNEmotifONLY - TF (geneA)
# a. first, get network switches (at least one '1' in cols 5-9), then, the module switch needs to be the same as an absent interaction (don't bother in scenarios when 0 in more than one species, make this species specific within the species you're comparing and cat)
awk '$5==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$20==1 || $22==1 || $24==1 || $26==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW2.txt #Mz requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$6==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$20==1 || $28==1 || $30==1 || $32==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW2.txt #Pn requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$7==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$22==1 || $28==1 || $34==1 || $36==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW2.txt #Ab requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$8==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$24==1 || $30==1 || $34==1 || $38==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW2.txt #Nb requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$26==1 || $32==1 || $36==1 || $38==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW2.txt #On requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
sort -u Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW2.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt
rm Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW2.txt

# b. Re-usage events linked to module assignment switches (edge presence in species, loss in some species and presence in a common ancestor/basal species in tree + switches vs basal species implies re-usage derived from switch)
# MzOn-PnAbNb (edge present in Mz and On, absent in 3 species, TF switched in Mz vs On and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$26==1' OFS='\t' | awk '$20==1 || $22==1 || $24==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_MzOn-PnAbNb.txt
# MzNb-PnAbOn (edge present in Mz and Nb, absent in 3 species, TF switched in Mz vs Nb and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$24==1' OFS='\t' | awk '$20==1 || $22==1 || $26==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_MzNb-PnAbOn.txt
# MzAb-PnNbOn (edge present in Mz and Ab, absent in 3 species, TF switched in Mz vs Ab and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in Ab (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$22==1' OFS='\t' | awk '$20==1 || $24==1 || $26==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_MzAb-PnNbOn.txt
# MzPn-AbNbOn (edge present in Mz and Pn, absent in 3 species, TF switched in Mz vs Pn and Mz vs any of other 3 species) - this implies re-usage of an MzPn ancestral state but re-purpose in Mz derived from TF module assignment switch
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$20==1' OFS='\t' | awk '$22==1 || $24==1 || $26==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_MzPn-AbNbOn.txt

# PnOn-MzAbNb (edge present in Pn and On, absent in 3 species, TF switched in Pn vs On and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$32==1' OFS='\t' | awk '$20==1 || $28==1 || $30==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_PnOn-MzAbNb.txt
# PnNb-MzAbOn (edge present in Pn and Nb, absent in 3 species, TF switched in Pn vs Nb and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$30==1' OFS='\t' | awk '$20==1 || $28==1 || $32==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_PnNb-MzAbOn.txt
# PnAb-MzNbOn (edge present in Pn and Ab, absent in 3 species, TF switched in Pn vs Ab and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in Ab (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$28==1' OFS='\t' | awk '$20==1 || $30==1 || $32==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_PnAb-MzNbOn.txt
# PnMz-AbNbOn (edge present in Pn and Mz, absent in 3 species, TF switched in Pn vs Mz and Pn vs any of other 3 species) - this implies re-usage of an PnMz ancestral state but re-purpose in Pn derived from TF module assignment switch
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$20==1' OFS='\t' | awk '$28==1 || $30==1 || $32==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_PnMz-AbNbOn.txt

# AbOn-MzPnNb (edge present in Ab and On, absent in 3 species, TF switched in Ab vs On and Ab vs any of other 3 species) - this implies re-usage in Ab of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$36==1' OFS='\t' | awk '$22==1 || $28==1 || $34==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_AbOn-MzPnNb.txt
# AbNb-MzPnOn (edge present in Ab and Nb, absent in 3 species, TF switched in Ab vs Nb and Ab vs any of other 3 species) - this implies re-usage in Ab of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$34==1' OFS='\t' | awk '$22==1 || $28==1 || $36==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_AbNb-MzPnOn.txt
# AbPn-MzNbOn (edge present in Ab and Pn, absent in 3 species, TF switched in Ab vs Pn and Ab vs any of other 3 species) - this implies re-usage of an AbPn ancestral state (haplochromine) but re-purpose in Ab derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$28==1' OFS='\t' | awk '$22==1 || $34==1 || $36==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_AbPn-MzNbOn.txt
# AbMz-PnNbOn (edge present in Ab and Mz, absent in 3 species, TF switched in Ab vs Mz and Ab vs any of other 3 species) - this implies re-usage of an AbMz ancestral state (haplochromine) but re-purpose in Ab derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$22==1' OFS='\t' | awk '$28==1 || $34==1 || $36==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_AbMz-PnNbOn.txt

# NbOn-MzPnAb (edge present in Nb and On, absent in 3 species, TF switched in Nb vs On and Nb vs any of other 3 species) - this implies re-usage in Nb of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$38==1' OFS='\t' | awk '$24==1 || $30==1 || $34==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_NbOn-MzPnAb.txt
# NbAb-MzPnOn (edge present in Nb and Ab, absent in 3 species, TF switched in Nb vs Ab and Nb vs any of other 3 species) - this implies re-usage of an NbAb ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$34==1' OFS='\t' | awk '$24==1 || $30==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_NbAb-MzPnOn.txt
# NbPn-MzAbOn (edge present in Nb and Pn, absent in 3 species, TF switched in Nb vs Pn and Nb vs any of other 3 species) - this implies re-usage of an NbPn ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$30==1' OFS='\t' | awk '$24==1 || $34==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_NbPn-MzAbOn.txt
# NbMz-PnAbOn (edge present in Nb and Mz, absent in 3 species, TF switched in Nb vs Mz and Nb vs any of other 3 species) - this implies re-usage of an NbMz ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$24==1' OFS='\t' | awk '$30==1 || $34==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_NbMz-PnAbOn.txt

# OnNb-MzPnAb (edge present in On and Nb, absent in 3 species, TF switched in On vs Nb and On vs any of other 3 species) - this implies re-usage of an OnNb ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$38==1' OFS='\t' | awk '$26==1 || $32==1 || $36==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_OnNb-MzPnAb.txt
# OnAb-MzPnNb (edge present in On and Ab, absent in 3 species, TF switched in On vs Ab and On vs any of other 3 species) - this implies re-usage of an OnAb ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$36==1' OFS='\t' | awk '$26==1 || $32==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_OnAb-MzPnNb.txt
# OnPn-MzAbNb (edge present in On and Pn, absent in 3 species, TF switched in On vs Pn and On vs any of other 3 species) - this implies re-usage of an OnPn ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$32==1' OFS='\t' | awk '$26==1 || $36==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_OnPn-MzAbNb.txt
# OnMz-PnAbNb (edge present in On and Mz, absent in 3 species, TF switched in On vs Mz and On vs any of other 3 species) - this implies re-usage of an OnMz ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt | awk '$26==1' OFS='\t' | awk '$32==1 || $36==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_OnMz-PnAbNb.txt

# c. Re-wiring events linked to module assignment switches (edge present in only one species + switching in any of the other species and then check for reocurring geneA nodes, so that there will be an edge containing that node in the other species)
# Mz-PnAbNbOn (edge present in Mz, absent in other species and TF switched vs at least any one of the other species)
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$20==1 || $22==1 || $24==1 || $26==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_rewired_Mz-PnAbNbOn.txt
# Pn-MzAbNbOn (edge present in Pn, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$20==1 || $28==1 || $30==1 || $32==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt
# Ab-MzPnNbOn (edge present in Ab, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$22==1 || $28==1 || $34==1 || $36==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt
# Nb-MzPnAbOn (edge present in Nb, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$24==1 || $30==1 || $34==1 || $38==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt
# On-MzPnAbNb (edge present in On, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$26==1 || $32==1 || $36==1 || $38==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_rewired_On-MzPnAbNb.txt

# d. then, highlight the number of switches between pairs (pairwise-specific rewiring events) irrespective of other species - this can be represented as a matrix
# Mz-Pn (edge present in Mz, absent in Pn, TF switched in Mz vs Pn)
awk '$5==1 && $6==0 && $20==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_MzvsPn.txt
# Pn-Mz
awk '$5==0 && $6==1 && $20==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_PnvsMz.txt
# Mz-Ab
awk '$5==1 && $7==0 && $22==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_MzvsAb.txt
# Ab-Mz
awk '$5==0 && $7==1 && $22==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_AbvsMz.txt
# Mz-Nb
awk '$5==1 && $8==0 && $24==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_MzvsNb.txt
# Nb-Mz
awk '$5==0 && $8==1 && $24==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_NbvsMz.txt
# Mz-On
awk '$5==1 && $9==0 && $26==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_MzvsOn.txt
# On-Mz
awk '$5==0 && $9==1 && $26==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_OnvsMz.txt
# Pn-Ab
awk '$6==1 && $7==0 && $28==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_PnvsAb.txt
# Ab-Pn
awk '$6==0 && $7==1 && $28==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_AbvsPn.txt
# Pn-Nb
awk '$6==1 && $8==0 && $30==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_PnvsNb.txt
# Nb-Pn
awk '$6==0 && $8==1 && $30==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_NbvsPn.txt
# Pn-On
awk '$6==1 && $9==0 && $32==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_PnvsOn.txt
# On-Pn
awk '$6==0 && $9==1 && $32==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_OnvsPn.txt
# Ab-Nb
awk '$7==1 && $8==0 && $34==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_AbvsNb.txt
# Nb-Ab
awk '$7==0 && $8==1 && $34==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_NbvsAb.txt
# Ab-On
awk '$7==1 && $9==0 && $36==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_AbvsOn.txt
# On-Ab
awk '$7==0 && $9==1 && $36==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_OnvsAb.txt
# Nb-On
awk '$8==1 && $9==0 && $38==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_NbvsOn.txt
# On-Nb
awk '$8==0 && $9==1 && $38==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_OnvsNb.txt
# get total number of pairwise rows
wc -l Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_*.txt > 7.CNEmotif_geneApairwiseSW_wc

# e. then, highlight the number of switches in the haplochromines specifically (haplochromine-specific rewiring events)
# Create another main table from which to work
# for this, the edge needs to be present in any of the haplochromines (Mz || Pn || Ab) AND,
# also any of the ancestor (Nb || On) to be rewired in the haplochromines AND,
# the col2/col3 node needs to be present as other edges
awk '$5==1 || $6==1 || $7==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID.txt | awk '$8==1 || $9==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmodule_geneAhaploSW.txt # 502403
# Mz-PnAb (edge present in Mz, absent in Pn and Ab, TF switched in Mz vs Pn and Mz vs Ab)
awk '$5==1 && $6==0 && $7==0 && $20==1 && $22==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmodule_geneAhaploSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmodule_geneAhaploSW_MzvsPnAb.txt
# Pn-MzAb
awk '$5==0 && $6==1 && $7==0 && $20==1 && $28==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmodule_geneAhaploSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmodule_geneAhaploSW_PnvsMzAb.txt
# Ab-MzPn
awk '$5==0 && $6==0 && $7==1 && $22==1 && $28==1' OFS='\t' Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmodule_geneAhaploSW.txt > Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmodule_geneAhaploSW_AbvsMzPn.txt
# get total numbers
wc -l Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmodule_geneAhaploSW_*.txt > 8.CNEmotif_geneAhaploSW_wc


#CNEproximalONLY - TG (geneB)
# a. first, get network switches (at least one '1' in cols 5-9), then, the module switch needs to be the same as an absent interaction (don't bother in scenarios when 0 in more than one species, make this species specific within the species you're comparing and cat)
awk '$5==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$21==1 || $23==1 || $25==1 || $27==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW2.txt #Mz requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$6==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$21==1 || $29==1 || $31==1 || $33==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW2.txt #Pn requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$7==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$23==1 || $29==1 || $35==1 || $37==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW2.txt #Ab requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$8==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$25==1 || $31==1 || $35==1 || $39==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW2.txt #Nb requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$27==1 || $33==1 || $37==1 || $39==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW2.txt #On requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
sort -u Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW2.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt
rm Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW2.txt

# b. Re-usage events linked to module assignment switches (edge presence in species, loss in some species and presence in a common ancestor/basal species in tree + switches vs basal species implies re-usage derived from switch)
# MzOn-PnAbNb (edge present in Mz and On, absent in 3 species, TF switched in Mz vs On and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$27==1' OFS='\t' | awk '$21==1 || $23==1 || $25==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_MzOn-PnAbNb.txt
# MzNb-PnAbOn (edge present in Mz and Nb, absent in 3 species, TF switched in Mz vs Nb and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$25==1' OFS='\t' | awk '$21==1 || $23==1 || $27==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_MzNb-PnAbOn.txt
# MzAb-PnNbOn (edge present in Mz and Ab, absent in 3 species, TF switched in Mz vs Ab and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in Ab (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$23==1' OFS='\t' | awk '$21==1 || $25==1 || $27==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_MzAb-PnNbOn.txt
# MzPn-AbNbOn (edge present in Mz and Pn, absent in 3 species, TF switched in Mz vs Pn and Mz vs any of other 3 species) - this implies re-usage of an MzPn ancestral state but re-purpose in Mz derived from TF module assignment switch
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$21==1' OFS='\t' | awk '$23==1 || $25==1 || $27==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_MzPn-AbNbOn.txt

# PnOn-MzAbNb (edge present in Pn and On, absent in 3 species, TF switched in Pn vs On and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$33==1' OFS='\t' | awk '$21==1 || $29==1 || $31==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_PnOn-MzAbNb.txt
# PnNb-MzAbOn (edge present in Pn and Nb, absent in 3 species, TF switched in Pn vs Nb and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$31==1' OFS='\t' | awk '$21==1 || $29==1 || $33==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_PnNb-MzAbOn.txt
# PnAb-MzNbOn (edge present in Pn and Ab, absent in 3 species, TF switched in Pn vs Ab and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in Ab (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$29==1' OFS='\t' | awk '$21==1 || $31==1 || $33==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_PnAb-MzNbOn.txt
# PnMz-AbNbOn (edge present in Pn and Mz, absent in 3 species, TF switched in Pn vs Mz and Pn vs any of other 3 species) - this implies re-usage of an PnMz ancestral state but re-purpose in Pn derived from TF module assignment switch
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$21==1' OFS='\t' | awk '$29==1 || $31==1 || $33==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_PnMz-AbNbOn.txt

# AbOn-MzPnNb (edge present in Ab and On, absent in 3 species, TF switched in Ab vs On and Ab vs any of other 3 species) - this implies re-usage in Ab of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$37==1' OFS='\t' | awk '$23==1 || $29==1 || $35==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_AbOn-MzPnNb.txt
# AbNb-MzPnOn (edge present in Ab and Nb, absent in 3 species, TF switched in Ab vs Nb and Ab vs any of other 3 species) - this implies re-usage in Ab of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$35==1' OFS='\t' | awk '$23==1 || $29==1 || $37==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_AbNb-MzPnOn.txt
# AbPn-MzNbOn (edge present in Ab and Pn, absent in 3 species, TF switched in Ab vs Pn and Ab vs any of other 3 species) - this implies re-usage of an AbPn ancestral state (haplochromine) but re-purpose in Ab derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$29==1' OFS='\t' | awk '$23==1 || $35==1 || $37==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_AbPn-MzNbOn.txt
# AbMz-PnNbOn (edge present in Ab and Mz, absent in 3 species, TF switched in Ab vs Mz and Ab vs any of other 3 species) - this implies re-usage of an AbMz ancestral state (haplochromine) but re-purpose in Ab derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$23==1' OFS='\t' | awk '$29==1 || $35==1 || $37==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_AbMz-PnNbOn.txt

# NbOn-MzPnAb (edge present in Nb and On, absent in 3 species, TF switched in Nb vs On and Nb vs any of other 3 species) - this implies re-usage in Nb of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$39==1' OFS='\t' | awk '$25==1 || $31==1 || $35==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_NbOn-MzPnAb.txt
# NbAb-MzPnOn (edge present in Nb and Ab, absent in 3 species, TF switched in Nb vs Ab and Nb vs any of other 3 species) - this implies re-usage of an NbAb ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$35==1' OFS='\t' | awk '$25==1 || $31==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_NbAb-MzPnOn.txt
# NbPn-MzAbOn (edge present in Nb and Pn, absent in 3 species, TF switched in Nb vs Pn and Nb vs any of other 3 species) - this implies re-usage of an NbPn ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$31==1' OFS='\t' | awk '$25==1 || $35==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_NbPn-MzAbOn.txt
# NbMz-PnAbOn (edge present in Nb and Mz, absent in 3 species, TF switched in Nb vs Mz and Nb vs any of other 3 species) - this implies re-usage of an NbMz ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$25==1' OFS='\t' | awk '$31==1 || $35==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_NbMz-PnAbOn.txt

# OnNb-MzPnAb (edge present in On and Nb, absent in 3 species, TF switched in On vs Nb and On vs any of other 3 species) - this implies re-usage of an OnNb ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$39==1' OFS='\t' | awk '$27==1 || $33==1 || $37==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_OnNb-MzPnAb.txt
# OnAb-MzPnNb (edge present in On and Ab, absent in 3 species, TF switched in On vs Ab and On vs any of other 3 species) - this implies re-usage of an OnAb ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$37==1' OFS='\t' | awk '$27==1 || $33==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_OnAb-MzPnNb.txt
# OnPn-MzAbNb (edge present in On and Pn, absent in 3 species, TF switched in On vs Pn and On vs any of other 3 species) - this implies re-usage of an OnPn ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$33==1' OFS='\t' | awk '$27==1 || $37==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_OnPn-MzAbNb.txt
# OnMz-PnAbNb (edge present in On and Mz, absent in 3 species, TF switched in On vs Mz and On vs any of other 3 species) - this implies re-usage of an OnMz ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$27==1' OFS='\t' | awk '$33==1 || $37==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_OnMz-PnAbNb.txt

# c. Re-wiring events linked to module assignment switches (edge present in only one species + switching in any of the other species and then check for reocurring geneA nodes, so that there will be an edge containing that node in the other species)
# Mz-PnAbNbOn (edge present in Mz, absent in other species and TG switched vs at least any one of the other species)
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$21==1 || $23==1 || $25==1 || $27==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_Mz-PnAbNbOn.txt
# Pn-MzAbNbOn (edge present in Pn, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$21==1 || $29==1 || $31==1 || $33==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_Pn-MzAbNbOn.txt
# Ab-MzPnNbOn (edge present in Ab, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$23==1 || $29==1 || $35==1 || $37==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_Ab-MzPnNbOn.txt
# Nb-MzPnAbOn (edge present in Nb, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$25==1 || $31==1 || $35==1 || $39==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_Nb-MzPnAbOn.txt
# On-MzPnAbNb (edge present in On, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$27==1 || $33==1 || $37==1 || $39==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_On-MzPnAbNb.txt

# d. then, highlight the number of switches between pairs
# Mz-Pn (edge present in Mz, absent in Pn, TF switched in Mz vs Pn)
awk '$5==1 && $6==0 && $21==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_MzvsPn.txt
# Pn-Mz
awk '$5==0 && $6==1 && $21==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_PnvsMz.txt
# Mz-Ab
awk '$5==1 && $7==0 && $23==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_MzvsAb.txt
# Ab-Mz
awk '$5==0 && $7==1 && $23==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_AbvsMz.txt
# Mz-Nb
awk '$5==1 && $8==0 && $25==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_MzvsNb.txt
# Nb-Mz
awk '$5==0 && $8==1 && $25==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_NbvsMz.txt
# Mz-On
awk '$5==1 && $9==0 && $27==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_MzvsOn.txt
# On-Mz
awk '$5==0 && $9==1 && $27==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_OnvsMz.txt
# Pn-Ab
awk '$6==1 && $7==0 && $29==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_PnvsAb.txt
# Ab-Pn
awk '$6==0 && $7==1 && $29==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_AbvsPn.txt
# Pn-Nb
awk '$6==1 && $8==0 && $31==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_PnvsNb.txt
# Nb-Pn
awk '$6==0 && $8==1 && $31==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_NbvsPn.txt
# Pn-On
awk '$6==1 && $9==0 && $33==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_PnvsOn.txt
# On-Pn
awk '$6==0 && $9==1 && $33==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_OnvsPn.txt
# Ab-Nb
awk '$7==1 && $8==0 && $35==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_AbvsNb.txt
# Nb-Ab
awk '$7==0 && $8==1 && $35==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_NbvsAb.txt
# Ab-On
awk '$7==1 && $9==0 && $37==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_AbvsOn.txt
# On-Ab
awk '$7==0 && $9==1 && $37==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_OnvsAb.txt
# Nb-On
awk '$8==1 && $9==0 && $39==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_NbvsOn.txt
# On-Nb
awk '$8==0 && $9==1 && $39==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_OnvsNb.txt
# get total number of pairwise rows
wc -l Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_*.txt > 9.CNEproximal_geneBpairwiseSW_wc

# e. then, highlight the number of switches in the haplochromines specifically (haplochromine-specific rewiring events)
# Create another main table from which to work
# for this, the edge needs to be present in any of the haplochromines (Mz || Pn || Ab) AND,
# also any of the ancestor (Nb || On) to be rewired in the haplochromines AND,
# the col2/col3 node needs to be present as other edges
awk '$5==1 || $6==1 || $7==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID.txt | awk '$8==1 || $9==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW.txt
# Mz-PnAb (edge present in Mz, absent in Pn and Ab, TF switched in Mz vs Pn and Mz vs Ab)
awk '$5==1 && $6==0 && $7==0 && $21==1 && $23==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW_MzvsPnAb.txt
# Pn-MzAb
awk '$5==0 && $6==1 && $7==0 && $21==1 && $29==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW_PnvsMzAb.txt
# Ab-MzPn
awk '$5==0 && $6==0 && $7==1 && $23==1 && $29==1' OFS='\t' Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW.txt > Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW_AbvsMzPn.txt
# get total numbers
wc -l Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW_*.txt > 10.CNEproximal_geneBhaploSW_wc

#targetscan7ONLY - TG (geneB)
# a. first, get network switches (at least one '1' in cols 5-9), then, the module switch needs to be the same as an absent interaction (don't bother in scenarios when 0 in more than one species, make this species specific within the species you're comparing and cat)
awk '$5==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$21==1 || $23==1 || $25==1 || $27==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW2.txt #Mz requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$6==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$21==1 || $29==1 || $31==1 || $33==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW2.txt #Pn requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$7==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$23==1 || $29==1 || $35==1 || $37==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW2.txt #Ab requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$8==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$25==1 || $31==1 || $35==1 || $39==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW2.txt #Nb requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$27==1 || $33==1 || $37==1 || $39==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW2.txt #On requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
sort -u Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW2.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt
rm Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW2.txt

# b. Re-usage events linked to module assignment switches (edge presence in species, loss in some species and presence in a common ancestor/basal species in tree + switches vs basal species implies re-usage derived from switch)
# MzOn-PnAbNb (edge present in Mz and On, absent in 3 species, TF switched in Mz vs On and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$27==1' OFS='\t' | awk '$21==1 || $23==1 || $25==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_MzOn-PnAbNb.txt
# MzNb-PnAbOn (edge present in Mz and Nb, absent in 3 species, TF switched in Mz vs Nb and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$25==1' OFS='\t' | awk '$21==1 || $23==1 || $27==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_MzNb-PnAbOn.txt
# MzAb-PnNbOn (edge present in Mz and Ab, absent in 3 species, TF switched in Mz vs Ab and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in Ab (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$23==1' OFS='\t' | awk '$21==1 || $25==1 || $27==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_MzAb-PnNbOn.txt
# MzPn-AbNbOn (edge present in Mz and Pn, absent in 3 species, TF switched in Mz vs Pn and Mz vs any of other 3 species) - this implies re-usage of an MzPn ancestral state but re-purpose in Mz derived from TF module assignment switch
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$21==1' OFS='\t' | awk '$23==1 || $25==1 || $27==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_MzPn-AbNbOn.txt

# PnOn-MzAbNb (edge present in Pn and On, absent in 3 species, TF switched in Pn vs On and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$33==1' OFS='\t' | awk '$21==1 || $29==1 || $31==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_PnOn-MzAbNb.txt
# PnNb-MzAbOn (edge present in Pn and Nb, absent in 3 species, TF switched in Pn vs Nb and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$31==1' OFS='\t' | awk '$21==1 || $29==1 || $33==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_PnNb-MzAbOn.txt
# PnAb-MzNbOn (edge present in Pn and Ab, absent in 3 species, TF switched in Pn vs Ab and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in Ab (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$29==1' OFS='\t' | awk '$21==1 || $31==1 || $33==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_PnAb-MzNbOn.txt
# PnMz-AbNbOn (edge present in Pn and Mz, absent in 3 species, TF switched in Pn vs Mz and Pn vs any of other 3 species) - this implies re-usage of an PnMz ancestral state but re-purpose in Pn derived from TF module assignment switch
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$21==1' OFS='\t' | awk '$29==1 || $31==1 || $33==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_PnMz-AbNbOn.txt

# AbOn-MzPnNb (edge present in Ab and On, absent in 3 species, TF switched in Ab vs On and Ab vs any of other 3 species) - this implies re-usage in Ab of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$37==1' OFS='\t' | awk '$23==1 || $29==1 || $35==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_AbOn-MzPnNb.txt
# AbNb-MzPnOn (edge present in Ab and Nb, absent in 3 species, TF switched in Ab vs Nb and Ab vs any of other 3 species) - this implies re-usage in Ab of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$35==1' OFS='\t' | awk '$23==1 || $29==1 || $37==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_AbNb-MzPnOn.txt
# AbPn-MzNbOn (edge present in Ab and Pn, absent in 3 species, TF switched in Ab vs Pn and Ab vs any of other 3 species) - this implies re-usage of an AbPn ancestral state (haplochromine) but re-purpose in Ab derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$29==1' OFS='\t' | awk '$23==1 || $35==1 || $37==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_AbPn-MzNbOn.txt
# AbMz-PnNbOn (edge present in Ab and Mz, absent in 3 species, TF switched in Ab vs Mz and Ab vs any of other 3 species) - this implies re-usage of an AbMz ancestral state (haplochromine) but re-purpose in Ab derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$23==1' OFS='\t' | awk '$29==1 || $35==1 || $37==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_AbMz-PnNbOn.txt

# NbOn-MzPnAb (edge present in Nb and On, absent in 3 species, TF switched in Nb vs On and Nb vs any of other 3 species) - this implies re-usage in Nb of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$39==1' OFS='\t' | awk '$25==1 || $31==1 || $35==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_NbOn-MzPnAb.txt
# NbAb-MzPnOn (edge present in Nb and Ab, absent in 3 species, TF switched in Nb vs Ab and Nb vs any of other 3 species) - this implies re-usage of an NbAb ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$35==1' OFS='\t' | awk '$25==1 || $31==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_NbAb-MzPnOn.txt
# NbPn-MzAbOn (edge present in Nb and Pn, absent in 3 species, TF switched in Nb vs Pn and Nb vs any of other 3 species) - this implies re-usage of an NbPn ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$31==1' OFS='\t' | awk '$25==1 || $35==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_NbPn-MzAbOn.txt
# NbMz-PnAbOn (edge present in Nb and Mz, absent in 3 species, TF switched in Nb vs Mz and Nb vs any of other 3 species) - this implies re-usage of an NbMz ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$25==1' OFS='\t' | awk '$31==1 || $35==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_NbMz-PnAbOn.txt

# OnNb-MzPnAb (edge present in On and Nb, absent in 3 species, TF switched in On vs Nb and On vs any of other 3 species) - this implies re-usage of an OnNb ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$39==1' OFS='\t' | awk '$27==1 || $33==1 || $37==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_OnNb-MzPnAb.txt
# OnAb-MzPnNb (edge present in On and Ab, absent in 3 species, TF switched in On vs Ab and On vs any of other 3 species) - this implies re-usage of an OnAb ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$37==1' OFS='\t' | awk '$27==1 || $33==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_OnAb-MzPnNb.txt
# OnPn-MzAbNb (edge present in On and Pn, absent in 3 species, TF switched in On vs Pn and On vs any of other 3 species) - this implies re-usage of an OnPn ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$33==1' OFS='\t' | awk '$27==1 || $37==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_OnPn-MzAbNb.txt
# OnMz-PnAbNb (edge present in On and Mz, absent in 3 species, TF switched in On vs Mz and On vs any of other 3 species) - this implies re-usage of an OnMz ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt | awk '$27==1' OFS='\t' | awk '$33==1 || $37==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_OnMz-PnAbNb.txt

# c. Re-wiring events linked to module assignment switches (edge present in only one species + switching in any of the other species and then check for reocurring geneA nodes, so that there will be an edge containing that node in the other species)
# Mz-PnAbNbOn (edge present in Mz, absent in other species and TG switched vs at least any one of the other species)
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$21==1 || $23==1 || $25==1 || $27==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_Mz-PnAbNbOn.txt
# Pn-MzAbNbOn (edge present in Pn, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$21==1 || $29==1 || $31==1 || $33==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_Pn-MzAbNbOn.txt
# Ab-MzPnNbOn (edge present in Ab, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$23==1 || $29==1 || $35==1 || $37==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_Ab-MzPnNbOn.txt
# Nb-MzPnAbOn (edge present in Nb, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$25==1 || $31==1 || $35==1 || $39==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_Nb-MzPnAbOn.txt
# On-MzPnAbNb (edge present in On, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$27==1 || $33==1 || $37==1 || $39==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_On-MzPnAbNb.txt

# d. then, highlight the number of switches between pairs
# Mz-Pn (edge present in Mz, absent in Pn, TF switched in Mz vs Pn)
awk '$5==1 && $6==0 && $21==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_MzvsPn.txt
# Pn-Mz
awk '$5==0 && $6==1 && $21==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_PnvsMz.txt
# Mz-Ab
awk '$5==1 && $7==0 && $23==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_MzvsAb.txt
# Ab-Mz
awk '$5==0 && $7==1 && $23==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_AbvsMz.txt
# Mz-Nb
awk '$5==1 && $8==0 && $25==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_MzvsNb.txt
# Nb-Mz
awk '$5==0 && $8==1 && $25==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_NbvsMz.txt
# Mz-On
awk '$5==1 && $9==0 && $27==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_MzvsOn.txt
# On-Mz
awk '$5==0 && $9==1 && $27==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_OnvsMz.txt
# Pn-Ab
awk '$6==1 && $7==0 && $29==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_PnvsAb.txt
# Ab-Pn
awk '$6==0 && $7==1 && $29==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_AbvsPn.txt
# Pn-Nb
awk '$6==1 && $8==0 && $31==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_PnvsNb.txt
# Nb-Pn
awk '$6==0 && $8==1 && $31==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_NbvsPn.txt
# Pn-On
awk '$6==1 && $9==0 && $33==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_PnvsOn.txt
# On-Pn
awk '$6==0 && $9==1 && $33==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_OnvsPn.txt
# Ab-Nb
awk '$7==1 && $8==0 && $35==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_AbvsNb.txt
# Nb-Ab
awk '$7==0 && $8==1 && $35==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_NbvsAb.txt
# Ab-On
awk '$7==1 && $9==0 && $37==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_AbvsOn.txt
# On-Ab
awk '$7==0 && $9==1 && $37==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_OnvsAb.txt
# Nb-On
awk '$8==1 && $9==0 && $39==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_NbvsOn.txt
# On-Nb
awk '$8==0 && $9==1 && $39==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_OnvsNb.txt
# get total number of pairwise rows
wc -l Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_*.txt > 11.targetscan7_geneBpairwiseSW_wc

# e. then, highlight the number of switches in the haplochromines specifically (haplochromine-specific rewiring events)
# Create another main table from which to work
# for this, the edge needs to be present in any of the haplochromines (Mz || Pn || Ab) AND,
# also any of the ancestor (Nb || On) to be rewired in the haplochromines AND,
# the col2/col3 node needs to be present as other edges
awk '$5==1 || $6==1 || $7==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID.txt | awk '$8==1 || $9==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW.txt
# Mz-PnAb (edge present in Mz, absent in Pn and Ab, TF switched in Mz vs Pn and Mz vs Ab)
awk '$5==1 && $6==0 && $7==0 && $21==1 && $23==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW_MzvsPnAb.txt
# Pn-MzAb
awk '$5==0 && $6==1 && $7==0 && $21==1 && $29==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW_PnvsMzAb.txt
# Ab-MzPn
awk '$5==0 && $6==0 && $7==1 && $23==1 && $29==1' OFS='\t' Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW.txt > Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW_AbvsMzPn.txt
# get total numbers
wc -l Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW_*.txt > 12.targetscan7_geneBhaploSW_wc

# run the above
qsub -q Test -l select=1:mem=30GB:ncpus=1 1to1_getmodandedgeswitch_all.sh


#### All numbers from above files below - this is for 1to1 TF/TG gene edges only ####

# 1. total number of consensus edges present in those species only along the phylogeny
==> 1a.OnNbAbPnMz_totalstartingedges <==
179940 - CNEmotifONLY
76123 - CNEproximal
77223 - coexpr_prom
36333 - targetscan7

==> 1b.NbAbPnMz_totalstartingedges <==
19954 - CNEmotifONLY
8189 - CNEproximal
6816 - coexpr_prom
11677 - targetscan7

==> 1c.AbPnMz_totalstartingedges <==
40945 - CNEmotifONLY
3628 - CNEproximal
6580 - coexpr_prom
9785 - targetscan7

==> 1d.PnMz_totalstartingedges <==
31518 - CNEmotifONLY
3975 - CNEproximal
5152 - coexpr_prom
6073 - targetscan7

# 1e. TF-TG interactions where both genes switched (along phylogeny) but found in same module as each other (cis)
wc -l Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-*_AllTFTGswSameMod.txt
8363 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_AllTFTGswSameMod.txt
531 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_AllTFTGswSameMod.txt
360 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-AbPnMz_AllTFTGswSameMod.txt
235 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-PnMz_AllTFTGswSameMod.txt

# 1f. TF-TG interactions where both genes switched (along phylogeny) but found in different modules as each other (trans)
wc -l Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-*_AllTFTGswDiffMod.txt
23717 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_AllTFTGswDiffMod.txt
1855 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_AllTFTGswDiffMod.txt
2204 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-AbPnMz_AllTFTGswDiffMod.txt
1121 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-PnMz_AllTFTGswDiffMod.txt

# 2. switched TF/TG in collated edges, specific for those ancestral nodes, absent in the others
==> 2.modswitchcounts <==
   641 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-PnMz_AllTFsw.txt
  3367 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-AbPnMz_AllTFsw.txt
  3693 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-NbAbPnMz_AllTFsw.txt
 63201 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-OnNbAbPnMz_AllTFsw.txt

   906 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-PnMz_AllTGsw.txt
   835 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-AbPnMz_AllTGsw.txt
  3347 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-NbAbPnMz_AllTGsw.txt
 39845 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_AllTGsw.txt

   306 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-PnMz_AllTFsw.txt
   523 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-AbPnMz_AllTFsw.txt
  2078 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_AllTFsw.txt
 43042 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_AllTFsw.txt

   984 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-PnMz_AllTGsw.txt
  1980 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-AbPnMz_AllTGsw.txt
  2852 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-NbAbPnMz_AllTGsw.txt
 42665 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-OnNbAbPnMz_AllTGsw.txt

  1209 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-PnMz_AllTGsw.txt
  3030 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-AbPnMz_AllTGsw.txt
  4508 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-NbAbPnMz_AllTGsw.txt
 19488 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-OnNbAbPnMz_AllTGsw.txt

# iii.	How many module switched genes are also rewired in networks?
# b. Re-usage events linked to module assignment switches
wc -l Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_*.txt

2552 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_AbMz-PnNbOn.txt
 886 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_AbNb-MzPnOn.txt
 578 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_AbOn-MzPnNb.txt
 127 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_AbPn-MzNbOn.txt
2057 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_MzAb-PnNbOn.txt
 203 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_MzNb-PnAbOn.txt
 245 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_MzOn-PnAbNb.txt
 306 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_MzPn-AbNbOn.txt
 216 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_NbAb-MzPnOn.txt
 422 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_NbMz-PnAbOn.txt
1273 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_NbOn-MzPnAb.txt
 577 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_NbPn-MzAbOn.txt
1610 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_OnAb-MzPnNb.txt
 588 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_OnMz-PnAbNb.txt
 839 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_OnNb-MzPnAb.txt
1380 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_OnPn-MzAbNb.txt
  67 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_PnAb-MzNbOn.txt
 191 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_PnMz-AbNbOn.txt
  97 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_PnNb-MzAbOn.txt
 138 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_reusage_PnOn-MzAbNb.txt
14352 total

# c. Re-wiring events linked to module assignment switches (edge present in only one species + switching in any of the other species and then check for reocurring geneA nodes, so that there will be an edge containing that node in the other species)
wc -l Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_*.txt
5691 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Mz-PnAbNbOn.txt
4060 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt
4490 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt
4669 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt
9423 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_On-MzPnAbNb.txt
28045 total

## May 2019 - based on reviewers comments
## The above sets are derived from 215,810 edges in Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt
## If you use an FDR<0.05, then 10,790 could be false positives and hence, the range above of 4060-9423 could all be false positives
## 1. rank the 215,810 edges according to q-value - for this you can't use the matrix but will have to re-run the matrix, this time adding the p-vals/q-vals and scores
cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes

nano getrewiredcols_May2019_pt1.sh

#!/bin/bash -e
#SBATCH -p tgac-medium # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --mem 48000 # memory pool for all cores
#SBATCH -t 0-1:59 # time (D-HH:MM)
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address

# 0. create simplified edge tables with following columns - TFOGID:TGOGID; GeneA_OGID; GeneB_OGID; source; score[pm_cm]; p.value[pm_cm]; q.value[pm_cm]; confidence[coTFTG]. Then sort based on conf[coTFTG] then q.value
for i in /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/*-Edge_Attributes_Collated4c.txt ; do
  awk '$18=="co-expression_TF-TG" || $18=="promoter_motif"' $i | cut -f3,9,18,31,32,33,49 | awk '{print $1":"$2,$1,$2,$3,$4,$5,$6,$7}' OFS='\t' | sort -k8,8 | sort -k7,7 > "$(basename "$i" .txt).coexpr_promONLY_FDRrank.txt"
done # NOTE: extrapolated motifs (TF-TGs) will not have any score

# 1. collate all possible node interactions from each species, removing redundant edges
cat *.coexpr_promONLY_FDRrank.txt | cut -f1-4 | sort -u > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt.tmp1

# 2. Then, do the species presence/absence - at this point add the scores for each so that they are retained for each species
# Mz - presence/absence of edges
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"1",a[$1];}else{print $0,"0","NA","NA","NA","NA","NA","NA","NA","NA";}}' Mz-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt.tmp1 | cut -f1-5,10-13 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt.tmp2
# Pn - presence/absence of edges
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"1",a[$1];}else{print $0,"0","NA","NA","NA","NA","NA","NA","NA","NA";}}' Pn-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt.tmp2 | cut -f1-10,15-18 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt.tmp3
# Ab - presence/absence of edges
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"1",a[$1];}else{print $0,"0","NA","NA","NA","NA","NA","NA","NA","NA";}}' Ab-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt.tmp3 | cut -f1-15,20-23 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt.tmp4
# Nb - presence/absence of edges
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"1",a[$1];}else{print $0,"0","NA","NA","NA","NA","NA","NA","NA","NA";}}' Nb-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt.tmp4 | cut -f1-20,25-28 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt.tmp5
# On - presence/absence of edges
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"1",a[$1];}else{print $0,"0","NA","NA","NA","NA","NA","NA","NA","NA";}}' On-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt.tmp5 | cut -f1-25,30-33 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt.tmp6

# 3. create colheaders and add
printf 'interaction\tGeneA\tGeneB\tsource\tMz.P-1_A-0\tMz.score[pm_cm]\tMz.p.value[pm_cm]\tMz.q.value[pm_cm]\tMz.confidence[coTFTG]\tPn.P-1_A-0\tPn.score[pm_cm]\tPn.p.value[pm_cm]\tPn.q.value[pm_cm]\tPn.confidence[coTFTG]\tAb.P-1_A-0\tAb.score[pm_cm]\tAb.p.value[pm_cm]\tAb.q.value[pm_cm]\tAb.confidence[coTFTG]\tNb.P-1_A-0\tNb.score[pm_cm]\tNb.p.value[pm_cm]\tNb.q.value[pm_cm]\tNb.confidence[coTFTG]\tOn.P-1_A-0\tOn.score[pm_cm]\tOn.p.value[pm_cm]\tOn.q.value[pm_cm]\tOn.confidence[coTFTG]\n' > getrewiredcols_May2019_pt1_colheads
cat getrewiredcols_May2019_pt1_colheads Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt.tmp6 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.txt

# run the above first
sbatch getrewiredcols_May2019_pt1.sh

# remove all temp files
rm *.tmp*

nano getrewiredcols_May2019_pt2.sh

#!/bin/bash -e
#SBATCH -p tgac-short # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --mem 48000 # memory pool for all cores
#SBATCH -t 0-0:45 # time (D-HH:MM)
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address

# then we ask the question of:
# i. How many module switched genes are associated with per species consensus nodes (two nodes interacting and present in all species) - again, in a phylo context
# ia. first, we need to add all species GeneA and GeneB modules to the tables (for CNEmotif add for GeneA; CNEproximal and targetscan7 - GeneB)
# ia. map to add module assignment
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL","NULL";}}' ../Module_genesandexpr/Mz-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.txt | cut -f1-29,31 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp1
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL","NULL";}}' ../Module_genesandexpr/Pn-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp1 | cut -f1-30,32 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL","NULL";}}' ../Module_genesandexpr/Ab-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp2 | cut -f1-31,33 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp3
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL","NULL";}}' ../Module_genesandexpr/Nb-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp3 | cut -f1-32,34 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp4
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NULL","NULL";}}' ../Module_genesandexpr/On-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp4 | cut -f1-33,35 | sed '1d' > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp5
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' ../Module_genesandexpr/Mz-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp5 | cut -f1-34,36 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp6
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' ../Module_genesandexpr/Pn-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp6 | cut -f1-35,37 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp7
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' ../Module_genesandexpr/Ab-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp7 | cut -f1-36,38 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp8
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' ../Module_genesandexpr/Nb-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp8 | cut -f1-37,39 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp9
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NULL","NULL";}}' ../Module_genesandexpr/On-speciesspecnames_clusterassign.OGID.txt Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp9 | cut -f1-38,40 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp10
printf 'interaction\tGeneA\tGeneB\tsource\tMz.P-1_A-0\tMz.score[pm_cm]\tMz.p.value[pm_cm]\tMz.q.value[pm_cm]\tMz.confidence[coTFTG]\tPn.P-1_A-0\tPn.score[pm_cm]\tPn.p.value[pm_cm]\tPn.q.value[pm_cm]\tPn.confidence[coTFTG]\tAb.P-1_A-0\tAb.score[pm_cm]\tAb.p.value[pm_cm]\tAb.q.value[pm_cm]\tAb.confidence[coTFTG]\tNb.P-1_A-0\tNb.score[pm_cm]\tNb.p.value[pm_cm]\tNb.q.value[pm_cm]\tNb.confidence[coTFTG]\tOn.P-1_A-0\tOn.score[pm_cm]\tOn.p.value[pm_cm]\tOn.q.value[pm_cm]\tOn.confidence[coTFTG]\tMz_GeneAModule\tPn_GeneAModule\tAb_GeneAModule\tNb_GeneAModule\tOn_GeneAModule\tMz_GeneBModule\tPn_GeneBModule\tAb_GeneBModule\tNb_GeneBModule\tOn_GeneBModule\n' > getrewiredcols_May2019_pt1_colheads2
cat getrewiredcols_May2019_pt1_colheads2 Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp10 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix2.txt

# iaa. check all column numbers for each row
awk '{print NF}' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix2.txt | sort -nu | head -n 1 # 39
awk '{print NF}' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix2.txt | sort -nu | tail -n 1 # 39
rm Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix.tmp* # DONE

# ib. then compare the GeneA modules per species, and same for GeneB to highlight module switches - add 1 for switch, 0 for noswitch, and "NULL" if no comparison can be made for all pairwise comparisons
# Mz-Pn - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($30=="NULL" || $31=="NULL")print $0,$40="NULL";else if($30!=$31)print $0,$40=1;else print $0,$40=0;}' OFS='\t' $i > $i.1
  awk '{if($35=="NULL" || $36=="NULL")print $0,$41="NULL";else if($35!=$36)print $0,$41=1;else print $0,$41=0;}' OFS='\t' $i.1 > $i.2
done
# Mz-Ab - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($30=="NULL" || $32=="NULL")print $0,$42="NULL";else if($30!=$32)print $0,$42=1;else print $0,$42=0;}' OFS='\t' $i.2 > $i.3
  awk '{if($35=="NULL" || $37=="NULL")print $0,$43="NULL";else if($35!=$37)print $0,$43=1;else print $0,$43=0;}' OFS='\t' $i.3 > $i.4
done
# Mz-Nb - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($30=="NULL" || $33=="NULL")print $0,$44="NULL";else if($30!=$33)print $0,$44=1;else print $0,$44=0;}' OFS='\t' $i.4 > $i.5
  awk '{if($35=="NULL" || $38=="NULL")print $0,$45="NULL";else if($35!=$38)print $0,$45=1;else print $0,$45=0;}' OFS='\t' $i.5 > $i.6
done
# Mz-On - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($30=="NULL" || $34=="NULL")print $0,$46="NULL";else if($30!=$34)print $0,$46=1;else print $0,$46=0;}' OFS='\t' $i.6 > $i.7
  awk '{if($35=="NULL" || $39=="NULL")print $0,$47="NULL";else if($35!=$39)print $0,$47=1;else print $0,$47=0;}' OFS='\t' $i.7 > $i.8
done
# Pn-Ab - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($31=="NULL" || $32=="NULL")print $0,$48="NULL";else if($31!=$32)print $0,$48=1;else print $0,$48=0;}' OFS='\t' $i.8 > $i.9
  awk '{if($36=="NULL" || $37=="NULL")print $0,$49="NULL";else if($36!=$37)print $0,$49=1;else print $0,$49=0;}' OFS='\t' $i.9 > $i.10
done
# Pn-Nb - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($31=="NULL" || $33=="NULL")print $0,$50="NULL";else if($31!=$33)print $0,$50=1;else print $0,$50=0;}' OFS='\t' $i.10 > $i.11
  awk '{if($36=="NULL" || $38=="NULL")print $0,$51="NULL";else if($36!=$38)print $0,$51=1;else print $0,$51=0;}' OFS='\t' $i.11 > $i.12
done
# Pn-On - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($31=="NULL" || $34=="NULL")print $0,$52="NULL";else if($31!=$34)print $0,$52=1;else print $0,$52=0;}' OFS='\t' $i.12 > $i.13
  awk '{if($36=="NULL" || $39=="NULL")print $0,$53="NULL";else if($36!=$39)print $0,$53=1;else print $0,$53=0;}' OFS='\t' $i.13 > $i.14
done
# Ab-Nb - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($32=="NULL" || $33=="NULL")print $0,$54="NULL";else if($32!=$33)print $0,$54=1;else print $0,$54=0;}' OFS='\t' $i.14 > $i.15
  awk '{if($37=="NULL" || $38=="NULL")print $0,$55="NULL";else if($37!=$38)print $0,$55=1;else print $0,$55=0;}' OFS='\t' $i.15 > $i.16
done
# Ab-On - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($32=="NULL" || $34=="NULL")print $0,$56="NULL";else if($32!=$34)print $0,$56=1;else print $0,$56=0;}' OFS='\t' $i.16 > $i.17
  awk '{if($37=="NULL" || $39=="NULL")print $0,$57="NULL";else if($37!=$39)print $0,$57=1;else print $0,$57=0;}' OFS='\t' $i.17 > $i.18
done
# Nb-On - GeneA; GeneB
for i in *matrix2.txt ; do
  awk '{if($33=="NULL" || $34=="NULL")print $0,$58="NULL";else if($33!=$34)print $0,$58=1;else print $0,$58=0;}' OFS='\t' $i.18 > $i.19
  awk '{if($38=="NULL" || $39=="NULL")print $0,$59="NULL";else if($38!=$39)print $0,$59=1;else print $0,$59=0;}' OFS='\t' $i.19 | sed '1d' > $i.20
done

printf 'interaction\tGeneA\tGeneB\tsource\tMz.P-1_A-0\tMz.score[pm_cm]\tMz.p.value[pm_cm]\tMz.q.value[pm_cm]\tMz.confidence[coTFTG]\tPn.P-1_A-0\tPn.score[pm_cm]\tPn.p.value[pm_cm]\tPn.q.value[pm_cm]\tPn.confidence[coTFTG]\tAb.P-1_A-0\tAb.score[pm_cm]\tAb.p.value[pm_cm]\tAb.q.value[pm_cm]\tAb.confidence[coTFTG]\tNb.P-1_A-0\tNb.score[pm_cm]\tNb.p.value[pm_cm]\tNb.q.value[pm_cm]\tNb.confidence[coTFTG]\tOn.P-1_A-0\tOn.score[pm_cm]\tOn.p.value[pm_cm]\tOn.q.value[pm_cm]\tOn.confidence[coTFTG]\tMz_GeneAModule\tPn_GeneAModule\tAb_GeneAModule\tNb_GeneAModule\tOn_GeneAModule\tMz_GeneBModule\tPn_GeneBModule\tAb_GeneBModule\tNb_GeneBModule\tOn_GeneBModule\tMz-Pn_GeneA\tMz-Pn_GeneB\tMz-Ab_GeneA\tMz-Ab_GeneB\tMz-Nb_GeneA\tMz-Nb_GeneB\tMz-On_GeneA\tMz-On_GeneB\tPn-Ab_GeneA\tPn-Ab_GeneB\tPn-Nb_GeneA\tPn-Nb_GeneB\tPn-On_GeneA\tPn-On_GeneB\tAb-Nb_GeneA\tAb-Nb_GeneB\tAb-On_GeneA\tAb-On_GeneB\tNb-On_GeneA\tNb-On_GeneB\n' > getrewiredcols_May2019_pt1_colheads3
cat getrewiredcols_May2019_pt1_colheads3 Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix2.txt.20 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3.txt

awk '{print NF}' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3.txt | sort -nu | head -n 1 # 59
awk '{print NF}' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3.txt | sort -nu | tail -n 1 # 59
rm *.matrix2.txt.*

# 3. filter for 1to1 OGIDs only
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3.txt | grep -v 'REMOVEME' > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneA1to1OGID.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$3]){print $0,a[$3];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneA1to1OGID.txt | grep -v 'REMOVEME' | cut -f1-59 > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt # 215810 edges - as expected
cat getrewiredcols_May2019_pt1_colheads3 Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt.A
rm Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt
mv Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt.A Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt
rm Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneA1to1OGID.txt

# 4. Re-wiring events linked to module assignment switches (edge present in only one species + switching in any of the other species and then check for reocurring geneA nodes, so that there will be an edge containing that node in the other species)
# Mz-PnAbNbOn (edge present in Mz, absent in other species and TF switched vs at least any one of the other species)
awk '$5==1 && $10==0 && $15==0 && $20==0 && $25==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | awk '$40==1 || $42==1 || $44==1 || $46==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Mz-PnAbNbOn.txt # 5691
# Pn-MzAbNbOn (edge present in Pn, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $10==1 && $15==0 && $20==0 && $25==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | awk '$40==1 || $48==1 || $50==1 || $52==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt # 4060
# Ab-MzPnNbOn (edge present in Ab, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $10==0 && $15==1 && $20==0 && $25==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | awk '$42==1 || $48==1 || $54==1 || $56==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt # 4490
# Nb-MzPnAbOn (edge present in Nb, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $10==0 && $15==0 && $20==1 && $25==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | awk '$44==1 || $50==1 || $54==1 || $58==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt # 4669
# On-MzPnAbNb (edge present in On, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $10==0 && $15==0 && $20==0 && $25==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | awk '$46==1 || $52==1 || $56==1 || $58==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_On-MzPnAbNb.txt # 9423

# run the above
sbatch getrewiredcols_May2019_pt2.sh


## 2a. show how many edges drop out at different q-vals (<0.01, <0.02, <0.03, <0.04 and 215,810<0.05)

# if $4=="promoter_motif"
# Mz.q.value[pm_cm] - $8
# Pn.q.value[pm_cm] - $13
# Ab.q.value[pm_cm] - $18
# Nb.q.value[pm_cm] - $23
# On.q.value[pm_cm] - $28
#
# if $4=="co-expression_TF-TG" # Sushmita recommended using edges >=0.5 - can try >0.6, >0.7, >0.8, >0.9
# Mz.confidence[coTFTG] - $9
# Pn.confidence[coTFTG] - $14
# Ab.confidence[coTFTG] - $19
# Nb.confidence[coTFTG] - $24
# On.confidence[coTFTG] - $29

# you can do equivalents of the two so:
# pm_cm <0.01 and coTFTG >=0.9
# pm_cm <0.02 and coTFTG >=0.8
# pm_cm <0.03 and coTFTG >=0.7
# pm_cm <0.04 and coTFTG >=0.6
# pm_cm <0.05 and coTFTG >=0.5

# pm_cm thresholds only
awk '$4=="promoter_motif"' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | awk '($8=="NA" || $8 < 0.01) && ($13=="NA" || $13 < 0.01) && ($18=="NA" || $18 < 0.01) && ($23=="NA" || $23 < 0.01) && ($28=="NA" || $28 < 0.01)'  | wc -l # 69,694/213,457 < qval0.01
awk '$4=="promoter_motif"' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | awk '($8=="NA" || $8 < 0.02) && ($13=="NA" || $13 < 0.02) && ($18=="NA" || $18 < 0.02) && ($23=="NA" || $23 < 0.02) && ($28=="NA" || $28 < 0.02)'  | wc -l # 73,920/213,457 < qval0.02
awk '$4=="promoter_motif"' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | awk '($8=="NA" || $8 < 0.03) && ($13=="NA" || $13 < 0.03) && ($18=="NA" || $18 < 0.03) && ($23=="NA" || $23 < 0.03) && ($28=="NA" || $28 < 0.03)'  | wc -l # 82,303/213,457 < qval0.03
awk '$4=="promoter_motif"' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | awk '($8=="NA" || $8 < 0.04) && ($13=="NA" || $13 < 0.04) && ($18=="NA" || $18 < 0.04) && ($23=="NA" || $23 < 0.04) && ($28=="NA" || $28 < 0.04)'  | wc -l # 105,412/213,457 < qval0.04
awk '$4=="promoter_motif"' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | awk '($8=="NA" || $8 < 0.05) && ($13=="NA" || $13 < 0.05) && ($18=="NA" || $18 < 0.05) && ($23=="NA" || $23 < 0.05) && ($28=="NA" || $28 < 0.05)'  | wc -l # 213,457/213,457 < qval0.05

# coTFTG thresholds only
awk '$4=="co-expression_TF-TG"' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | awk '($9=="NA" || $9 >= 0.9) && ($14=="NA" || $14 >= 0.9) && ($19=="NA" || $19 >= 0.9) && ($24=="NA" || $24 >= 0.9) && ($29=="NA" || $29 >= 0.9)'  | wc -l # 315/2353 >= score 0.9
awk '$4=="co-expression_TF-TG"' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | awk '($9=="NA" || $9 >= 0.8) && ($14=="NA" || $14 >= 0.8) && ($19=="NA" || $19 >= 0.8) && ($24=="NA" || $24 >= 0.8) && ($29=="NA" || $29 >= 0.8)'  | wc -l # 617/2353 >= score 0.8
awk '$4=="co-expression_TF-TG"' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | awk '($9=="NA" || $9 >= 0.7) && ($14=="NA" || $14 >= 0.7) && ($19=="NA" || $19 >= 0.7) && ($24=="NA" || $24 >= 0.7) && ($29=="NA" || $29 >= 0.7)'  | wc -l # 1040/2353 >= score 0.7
awk '$4=="co-expression_TF-TG"' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | awk '($9=="NA" || $9 >= 0.6) && ($14=="NA" || $14 >= 0.6) && ($19=="NA" || $19 >= 0.6) && ($24=="NA" || $24 >= 0.6) && ($29=="NA" || $29 >= 0.6)'  | wc -l # 1555/2353 >= score 0.6
awk '$4=="co-expression_TF-TG"' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | awk '($9=="NA" || $9 >= 0.5) && ($14=="NA" || $14 >= 0.5) && ($19=="NA" || $19 >= 0.5) && ($24=="NA" || $24 >= 0.5) && ($29=="NA" || $29 >= 0.5)'  | wc -l # 2353/2353 >= score 0.5
# pm_cm and coTFTG combined thresholds
awk '($8=="NA" || $8 < 0.01) && ($13=="NA" || $13 < 0.01) && ($18=="NA" || $18 < 0.01) && ($23=="NA" || $23 < 0.01) && ($28=="NA" || $28 < 0.01) && ($9=="NA" || $9 >= 0.9) && ($14=="NA" || $14 >= 0.9) && ($19=="NA" || $19 >= 0.9) && ($24=="NA" || $24 >= 0.9) && ($29=="NA" || $29 >= 0.9)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | wc -l # 69,953/215,810 with pm_cm <0.01 and coTFTG >=0.9
awk '($8=="NA" || $8 < 0.02) && ($13=="NA" || $13 < 0.02) && ($18=="NA" || $18 < 0.02) && ($23=="NA" || $23 < 0.02) && ($28=="NA" || $28 < 0.02) && ($9=="NA" || $9 >= 0.8) && ($14=="NA" || $14 >= 0.8) && ($19=="NA" || $19 >= 0.8) && ($24=="NA" || $24 >= 0.8) && ($29=="NA" || $29 >= 0.8)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | wc -l # 74,490/215,810 with pm_cm <0.02 and coTFTG >=0.8
awk '($8=="NA" || $8 < 0.03) && ($13=="NA" || $13 < 0.03) && ($18=="NA" || $18 < 0.03) && ($23=="NA" || $23 < 0.03) && ($28=="NA" || $28 < 0.03) && ($9=="NA" || $9 >= 0.7) && ($14=="NA" || $14 >= 0.7) && ($19=="NA" || $19 >= 0.7) && ($24=="NA" || $24 >= 0.7) && ($29=="NA" || $29 >= 0.7)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | wc -l # 83,302/215,810 with pm_cm <0.03 and coTFTG >=0.7
awk '($8=="NA" || $8 < 0.04) && ($13=="NA" || $13 < 0.04) && ($18=="NA" || $18 < 0.04) && ($23=="NA" || $23 < 0.04) && ($28=="NA" || $28 < 0.04) && ($9=="NA" || $9 >= 0.6) && ($14=="NA" || $14 >= 0.6) && ($19=="NA" || $19 >= 0.6) && ($24=="NA" || $24 >= 0.6) && ($29=="NA" || $29 >= 0.6)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | wc -l # 106,946/215,810 with pm_cm <0.04 and coTFTG >=0.6
awk '($8=="NA" || $8 < 0.05) && ($13=="NA" || $13 < 0.05) && ($18=="NA" || $18 < 0.05) && ($23=="NA" || $23 < 0.05) && ($28=="NA" || $28 < 0.05) && ($9=="NA" || $9 >= 0.5) && ($14=="NA" || $14 >= 0.5) && ($19=="NA" || $19 >= 0.5) && ($24=="NA" || $24 >= 0.5) && ($29=="NA" || $29 >= 0.5)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID.txt | wc -l # 215,810/215,810 with pm_cm <0.05 and coTFTG >=0.5

## 2b. do the same for species specific rewiring (4060-9423 and show how many drop out)

# Mz rewired and state changed
awk '($8=="NA" || $8 < 0.01) && ($13=="NA" || $13 < 0.01) && ($18=="NA" || $18 < 0.01) && ($23=="NA" || $23 < 0.01) && ($28=="NA" || $28 < 0.01) && ($9=="NA" || $9 >= 0.9) && ($14=="NA" || $14 >= 0.9) && ($19=="NA" || $19 >= 0.9) && ($24=="NA" || $24 >= 0.9) && ($29=="NA" || $29 >= 0.9)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Mz-PnAbNbOn.txt | wc -l # 380/215,810 with pm_cm <0.01 and coTFTG >=0.9
awk '($8=="NA" || $8 < 0.02) && ($13=="NA" || $13 < 0.02) && ($18=="NA" || $18 < 0.02) && ($23=="NA" || $23 < 0.02) && ($28=="NA" || $28 < 0.02) && ($9=="NA" || $9 >= 0.8) && ($14=="NA" || $14 >= 0.8) && ($19=="NA" || $19 >= 0.8) && ($24=="NA" || $24 >= 0.8) && ($29=="NA" || $29 >= 0.8)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Mz-PnAbNbOn.txt | wc -l # 712/215,810 with pm_cm <0.02 and coTFTG >=0.8
awk '($8=="NA" || $8 < 0.03) && ($13=="NA" || $13 < 0.03) && ($18=="NA" || $18 < 0.03) && ($23=="NA" || $23 < 0.03) && ($28=="NA" || $28 < 0.03) && ($9=="NA" || $9 >= 0.7) && ($14=="NA" || $14 >= 0.7) && ($19=="NA" || $19 >= 0.7) && ($24=="NA" || $24 >= 0.7) && ($29=="NA" || $29 >= 0.7)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Mz-PnAbNbOn.txt | wc -l # 1267/215,810 with pm_cm <0.03 and coTFTG >=0.7
awk '($8=="NA" || $8 < 0.04) && ($13=="NA" || $13 < 0.04) && ($18=="NA" || $18 < 0.04) && ($23=="NA" || $23 < 0.04) && ($28=="NA" || $28 < 0.04) && ($9=="NA" || $9 >= 0.6) && ($14=="NA" || $14 >= 0.6) && ($19=="NA" || $19 >= 0.6) && ($24=="NA" || $24 >= 0.6) && ($29=="NA" || $29 >= 0.6)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Mz-PnAbNbOn.txt | wc -l # 3153/215,810 with pm_cm <0.04 and coTFTG >=0.6
awk '($8=="NA" || $8 < 0.05) && ($13=="NA" || $13 < 0.05) && ($18=="NA" || $18 < 0.05) && ($23=="NA" || $23 < 0.05) && ($28=="NA" || $28 < 0.05) && ($9=="NA" || $9 >= 0.5) && ($14=="NA" || $14 >= 0.5) && ($19=="NA" || $19 >= 0.5) && ($24=="NA" || $24 >= 0.5) && ($29=="NA" || $29 >= 0.5)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Mz-PnAbNbOn.txt | wc -l # 5691/215,810 with pm_cm <0.05 and coTFTG >=0.5

# Pn rewired and state changed
awk '($8=="NA" || $8 < 0.01) && ($13=="NA" || $13 < 0.01) && ($18=="NA" || $18 < 0.01) && ($23=="NA" || $23 < 0.01) && ($28=="NA" || $28 < 0.01) && ($9=="NA" || $9 >= 0.9) && ($14=="NA" || $14 >= 0.9) && ($19=="NA" || $19 >= 0.9) && ($24=="NA" || $24 >= 0.9) && ($29=="NA" || $29 >= 0.9)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt | wc -l # 507/215,810 with pm_cm <0.01 and coTFTG >=0.9
awk '($8=="NA" || $8 < 0.02) && ($13=="NA" || $13 < 0.02) && ($18=="NA" || $18 < 0.02) && ($23=="NA" || $23 < 0.02) && ($28=="NA" || $28 < 0.02) && ($9=="NA" || $9 >= 0.8) && ($14=="NA" || $14 >= 0.8) && ($19=="NA" || $19 >= 0.8) && ($24=="NA" || $24 >= 0.8) && ($29=="NA" || $29 >= 0.8)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt | wc -l # 710/215,810 with pm_cm <0.02 and coTFTG >=0.8
awk '($8=="NA" || $8 < 0.03) && ($13=="NA" || $13 < 0.03) && ($18=="NA" || $18 < 0.03) && ($23=="NA" || $23 < 0.03) && ($28=="NA" || $28 < 0.03) && ($9=="NA" || $9 >= 0.7) && ($14=="NA" || $14 >= 0.7) && ($19=="NA" || $19 >= 0.7) && ($24=="NA" || $24 >= 0.7) && ($29=="NA" || $29 >= 0.7)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt | wc -l # 1117/215,810 with pm_cm <0.03 and coTFTG >=0.7
awk '($8=="NA" || $8 < 0.04) && ($13=="NA" || $13 < 0.04) && ($18=="NA" || $18 < 0.04) && ($23=="NA" || $23 < 0.04) && ($28=="NA" || $28 < 0.04) && ($9=="NA" || $9 >= 0.6) && ($14=="NA" || $14 >= 0.6) && ($19=="NA" || $19 >= 0.6) && ($24=="NA" || $24 >= 0.6) && ($29=="NA" || $29 >= 0.6)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt | wc -l # 2112/215,810 with pm_cm <0.04 and coTFTG >=0.6
awk '($8=="NA" || $8 < 0.05) && ($13=="NA" || $13 < 0.05) && ($18=="NA" || $18 < 0.05) && ($23=="NA" || $23 < 0.05) && ($28=="NA" || $28 < 0.05) && ($9=="NA" || $9 >= 0.5) && ($14=="NA" || $14 >= 0.5) && ($19=="NA" || $19 >= 0.5) && ($24=="NA" || $24 >= 0.5) && ($29=="NA" || $29 >= 0.5)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt | wc -l # 4060/215,810 with pm_cm <0.05 and coTFTG >=0.5

# Ab rewired and state changed
awk '($8=="NA" || $8 < 0.01) && ($13=="NA" || $13 < 0.01) && ($18=="NA" || $18 < 0.01) && ($23=="NA" || $23 < 0.01) && ($28=="NA" || $28 < 0.01) && ($9=="NA" || $9 >= 0.9) && ($14=="NA" || $14 >= 0.9) && ($19=="NA" || $19 >= 0.9) && ($24=="NA" || $24 >= 0.9) && ($29=="NA" || $29 >= 0.9)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt | wc -l # 401/215,810 with pm_cm <0.01 and coTFTG >=0.9
awk '($8=="NA" || $8 < 0.02) && ($13=="NA" || $13 < 0.02) && ($18=="NA" || $18 < 0.02) && ($23=="NA" || $23 < 0.02) && ($28=="NA" || $28 < 0.02) && ($9=="NA" || $9 >= 0.8) && ($14=="NA" || $14 >= 0.8) && ($19=="NA" || $19 >= 0.8) && ($24=="NA" || $24 >= 0.8) && ($29=="NA" || $29 >= 0.8)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt | wc -l # 701/215,810 with pm_cm <0.02 and coTFTG >=0.8
awk '($8=="NA" || $8 < 0.03) && ($13=="NA" || $13 < 0.03) && ($18=="NA" || $18 < 0.03) && ($23=="NA" || $23 < 0.03) && ($28=="NA" || $28 < 0.03) && ($9=="NA" || $9 >= 0.7) && ($14=="NA" || $14 >= 0.7) && ($19=="NA" || $19 >= 0.7) && ($24=="NA" || $24 >= 0.7) && ($29=="NA" || $29 >= 0.7)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt | wc -l # 1183/215,810 with pm_cm <0.03 and coTFTG >=0.7
awk '($8=="NA" || $8 < 0.04) && ($13=="NA" || $13 < 0.04) && ($18=="NA" || $18 < 0.04) && ($23=="NA" || $23 < 0.04) && ($28=="NA" || $28 < 0.04) && ($9=="NA" || $9 >= 0.6) && ($14=="NA" || $14 >= 0.6) && ($19=="NA" || $19 >= 0.6) && ($24=="NA" || $24 >= 0.6) && ($29=="NA" || $29 >= 0.6)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt | wc -l # 2255/215,810 with pm_cm <0.04 and coTFTG >=0.6
awk '($8=="NA" || $8 < 0.05) && ($13=="NA" || $13 < 0.05) && ($18=="NA" || $18 < 0.05) && ($23=="NA" || $23 < 0.05) && ($28=="NA" || $28 < 0.05) && ($9=="NA" || $9 >= 0.5) && ($14=="NA" || $14 >= 0.5) && ($19=="NA" || $19 >= 0.5) && ($24=="NA" || $24 >= 0.5) && ($29=="NA" || $29 >= 0.5)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt | wc -l # 4490/215,810 with pm_cm <0.05 and coTFTG >=0.5

# Nb rewired and state changed
awk '($8=="NA" || $8 < 0.01) && ($13=="NA" || $13 < 0.01) && ($18=="NA" || $18 < 0.01) && ($23=="NA" || $23 < 0.01) && ($28=="NA" || $28 < 0.01) && ($9=="NA" || $9 >= 0.9) && ($14=="NA" || $14 >= 0.9) && ($19=="NA" || $19 >= 0.9) && ($24=="NA" || $24 >= 0.9) && ($29=="NA" || $29 >= 0.9)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt | wc -l # 665/215,810 with pm_cm <0.01 and coTFTG >=0.9
awk '($8=="NA" || $8 < 0.02) && ($13=="NA" || $13 < 0.02) && ($18=="NA" || $18 < 0.02) && ($23=="NA" || $23 < 0.02) && ($28=="NA" || $28 < 0.02) && ($9=="NA" || $9 >= 0.8) && ($14=="NA" || $14 >= 0.8) && ($19=="NA" || $19 >= 0.8) && ($24=="NA" || $24 >= 0.8) && ($29=="NA" || $29 >= 0.8)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt | wc -l # 925/215,810 with pm_cm <0.02 and coTFTG >=0.8
awk '($8=="NA" || $8 < 0.03) && ($13=="NA" || $13 < 0.03) && ($18=="NA" || $18 < 0.03) && ($23=="NA" || $23 < 0.03) && ($28=="NA" || $28 < 0.03) && ($9=="NA" || $9 >= 0.7) && ($14=="NA" || $14 >= 0.7) && ($19=="NA" || $19 >= 0.7) && ($24=="NA" || $24 >= 0.7) && ($29=="NA" || $29 >= 0.7)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt | wc -l # 1475/215,810 with pm_cm <0.03 and coTFTG >=0.7
awk '($8=="NA" || $8 < 0.04) && ($13=="NA" || $13 < 0.04) && ($18=="NA" || $18 < 0.04) && ($23=="NA" || $23 < 0.04) && ($28=="NA" || $28 < 0.04) && ($9=="NA" || $9 >= 0.6) && ($14=="NA" || $14 >= 0.6) && ($19=="NA" || $19 >= 0.6) && ($24=="NA" || $24 >= 0.6) && ($29=="NA" || $29 >= 0.6)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt | wc -l # 2467/215,810 with pm_cm <0.04 and coTFTG >=0.6
awk '($8=="NA" || $8 < 0.05) && ($13=="NA" || $13 < 0.05) && ($18=="NA" || $18 < 0.05) && ($23=="NA" || $23 < 0.05) && ($28=="NA" || $28 < 0.05) && ($9=="NA" || $9 >= 0.5) && ($14=="NA" || $14 >= 0.5) && ($19=="NA" || $19 >= 0.5) && ($24=="NA" || $24 >= 0.5) && ($29=="NA" || $29 >= 0.5)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt | wc -l # 4669/215,810 with pm_cm <0.05 and coTFTG >=0.5

# On rewired and state changed
awk '($8=="NA" || $8 < 0.01) && ($13=="NA" || $13 < 0.01) && ($18=="NA" || $18 < 0.01) && ($23=="NA" || $23 < 0.01) && ($28=="NA" || $28 < 0.01) && ($9=="NA" || $9 >= 0.9) && ($14=="NA" || $14 >= 0.9) && ($19=="NA" || $19 >= 0.9) && ($24=="NA" || $24 >= 0.9) && ($29=="NA" || $29 >= 0.9)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_On-MzPnAbNb.txt | wc -l # 1376/215,810 with pm_cm <0.01 and coTFTG >=0.9
awk '($8=="NA" || $8 < 0.02) && ($13=="NA" || $13 < 0.02) && ($18=="NA" || $18 < 0.02) && ($23=="NA" || $23 < 0.02) && ($28=="NA" || $28 < 0.02) && ($9=="NA" || $9 >= 0.8) && ($14=="NA" || $14 >= 0.8) && ($19=="NA" || $19 >= 0.8) && ($24=="NA" || $24 >= 0.8) && ($29=="NA" || $29 >= 0.8)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_On-MzPnAbNb.txt | wc -l # 1863/215,810 with pm_cm <0.02 and coTFTG >=0.8
awk '($8=="NA" || $8 < 0.03) && ($13=="NA" || $13 < 0.03) && ($18=="NA" || $18 < 0.03) && ($23=="NA" || $23 < 0.03) && ($28=="NA" || $28 < 0.03) && ($9=="NA" || $9 >= 0.7) && ($14=="NA" || $14 >= 0.7) && ($19=="NA" || $19 >= 0.7) && ($24=="NA" || $24 >= 0.7) && ($29=="NA" || $29 >= 0.7)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_On-MzPnAbNb.txt | wc -l # 2812/215,810 with pm_cm <0.03 and coTFTG >=0.7
awk '($8=="NA" || $8 < 0.04) && ($13=="NA" || $13 < 0.04) && ($18=="NA" || $18 < 0.04) && ($23=="NA" || $23 < 0.04) && ($28=="NA" || $28 < 0.04) && ($9=="NA" || $9 >= 0.6) && ($14=="NA" || $14 >= 0.6) && ($19=="NA" || $19 >= 0.6) && ($24=="NA" || $24 >= 0.6) && ($29=="NA" || $29 >= 0.6)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_On-MzPnAbNb.txt | wc -l # 4974/215,810 with pm_cm <0.04 and coTFTG >=0.6
awk '($8=="NA" || $8 < 0.05) && ($13=="NA" || $13 < 0.05) && ($18=="NA" || $18 < 0.05) && ($23=="NA" || $23 < 0.05) && ($28=="NA" || $28 < 0.05) && ($9=="NA" || $9 >= 0.5) && ($14=="NA" || $14 >= 0.5) && ($19=="NA" || $19 >= 0.5) && ($24=="NA" || $24 >= 0.5) && ($29=="NA" || $29 >= 0.5)' Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_On-MzPnAbNb.txt | wc -l # 9423/215,810 with pm_cm <0.05 and coTFTG >=0.5

# at promoter motif qval <0.01 and co-expressionTFTG >=0.9 we retain 380-1376/215810 edges (0.2-0.6%)
# at promoter motif qval <0.02 and co-expressionTFTG >=0.8 we retain 701-1863/215810 edges (0.3-0.9%)
# at promoter motif qval <0.03 and co-expressionTFTG >=0.7 we retain 1117-2812/215810 edges (0.5-1.3%)
# at promoter motif qval <0.04 and co-expressionTFTG >=0.6 we retain 2112-4974/215810 edges (1.0-2.3%)
# at promoter motif qval <0.05 and co-expressionTFTG >=0.5 we retain 4060-9423/215810 edges (1.9-4.4%)





## what proportion of TFs in above edges (out of all edges) are switched and rewired
wc -l Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt # 215810
cut -f2 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID.txt | sort -u | wc -l # 379 TFs
cut -f2 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Mz-PnAbNbOn.txt | sort -u | wc -l # 56/379 = 15% TFs
cut -f3 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Mz-PnAbNbOn.txt | sort -u | wc -l # 3325/5691 TGs
cut -f2 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt | sort -u | wc -l # 50/379 = 13% TFs
cut -f3 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt | sort -u | wc -l # 2423/4060 TGs
cut -f2 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt | sort -u | wc -l # 55/379 = 15% TFs
cut -f3 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt | sort -u | wc -l # 2725/4490 TGs
cut -f2 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt | sort -u | wc -l # 57/379 = 15% TFs
cut -f3 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt | sort -u | wc -l # 2591/4669 TGs
cut -f2 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_On-MzPnAbNb.txt | sort -u | wc -l # 70/379 = 18% TFs
cut -f3 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_On-MzPnAbNb.txt | sort -u | wc -l # 4934/9423 TGs


# 3. number of switches between pairs (pairwise-specific rewiring events) irrespective of other species
==> 3.coexpr_geneApairwiseSW_wc <==
5309 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_AbvsMz.txt
10160 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_AbvsNb.txt
16023 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_AbvsOn.txt
6705 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_AbvsPn.txt
5374 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_MzvsAb.txt
13311 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_MzvsNb.txt
14529 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_MzvsOn.txt
5310 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_MzvsPn.txt
10775 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_NbvsAb.txt
10137 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_NbvsMz.txt
14057 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_NbvsOn.txt
4842 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_NbvsPn.txt
12970 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_OnvsAb.txt
20079 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_OnvsMz.txt
20100 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_OnvsNb.txt
8921 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_OnvsPn.txt
3168 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_PnvsAb.txt
2318 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_PnvsMz.txt
8504 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_PnvsNb.txt
14162 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_PnvsOn.txt
483930 total

# 4. number of switches in the haplochromines specifically (haplochromine-specific rewiring events)
==> 4.coexpr_geneAhaploSW_wc <==
289 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_MzvsPnAb.txt
576 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_PnvsMzAb.txt
2291 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_AbvsMzPn.txt
3154 total

# b. coexpr_geneB (TG) - Re-usage events linked to module assignment switches (edge presence in species, loss in some species and presence in a common ancestor/basal species in tree + switches vs basal species implies re-usage derived from switch)
wc -l Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_*.txt
771 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_AbMz-PnNbOn.txt
472 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_AbNb-MzPnOn.txt
658 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_AbOn-MzPnNb.txt
470 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_AbPn-MzNbOn.txt
873 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_MzAb-PnNbOn.txt
594 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_MzNb-PnAbOn.txt
643 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_MzOn-PnAbNb.txt
887 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_MzPn-AbNbOn.txt
572 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_NbAb-MzPnOn.txt
576 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_NbMz-PnAbOn.txt
1109 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_NbOn-MzPnAb.txt
631 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_NbPn-MzAbOn.txt
990 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_OnAb-MzPnNb.txt
882 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_OnMz-PnAbNb.txt
1391 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_OnNb-MzPnAb.txt
906 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_OnPn-MzAbNb.txt
420 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_PnAb-MzNbOn.txt
702 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_PnMz-AbNbOn.txt
488 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_PnNb-MzAbOn.txt
581 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_reusage_PnOn-MzAbNb.txt
14616 total

# c. coexpr_geneB (TG) - Re-wiring events linked to module assignment switches (edge present in only one species + switching in any of the other species and then check for reocurring geneA nodes, so that there will be an edge containing that node in the other species)
wc -l Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_*.txt
2438 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_Ab-MzPnNbOn.txt
4070 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_Mz-PnAbNbOn.txt
3540 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_Nb-MzPnAbOn.txt
7447 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_On-MzPnAbNb.txt
2421 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_Pn-MzAbNbOn.txt
19916 total

# 5. coexpr_geneB (TG) - number of switches between pairs

==> 5.coexpr_geneBpairwiseSW_wc <==
grep -v 'Cis' 5.coexpr_geneBpairwiseSW_wc | grep -v Trans | grep -v reusage | grep -v rewired
7475 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_AbvsMz.txt
10645 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_AbvsNb.txt
11617 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_AbvsOn.txt
4553 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_AbvsPn.txt
8339 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_MzvsAb.txt
13685 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_MzvsNb.txt
16375 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_MzvsOn.txt
5687 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_MzvsPn.txt
8630 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_NbvsAb.txt
9964 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_NbvsMz.txt
12406 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_NbvsOn.txt
6843 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_NbvsPn.txt
12817 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_OnvsAb.txt
15962 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_OnvsMz.txt
16812 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_OnvsNb.txt
12727 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_OnvsPn.txt
5560 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_PnvsAb.txt
5995 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_PnvsMz.txt
10588 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_PnvsNb.txt
13363 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_PnvsOn.txt
454052 total


# 6. coexpr_geneB (TG) - number of switches in the haplochromines specifically (haplochromine-specific rewiring events)

==> 6.coexpr_geneBhaploSW_wc <==
1042 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_AbvsMzPn.txt
1067 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_MzvsPnAb.txt
 652 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_PnvsMzAb.txt
2761 total

# b. CNEmotif_gene A (TF) - Re-usage events linked to module assignment switches (edge presence in species, loss in some species and presence in a common ancestor/basal species in tree + switches vs basal species implies re-usage derived from switch)
wc -l Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_*.txt
16486 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_AbMz-PnNbOn.txt
 4618 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_AbNb-MzPnOn.txt
 1614 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_AbOn-MzPnNb.txt
  736 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_AbPn-MzNbOn.txt
13862 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_MzAb-PnNbOn.txt
  861 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_MzNb-PnAbOn.txt
  702 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_MzOn-PnAbNb.txt
  641 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_MzPn-AbNbOn.txt
 1063 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_NbAb-MzPnOn.txt
 1062 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_NbMz-PnAbOn.txt
 2724 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_NbOn-MzPnAb.txt
 1454 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_NbPn-MzAbOn.txt
22012 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_OnAb-MzPnNb.txt
 2322 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_OnMz-PnAbNb.txt
 2912 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_OnNb-MzPnAb.txt
10014 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_OnPn-MzAbNb.txt
  186 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_PnAb-MzNbOn.txt
  372 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_PnMz-AbNbOn.txt
  407 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_PnNb-MzAbOn.txt
  588 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_reusage_PnOn-MzAbNb.txt
84636 total

# c. CNEmotif_gene A (TF) - Re-wiring events linked to module assignment switches (edge present in only one species + switching in any of the other species and then check for reocurring geneA nodes, so that there will be an edge containing that node in the other species)
wc -l Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_rewired_*.txt
45856 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt
43266 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_rewired_Mz-PnAbNbOn.txt
44138 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt
95068 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_rewired_On-MzPnAbNb.txt
48396 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt
276724 total

# 7. CNEmotif_gene A (TF) - number of switches between pairs (pairwise-specific rewiring events) irrespective of other species - this can be represented as a matrix
# Mz-Pn (edge present in Mz, absent in Pn, TF switched in Mz vs Pn)
==> 7.CNEmotif_geneApairwiseSW_wc <==
grep -v 'Cis' 7.CNEmotif_geneApairwiseSW_wc | grep -v Trans | grep -v reusage | grep -v rewired
22671 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_AbvsMz.txt
67606 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_AbvsNb.txt
103886 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_AbvsOn.txt
22976 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_AbvsPn.txt
23882 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_MzvsAb.txt
87189 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_MzvsNb.txt
71876 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_MzvsOn.txt
27841 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_MzvsPn.txt
36732 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_NbvsAb.txt
30053 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_NbvsMz.txt
77852 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_NbvsOn.txt
15777 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_NbvsPn.txt
95520 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_OnvsAb.txt
140104 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_OnvsMz.txt
139218 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_OnvsNb.txt
72300 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_OnvsPn.txt
10744 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_PnvsAb.txt
 6989 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_PnvsMz.txt
47236 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_PnvsNb.txt
94243 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmoduleSW_PnvsOn.txt
1556055 total

# 8. CNEmotif_gene A (TF) - number of switches in the haplochromines specifically (haplochromine-specific rewiring events)
==> 8.CNEmotif_geneAhaploSW_wc <==
5272 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmodule_geneAhaploSW_AbvsMzPn.txt
 574 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmodule_geneAhaploSW_MzvsPnAb.txt
2641 Edge_Attributes_Collated4c.CNEmotifONLY.matrix3-geneA1to1OGID-networkandmodule_geneAhaploSW_PnvsMzAb.txt
8487 total

# b. CNEproximal_geneB (TG) - Re-usage events linked to module assignment switches (edge presence in species, loss in some species and presence in a common ancestor/basal species in tree + switches vs basal species implies re-usage derived from switch)
wc -l Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_*.txt
68 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_AbMz-PnNbOn.txt
18 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_AbNb-MzPnOn.txt
73 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_AbOn-MzPnNb.txt
81 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_AbPn-MzNbOn.txt
37 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_MzAb-PnNbOn.txt
20 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_MzNb-PnAbOn.txt
26 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_MzOn-PnAbNb.txt
36 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_MzPn-AbNbOn.txt
30 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_NbAb-MzPnOn.txt
22 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_NbMz-PnAbOn.txt
32 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_NbOn-MzPnAb.txt
43 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_NbPn-MzAbOn.txt
83 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_OnAb-MzPnNb.txt
28 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_OnMz-PnAbNb.txt
83 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_OnNb-MzPnAb.txt
67 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_OnPn-MzAbNb.txt
76 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_PnAb-MzNbOn.txt
30 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_PnMz-AbNbOn.txt
34 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_PnNb-MzAbOn.txt
14 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_PnOn-MzAbNb.txt
901 total

# c. CNEproximal_geneB (TG) - Re-wiring events linked to module assignment switches (edge present in only one species + switching in any of the other species and then check for reocurring geneA nodes, so that there will be an edge containing that node in the other species)
wc -l Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_*.txt
4466 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_Ab-MzPnNbOn.txt
5338 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_Mz-PnAbNbOn.txt
11914 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_Nb-MzPnAbOn.txt
6286 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_On-MzPnAbNb.txt
6430 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_Pn-MzAbNbOn.txt
34434 total

# 9. CNEproximal_geneB (TG) - number of switches between pairs
==> 9.CNEproximal_geneBpairwiseSW_wc <==
grep -v 'Cis' 9.CNEproximal_geneBpairwiseSW_wc | grep -v Trans | grep -v reusage | grep -v rewired
750 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_AbvsMz.txt
893 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_AbvsNb.txt
878 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_AbvsOn.txt
479 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_AbvsPn.txt
681 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_MzvsAb.txt
982 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_MzvsNb.txt
1027 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_MzvsOn.txt
377 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_MzvsPn.txt
789 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_NbvsAb.txt
1177 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_NbvsMz.txt
1217 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_NbvsOn.txt
846 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_NbvsPn.txt
880 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_OnvsAb.txt
774 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_OnvsMz.txt
850 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_OnvsNb.txt
795 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_OnvsPn.txt
475 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_PnvsAb.txt
517 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_PnvsMz.txt
920 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_PnvsNb.txt
1010 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_PnvsOn.txt
51652 total

# 10. CNEproximal_geneB (TG) - number of switches in the haplochromines specifically (haplochromine-specific rewiring events)
==> 10.CNEproximal_geneBhaploSW_wc <==
620 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW_AbvsMzPn.txt
972 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW_MzvsPnAb.txt
405 Edge_Attributes_Collated4c.CNEproximalONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW_PnvsMzAb.txt
1997 total

# b. targetscan7_geneB (TG) - Re-usage events linked to module assignment switches (edge presence in species, loss in some species and presence in a common ancestor/basal species in tree + switches vs basal species implies re-usage derived from switch)
wc -l Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_*.txt
1588 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_AbMz-PnNbOn.txt
1027 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_AbNb-MzPnOn.txt
1627 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_AbOn-MzPnNb.txt
 911 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_AbPn-MzNbOn.txt
1870 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_MzAb-PnNbOn.txt
1176 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_MzNb-PnAbOn.txt
2383 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_MzOn-PnAbNb.txt
1087 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_MzPn-AbNbOn.txt
1178 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_NbAb-MzPnOn.txt
1180 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_NbMz-PnAbOn.txt
1597 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_NbOn-MzPnAb.txt
 364 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_NbPn-MzAbOn.txt
2561 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_OnAb-MzPnNb.txt
3056 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_OnMz-PnAbNb.txt
2257 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_OnNb-MzPnAb.txt
2217 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_OnPn-MzAbNb.txt
 913 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_PnAb-MzNbOn.txt
 866 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_PnMz-AbNbOn.txt
 287 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_PnNb-MzAbOn.txt
1370 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_reusage_PnOn-MzAbNb.txt
29515 total

# c. targetscan7_geneB (TG) - Re-wiring events linked to module assignment switches (edge present in only one species + switching in any of the other species and then check for reocurring geneA nodes, so that there will be an edge containing that node in the other species)
wc -l Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_*.txt
53293 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_Ab-MzPnNbOn.txt
17284 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_Mz-PnAbNbOn.txt
18010 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_Nb-MzPnAbOn.txt
43679 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_On-MzPnAbNb.txt
10678 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_rewired_Pn-MzAbNbOn.txt
142944 total

# 11. targetscan7_geneB (TG) - number of switches between pairs
==> 11.targetscan7_geneBpairwiseSW_wc <==
grep -v 'Cis' 11.targetscan7_geneBpairwiseSW_wc | grep -v Trans | grep -v reusage | grep -v rewired
31387 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_AbvsMz.txt
40887 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_AbvsNb.txt
52280 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_AbvsOn.txt
24621 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_AbvsPn.txt
19481 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_MzvsAb.txt
32931 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_MzvsNb.txt
33578 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_MzvsOn.txt
17313 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_MzvsPn.txt
17106 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_NbvsAb.txt
19447 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_NbvsMz.txt
26937 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_NbvsOn.txt
19132 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_NbvsPn.txt
45183 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_OnvsAb.txt
43712 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_OnvsMz.txt
53678 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_OnvsNb.txt
45470 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_OnvsPn.txt
 9719 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_PnvsAb.txt
10178 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_PnvsMz.txt
20401 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_PnvsNb.txt
23575 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBSW_PnvsOn.txt
759475 total

# 12. targetscan7_geneB (TG) - number of switches in the haplochromines specifically (haplochromine-specific rewiring events)
==> 12.targetscan7_geneBhaploSW_wc <==
1968 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW_AbvsMzPn.txt
3111 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW_MzvsPnAb.txt
 816 Edge_Attributes_Collated4c.targetscan7ONLY.matrix3-geneB1to1OGID-networkandmodule_geneBhaploSW_PnvsMzAb.txt
5895 total

# In re-usage and re-wired edges, what are the percentage of cis- and trans- expression effects (TF-TG in same [cis] / different [trans] module) - only look in TFTG edges
# re-usage - cis
# TF

# TG

# re-usage - trans
# TF

# TG


# re-wired - cis
# TF
#5 species
awk '$10==$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Mz-PnAbNbOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-rewired_Mz-PnAbNbOn.txt # 880
awk '$11==$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-rewired_Pn-MzAbNbOn.txt # 578
awk '$12==$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-rewired_Ab-MzPnNbOn.txt # 549
awk '$13==$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-rewired_Nb-MzPnAbOn.txt # 531
awk '$14==$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_On-MzPnAbNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-rewired_On-MzPnAbNb.txt # 1181

# haplochromines
awk '$10==$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_MzvsPnAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_Cis-MzvsPnAb.txt # 43
awk '$11==$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_PnvsMzAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_Cis-PnvsMzAb.txt # 39
awk '$12==$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_AbvsMzPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_Cis-AbvsMzPn.txt # 125

# pairwise
awk '$12==$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_AbvsMz.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-AbvsMz.txt # 419
awk '$12==$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_AbvsNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-AbvsNb.txt # 1221
awk '$12==$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_AbvsOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-AbvsOn.txt # 2184
awk '$12==$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_AbvsPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-AbvsPn.txt # 641
awk '$10==$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_MzvsAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-MzvsAb.txt # 657
awk '$10==$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_MzvsNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-MzvsNb.txt # 1740
awk '$10==$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_MzvsOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-MzvsOn.txt # 2368
awk '$10==$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_MzvsPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-MzvsPn.txt # 827
awk '$13==$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_NbvsAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-NbvsAb.txt # 960
awk '$13==$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_NbvsMz.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-NbvsMz.txt # 889
awk '$13==$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_NbvsOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-NbvsOn.txt # 2028
awk '$13==$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_NbvsPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-NbvsPn.txt # 415
awk '$14==$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_OnvsAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-OnvsAb.txt # 1333
awk '$14==$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_OnvsMz.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-OnvsMz.txt # 2084
awk '$14==$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_OnvsNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-OnvsNb.txt # 1939
awk '$14==$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_OnvsPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-OnvsPn.txt # 911
awk '$11==$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_PnvsAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-PnvsAb.txt # 270
awk '$11==$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_PnvsMz.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-PnvsMz.txt # 186
awk '$11==$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_PnvsNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-PnvsNb.txt # 950
awk '$11==$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_PnvsOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-PnvsOn.txt # 2437

# TG
#5 species
awk '$10==$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_Mz-PnAbNbOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-rewired_Mz-PnAbNbOn.txt #620
awk '$11==$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_Pn-MzAbNbOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-rewired_Pn-MzAbNbOn.txt #270
awk '$12==$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_Ab-MzPnNbOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-rewired_Ab-MzPnNbOn.txt #251
awk '$13==$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_Nb-MzPnAbOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-rewired_Nb-MzPnAbOn.txt #350
awk '$14==$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_On-MzPnAbNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-rewired_On-MzPnAbNb.txt #866

# haplochromines
awk '$10==$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_MzvsPnAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_Cis-MzvsPnAb.txt #99
awk '$11==$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_PnvsMzAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_Cis-PnvsMzAb.txt #90
awk '$12==$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_AbvsMzPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_Cis-AbvsMzPn.txt #112

# pairwise
awk '$12==$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_AbvsMz.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-AbvsMz.txt # 770
awk '$12==$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_AbvsNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-AbvsNb.txt # 1105
awk '$12==$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_AbvsOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-AbvsOn.txt # 1121
awk '$12==$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_AbvsPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-AbvsPn.txt # 404
awk '$10==$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_MzvsAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-MzvsAb.txt # 967
awk '$10==$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_MzvsNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-MzvsNb.txt # 1610
awk '$10==$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_MzvsOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-MzvsOn.txt # 2042
awk '$10==$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_MzvsPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-MzvsPn.txt # 719
awk '$13==$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_NbvsAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-NbvsAb.txt # 1012
awk '$13==$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_NbvsMz.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-NbvsMz.txt # 1034
awk '$13==$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_NbvsOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-NbvsOn.txt # 1488
awk '$13==$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_NbvsPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-NbvsPn.txt # 731
awk '$14==$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_OnvsAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-OnvsAb.txt # 1422
awk '$14==$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_OnvsMz.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-OnvsMz.txt # 1768
awk '$14==$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_OnvsNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-OnvsNb.txt # 1815
awk '$14==$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_OnvsPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-OnvsPn.txt # 1401
awk '$11==$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_PnvsAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-PnvsAb.txt # 632
awk '$11==$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_PnvsMz.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-PnvsMz.txt # 809
awk '$11==$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_PnvsNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-PnvsNb.txt # 1265
awk '$11==$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_PnvsOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-PnvsOn.txt # 1615

# re-wired - trans
# TF
#5 species
awk '$10!=$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Mz-PnAbNbOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-rewired_Mz-PnAbNbOn.txt # 4811
awk '$11!=$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-rewired_Pn-MzAbNbOn.txt # 3482
awk '$12!=$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-rewired_Ab-MzPnNbOn.txt # 3941
awk '$13!=$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-rewired_Nb-MzPnAbOn.txt # 4138
awk '$14!=$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_On-MzPnAbNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-rewired_On-MzPnAbNb.txt # 8242

# haplochromines
awk '$10!=$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_MzvsPnAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_Trans-MzvsPnAb.txt # 246
awk '$11!=$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_PnvsMzAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_Trans-PnvsMzAb.txt # 537
awk '$12!=$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_AbvsMzPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_Trans-AbvsMzPn.txt # 2166

# pairwise
awk '$12!=$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_AbvsMz.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-AbvsMz.txt # 4890
awk '$12!=$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_AbvsNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-AbvsNb.txt # 8939
awk '$12!=$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_AbvsOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-AbvsOn.txt # 13839
awk '$12!=$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_AbvsPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-AbvsPn.txt # 6064
awk '$10!=$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_MzvsAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-MzvsAb.txt # 4717
awk '$10!=$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_MzvsNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-MzvsNb.txt # 11571
awk '$10!=$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_MzvsOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-MzvsOn.txt # 12161
awk '$10!=$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_MzvsPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-MzvsPn.txt # 4483
awk '$13!=$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_NbvsAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-NbvsAb.txt # 9815
awk '$13!=$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_NbvsMz.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-NbvsMz.txt # 9248
awk '$13!=$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_NbvsOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-NbvsOn.txt # 12029
awk '$13!=$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_NbvsPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-NbvsPn.txt # 4427
awk '$14!=$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_OnvsAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-OnvsAb.txt # 11637
awk '$14!=$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_OnvsMz.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-OnvsMz.txt # 17995
awk '$14!=$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_OnvsNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-OnvsNb.txt # 18161
awk '$14!=$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_OnvsPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-OnvsPn.txt # 8010
awk '$11!=$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_PnvsAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-PnvsAb.txt # 2898
awk '$11!=$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_PnvsMz.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-PnvsMz.txt # 2132
awk '$11!=$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_PnvsNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-PnvsNb.txt # 7554
awk '$11!=$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_PnvsOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-PnvsOn.txt # 11725

# TG
#5 species
awk '$10!=$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_Mz-PnAbNbOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-rewired_Mz-PnAbNbOn.txt #3450
awk '$11!=$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_Pn-MzAbNbOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-rewired_Pn-MzAbNbOn.txt #2151
awk '$12!=$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_Ab-MzPnNbOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-rewired_Ab-MzPnNbOn.txt #2187
awk '$13!=$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_Nb-MzPnAbOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-rewired_Nb-MzPnAbOn.txt #3190
awk '$14!=$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_On-MzPnAbNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-rewired_On-MzPnAbNb.txt #6581

# haplochromines
awk '$10!=$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_MzvsPnAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_Trans-MzvsPnAb.txt #968
awk '$11!=$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_PnvsMzAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_Trans-PnvsMzAb.txt #562
awk '$12!=$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_AbvsMzPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_Trans-AbvsMzPn.txt #930

# pairwise
awk '$12!=$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_AbvsMz.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-AbvsMz.txt # 6705
awk '$12!=$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_AbvsNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-AbvsNb.txt # 9540
awk '$12!=$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_AbvsOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-AbvsOn.txt # 10496
awk '$12!=$17' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_AbvsPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-AbvsPn.txt # 4149
awk '$10!=$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_MzvsAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-MzvsAb.txt # 7372
awk '$10!=$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_MzvsNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-MzvsNb.txt # 12075
awk '$10!=$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_MzvsOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-MzvsOn.txt # 14333
awk '$10!=$15' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_MzvsPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-MzvsPn.txt # 4968
awk '$13!=$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_NbvsAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-NbvsAb.txt # 7618
awk '$13!=$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_NbvsMz.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-NbvsMz.txt # 8930
awk '$13!=$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_NbvsOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-NbvsOn.txt # 10918
awk '$13!=$18' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_NbvsPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-NbvsPn.txt # 6112
awk '$14!=$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_OnvsAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-OnvsAb.txt # 11395
awk '$14!=$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_OnvsMz.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-OnvsMz.txt # 14194
awk '$14!=$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_OnvsNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-OnvsNb.txt # 14997
awk '$14!=$19' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_OnvsPn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-OnvsPn.txt # 11326
awk '$11!=$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_PnvsAb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-PnvsAb.txt # 4928
awk '$11!=$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_PnvsMz.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-PnvsMz.txt # 5186
awk '$11!=$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_PnvsNb.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-PnvsNb.txt # 9323
awk '$11!=$16' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_PnvsOn.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-PnvsOn.txt # 11748

### NOTE: pairwise heatmaps plotted in /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/matrix/comparison_heatmaps.R


# iv.	How does the above compare to non-switched genes - percentages rewired networks higher?
## this is just the switched genes subtracted from the total edges

# b)	What are the module switched genes that are also rewired in networks? - only focus on those that are switched and rewired in edges only, as well as the whole edge

## i. GO term enrichment
### A. run GO enrichment of the gene that is switched in the edge
## ia. define your list of files - create separate ones for TF and TG
# 5 species, haplochromines + pairwise comparisons of TF-TG edges only
# TF switched and rewired
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_*-*.txt > TFGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_*vs*.txt | grep -v 'Cis' | grep -v 'Trans' >> TFGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_*vs*.txt | grep -v 'Cis' | grep -v 'Trans' >> TFGOfilelist

# TG switched and rewired
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_*.txt > TGGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_*vs*.txt | grep -v 'Cis' | grep -v Trans | grep -v reusage | grep -v rewired >> TGGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_*vs*.txt | grep -v 'Cis' | grep -v Trans | grep -v reusage | grep -v rewired >> TGGOfilelist

# cis-edges of TF/TG switched and rewired
# TF - cis
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-rewired_*-*.txt >> TFGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_Cis-*vs*.txt >> TFGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-*vs*.txt >> TFGOfilelist
# TG - cis
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-rewired_*-*.txt >> TGGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_Cis-*vs*.txt >> TGGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-*vs*.txt >> TGGOfilelist

# trans-edges of TF/TG switched and rewired
# TF - trans
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-rewired_*-*.txt >> TFGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_Trans-*vs*.txt | grep -v 'Cis' | grep -v 'Trans' >> TFGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-*vs*.txt | grep -v 'Cis' | grep -v 'Trans' >> TFGOfilelist
# TG - trans
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-rewired_*-*.txt >> TGGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_Trans-*vs*.txt >> TGGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-*vs*.txt >> TGGOfilelist

# Prepare gene names INPUT files
# first, cut the filename (col1) and OGID (col2)
for i in `cat TFGOfilelist` ; do
	awk '{print FILENAME,$2}' OFS='\t' $i | sed 's/Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-//g' > "$(basename "$i" .txt)_cut.txt" ;
done

for i in `cat TGGOfilelist` ; do
	awk '{print FILENAME,$3}' OFS='\t' $i | sed 's/Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-//g' > "$(basename "$i" .txt)_cut.txt" ;
done
# second, merge same species (as in edge presence) cut files
for i in Mz Pn Ab Nb On ; do
  cat *_$i*cut.txt *-${i}vs*cut.txt > $i-cut_cat.txt
done
rm *cut.txt # remove all cut intermediate files
# third, prepare GOinput files - col1 is source file and col2 is hash-separated genes
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 Mz-cut_cat.txt | cut -f1,3 | awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > Mz-cut_cat_GOINPUT.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$3;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 Pn-cut_cat.txt | cut -f1,3 | awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > Pn-cut_cat_GOINPUT.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$4;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 Ab-cut_cat.txt | cut -f1,3 | awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > Ab-cut_cat_GOINPUT.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$5;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 Nb-cut_cat.txt | cut -f1,3 | awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > Nb-cut_cat_GOINPUT.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$6;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 On-cut_cat.txt | cut -f1,3 | awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > On-cut_cat_GOINPUT.txt

# Run GO enrichment
mkdir GOOUTPUT_BPonly

ml gcc
ml zlib
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/tgac/software/testing/enrichAnalyzer/0.1/x86_64/lib:/tgac/software/testing/enrichAnalyzer/0.1/x86_64/lib2/

/tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer Ab-cut_cat_GOINPUT.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Ab-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Asbu_ 1 GOOUTPUT_BPonly/Ab-cut_cat_GOOUTPUT persg
/tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer Mz-cut_cat_GOINPUT.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Mz-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Meze_ 1 GOOUTPUT_BPonly/Mz-cut_cat_GOOUTPUT persg
/tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer Pn-cut_cat_GOINPUT.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Pn-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Puny_ 1 GOOUTPUT_BPonly/Pn-cut_cat_GOOUTPUT persg
/tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer Nb-cut_cat_GOINPUT.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Nb-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Nebr_ 1 GOOUTPUT_BPonly/Nb-cut_cat_GOOUTPUT persg
/tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer On-cut_cat_GOINPUT.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/On-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Orni_ 1 GOOUTPUT_BPonly/On-cut_cat_GOOUTPUT persg

# filter output (qval < 0.05)
for i in GOOUTPUT_BPonly/*txt ; do awk '($4 < 0.05 )' $i > GOOUTPUT_BPonly/"$(basename "$i" .txt)_filtered.txt" ; done

# for plotting the GO (just doing based on log10 fold enrichment (FDR < 0.05), sorting based on p-value here) prepare the OUTPUT file so that matches will show the GO output on each line for each gene
for i in GOOUTPUT_BPonly/*_filtered.txt ; do
 sed 's/$/;/g' $i |
 awk '{ gsub(";", ";"$1";"$2";"$3";"$4";"$5";"$6";"$7";"$8";"$9"\n") } 1' |
 cut -f10 |
 awk '{ gsub(";", "\t") } 1' |
 sed '/^$/d' > GOOUTPUT_BPonly/"$(basename "$i" )2" ;
done

# remove first column then only display unique entries as final column displays no. of genes assigned to the term if you need it!
for i in GOOUTPUT_BPonly/*_filtered.txt2 ; do
 cut -f2-10 $i |
 sort -u | sort -k3,3 > GOOUTPUT_BPonly/"$(basename "$i" 2)3" ;
done

cat GOOUTPUT_BPonly/*_filtered.txt3 > GOOUTPUT_BPonly/GOOUTPUT_BPonly-rewiredsiteonly_cut_cat_GOOUTPUT_details_filtered.txt3


# #### Test if using the 1-to-1 orthologs only as background makes a difference to GO enrichment - IT DOESNT!!
# # Prepare genelist based on 1-to-1 orthologs only
# cut -f2 OGIDS.1to1.txt5 > Mz-1to1genelist.txt
# cut -f3 OGIDS.1to1.txt5 > Pn-1to1genelist.txt
# cut -f4 OGIDS.1to1.txt5 > Ab-1to1genelist.txt
# cut -f5 OGIDS.1to1.txt5 > Nb-1to1genelist.txt
# cut -f6 OGIDS.1to1.txt5 > On-1to1genelist.txt
#
# # Run GO enrichment
# mkdir GOOUTPUT_1to1BG_BPonly
#
# ml gcc
# ml zlib
# export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/tgac/software/testing/enrichAnalyzer/0.1/x86_64/lib:/tgac/software/testing/enrichAnalyzer/0.1/x86_64/lib2/
#
# /tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer Ab-cut_cat_GOINPUT.txt Ab-1to1genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Asbu_ 1 GOOUTPUT_1to1BG_BPonly/Ab-cut_cat_GOOUTPUT persg
# /tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer Mz-cut_cat_GOINPUT.txt Mz-1to1genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Meze_ 1 GOOUTPUT_1to1BG_BPonly/Mz-cut_cat_GOOUTPUT persg
# /tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer Pn-cut_cat_GOINPUT.txt Pn-1to1genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Puny_ 1 GOOUTPUT_1to1BG_BPonly/Pn-cut_cat_GOOUTPUT persg
# /tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer Nb-cut_cat_GOINPUT.txt Nb-1to1genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Nebr_ 1 GOOUTPUT_1to1BG_BPonly/Nb-cut_cat_GOOUTPUT persg
# /tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer On-cut_cat_GOINPUT.txt On-1to1genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Orni_ 1 GOOUTPUT_1to1BG_BPonly/On-cut_cat_GOOUTPUT persg
#
# # filter output (qval < 0.05)
# for i in GOOUTPUT_1to1BG_BPonly/*txt ; do awk '($4 < 0.05 )' $i > GOOUTPUT_1to1BG_BPonly/"$(basename "$i" .txt)_filtered.txt" ; done
#
# # for plotting the GO (just doing based on log10 fold enrichment (FDR < 0.05), sorting based on p-value here) prepare the OUTPUT file so that matches will show the GO output on each line for each gene
# for i in GOOUTPUT_1to1BG_BPonly/*_filtered.txt ; do
#  sed 's/$/;/g' $i |
#  awk '{ gsub(";", ";"$1";"$2";"$3";"$4";"$5";"$6";"$7";"$8";"$9"\n") } 1' |
#  cut -f10 |
#  awk '{ gsub(";", "\t") } 1' |
#  sed '/^$/d' > GOOUTPUT_1to1BG_BPonly/"$(basename "$i" )2" ;
# done
#
# # remove first column then only display unique entries as final column displays no. of genes assigned to the term if you need it!
# for i in GOOUTPUT_1to1BG_BPonly/*_filtered.txt2 ; do
#  cut -f2-10 $i |
#  sort -u | sort -k3,3 > GOOUTPUT_1to1BG_BPonly/"$(basename "$i" 2)3" ;
# done
#
# cat GOOUTPUT_1to1BG_BPonly/*_filtered.txt3 > GOOUTPUT_1to1BG_BPonly/GOOUTPUT_1to1BG_BPonly-rewiredsiteonly_cut_cat_GOOUTPUT_details_filtered.txt3


### B. run GO enrichment of the edges in each file
## ia. define your list of files
# 5 species, haplochromines + pairwise comparisons of TF-TG edges only
# TF switched and rewired
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_*-*.txt > TFGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_*vs*.txt | grep -v 'Cis' | grep -v 'Trans' >> TFGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_*vs*.txt | grep -v 'Cis' | grep -v 'Trans' >> TFGOfilelist

# TG switched and rewired
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_rewired_*.txt > TGGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_*vs*.txt | grep -v 'Cis' | grep -v Trans | grep -v reusage | grep -v rewired >> TGGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_*vs*.txt | grep -v 'Cis' | grep -v Trans | grep -v reusage | grep -v rewired >> TGGOfilelist

# cis-edges of TF/TG switched and rewired
# TF - cis
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-rewired_*-*.txt >> TFGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_Cis-*vs*.txt >> TFGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Cis-*vs*.txt >> TFGOfilelist
# TG - cis
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-rewired_*-*.txt >> TGGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_Cis-*vs*.txt >> TGGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Cis-*vs*.txt >> TGGOfilelist

# trans-edges of TF/TG switched and rewired
# TF - trans
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-rewired_*-*.txt >> TFGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW_Trans-*vs*.txt | grep -v 'Cis' | grep -v 'Trans' >> TFGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_Trans-*vs*.txt | grep -v 'Cis' | grep -v 'Trans' >> TFGOfilelist
# TG - trans
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-rewired_*-*.txt >> TGGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBhaploSW_Trans-*vs*.txt >> TGGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW_Trans-*vs*.txt >> TGGOfilelist


# Prepare gene names INPUT files
# first, cut the filename (col1) and OGID (col2)
for i in `cat TFTGGOfilelist` ; do
	awk '{print FILENAME,$2}' OFS='\t' $i | sed 's/Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-//g' > "$(basename "$i" .txt)_cut2.txt" ;
  awk '{print FILENAME,$3}' OFS='\t' $i | sed 's/Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-//g' > "$(basename "$i" .txt)_cut2.txt" ;
done

# second, merge same species (as in edge presence) cut files
for i in Mz Pn Ab Nb On ; do
  cat *_$i*cut2.txt *-${i}vs*cut2.txt > $i-cut2_cat.txt
done
rm *cut2.txt # remove all cut intermediate files
# third, prepare GOinput files - col1 is source file and col2 is hash-separated genes
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 Mz-cut2_cat.txt | cut -f1,3 | awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > Mz-cut2_cat_GOINPUT.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$3;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 Pn-cut2_cat.txt | cut -f1,3 | awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > Pn-cut2_cat_GOINPUT.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$4;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 Ab-cut2_cat.txt | cut -f1,3 | awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > Ab-cut2_cat_GOINPUT.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$5;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 Nb-cut2_cat.txt | cut -f1,3 | awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > Nb-cut2_cat_GOINPUT.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$6;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 On-cut2_cat.txt | cut -f1,3 | awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > On-cut2_cat_GOINPUT.txt

# Run GO enrichment
mkdir GOOUTPUT_BPonly/geneAandgeneB

ml gcc
ml zlib
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/tgac/software/testing/enrichAnalyzer/0.1/x86_64/lib:/tgac/software/testing/enrichAnalyzer/0.1/x86_64/lib2/

/tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer Ab-cut2_cat_GOINPUT.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Ab-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Asbu_ 1 GOOUTPUT_BPonly/geneAandgeneB/Ab-cut2_cat_GOOUTPUT persg
/tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer Mz-cut2_cat_GOINPUT.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Mz-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Meze_ 1 GOOUTPUT_BPonly/geneAandgeneB/Mz-cut2_cat_GOOUTPUT persg
/tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer Pn-cut2_cat_GOINPUT.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Pn-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Puny_ 1 GOOUTPUT_BPonly/geneAandgeneB/Pn-cut2_cat_GOOUTPUT persg
/tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer Nb-cut2_cat_GOINPUT.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Nb-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Nebr_ 1 GOOUTPUT_BPonly/geneAandgeneB/Nb-cut2_cat_GOOUTPUT persg
/tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer On-cut2_cat_GOINPUT.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/On-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Orni_ 1 GOOUTPUT_BPonly/geneAandgeneB/On-cut2_cat_GOOUTPUT persg

# filter output (qval < 0.05)
for i in GOOUTPUT_BPonly/geneAandgeneB/*txt ; do awk '($4 < 0.05 )' $i > GOOUTPUT_BPonly/geneAandgeneB/"$(basename "$i" .txt)_filtered.txt" ; done

# for plotting the GO (just doing based on log10 fold enrichment (FDR < 0.05), sorting based on p-value here) prepare the OUTPUT file so that matches will show the GO output on each line for each gene
for i in GOOUTPUT_BPonly/geneAandgeneB/*_filtered.txt ; do
 sed 's/$/;/g' $i |
 awk '{ gsub(";", ";"$1";"$2";"$3";"$4";"$5";"$6";"$7";"$8";"$9"\n") } 1' |
 cut -f10 |
 awk '{ gsub(";", "\t") } 1' |
 sed '/^$/d' > GOOUTPUT_BPonly/geneAandgeneB/"$(basename "$i" )2" ;
done

# remove first column then only display unique entries as final column displays no. of genes assigned to the term if you need it!
for i in GOOUTPUT_BPonly/geneAandgeneB/*_filtered.txt2 ; do
 cut -f2-10 $i |
 sort -u | sort -k3,3 > GOOUTPUT_BPonly/geneAandgeneB/"$(basename "$i" 2)3" ;
done

cat GOOUTPUT_BPonly/geneAandgeneB/*_filtered.txt3 > GOOUTPUT_BPonly/geneAandgeneB/GOOUTPUT_BPonly-allsites_cut_cat_GOOUTPUT_details_filtered.txt3

mkdir /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/matrix
mkdir /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/matrix/1to1only
cp -r GOOUTPUT_BPonly/ /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/matrix/1to1only
cp -r GOOUTPUT_BPonly/geneAandgeneB /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/matrix/1to1only/GOOUTPUT_BPonly/

# Copied all cat files above to local here: /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Edge_Attributes/matrix/1to1only/ #DONE
### then plotting /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Edge_Attributes/matrix/1to1only/rewiringgenes_GOenrichmentplots.R
### Created GO enrichment plots for separated comparisons (all 5 species, haplo and pairwise - geneA/B SW and cis and trans) > plots here: /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Manuscript/Figures/New/Supplementary/networks


# ii.	Can these be linked to traits of diversity?
# how many of your candidates are located in these

# First check how many candidates are in the starting 1to1 ortholog set
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"REMOVEME";}}' OGIDS.1to1.txt5 ../../Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt | grep -v "REMOVE" | cut -f1,10,17 # 73/132
# interesting candidates on which to focus:
  # OG346_0	cntn4	Fast_evolving_cichlids
  Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneAhaploSW.txt
  Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmodule_geneBSW.txt
  Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt:OG7539_0:OG346_0
Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt:OG1311_0:OG346_0
Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt:OG9894_0:OG346_0
Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_On-MzPnAbNb.txt:OG10760_0:OG346_0
Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt:OG10191_0:OG346_0
Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt:OG10319_0:OG346_0
Edge_Attributes_Collated4c.coexpr_promONLY.matrix3-geneAB1to1OGID-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt:OG9422_0:OG346_0
  # OG2764_0	foxp2	Fast_evolving_cichlids
  # OG2800_0	bmpr1aa	Fast_evolving_cichlids
  # OG8558_0	gdf10b	Fast_evolving_cichlids
  # OG1652_0	rh2	Opsin

# Looking at genes with non1to1 orthologs
cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/matrix

# OG1655_0	mz.gene.s12.95	NULL	ab.gene.s134.8	NULL	on.gene.LG20.398 rho
# Looking at pairwise comparisons of how many TF-TG edges are in common/different - particularly, if the riverines share more nodes and edges
grep -wiF 'OG1655_0' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.txt | wc -l # total 44 edges in core network of all three species
grep -wiF 'OG1655_0' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.txt | cut -f2,3 | awk '{OFS=RS;$1=$1}1' | sort -u | wc -l # total 45 nodes in core network of all three species
# Mz vs Ab
grep -wiF 'OG1655_0' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.txt | awk '$5==$7' | wc -l # 27 edges in common for Mz vs Ab
grep -wiF 'OG1655_0' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.txt | awk '$5==$7' | cut -f2,3 | awk '{OFS=RS;$1=$1}1' | sort -u | wc -l  # 28 nodes in common (includes rho) for Mz vs Ab
# Mz vs On
grep -wiF 'OG1655_0' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.txt | awk '$5==$9' | wc -l # 24 edges in common for Mz vs On
grep -wiF 'OG1655_0' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.txt | awk '$5==$9' | cut -f2,3 | awk '{OFS=RS;$1=$1}1' | sort -u | wc -l  # 25 nodes in common (includes rho) for Mz vs On
# Ab vs On
grep -wiF 'OG1655_0' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.txt | awk '$7==$9' | wc -l # 31 edges in common for Mz vs On
grep -wiF 'OG1655_0' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.txt | awk '$7==$9' | cut -f2,3 | awk '{OFS=RS;$1=$1}1' | sort -u | wc -l  # 32 nodes in common (includes rho) for Mz vs On





############################################################################################

##### Below is for all edges where, in non1to1 OGs, TG can be confirmed as absent from the genome via tblastx using orthologous genes ######
##### Determination of present NULL OGIDs was ran in script: /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/rewiring_files_DyNet_Marton/Rewiring_analysis.sh

############################################################################################

cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/matrix

# First, filter your large TF-TG edge table for present NULL OGIDs (excluding your candidate genes and all TFs)
matrix=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/matrix/Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.txt)
prnullogid=(/tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/matrix/MzPnAbNbOnGenome-BLAST_PresentNULLOGIDS-noCand-noTF.txt2)
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"KEEPME";}}' $prnullogid $matrix | grep 'KEEPME' | cut -f1-39 > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt # 843,168 lines left after removing PresentNULLOGIDS BUT retaining any candidate genes and TFs
#
# # ii. How many module switched genes (geneA and geneB, depending on source) are associated with interactions along the phylogeny > this can be plotted onto phylogeny

nano getmodswitch_alledges.sh

#!/bin/bash -e
#SBATCH -p tgac-short # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --mem 28000 # memory pool for all cores
#SBATCH -t 0-00:45 # time (D-HH:MM)
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address

# 1. Interactions present in all 5 species (consensus nodes)
#coexpr_promONLY - TF (geneA)
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$20==1 || $22==1 || $24==1 || $26==1 || $28==1 || $30==1 || $32==1 || $34==1 || $36==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_AllTFsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$20==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_MzPnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$22==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_MzAbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$24==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_MzNbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$26==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_MzOnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$28==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_PnAbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$30==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_PnNbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$32==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_PnOnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$34==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_AbNbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$36==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_AbOnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$38==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_NbOnTFsw.txt

#coexpr_promONLY - TG (geneB)
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$21==1 || $23==1 || $25==1 || $27==1 || $29==1 || $31==1 || $33==1 || $35==1 || $37==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_AllTGsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$21==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_MzPnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$23==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_MzAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$25==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_MzNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$27==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_MzOnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$29==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_PnAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$31==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_PnNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$33==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_PnOnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$35==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_AbNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$37==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_AbOnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$39==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_NbOnTGsw.txt
#
# 2. Interactions present in Nb, Ab, Pn, Mz ONLY
#coexpr_promONLY - TF (geneA)
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$20==1 || $22==1 || $24==1 || $28==1 || $30==1 || $34==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_AllTFsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$20==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_MzPnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$22==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_MzAbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$24==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_MzNbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$28==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_PnAbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$30==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_PnNbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$34==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_AbNbTFsw.txt

#coexpr_promONLY - TG (geneB)
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$21==1 || $23==1 || $25==1 || $29==1 || $31==1 || $35==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_AllTGsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$21==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_MzPnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$23==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_MzAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$25==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_MzNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$29==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_PnAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$31==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_PnNbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$35==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_AbNbTGsw.txt

# 3. Interactions present in Ab, Pn, Mz (haplochromines) ONLY
#coexpr_promONLY - TF (geneA)
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$20==1 || $22==1 || $28==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-AbPnMz_AllTFsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$20==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-AbPnMz_MzPnTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$22==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-AbPnMz_MzAbTFsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$28==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-AbPnMz_PnAbTFsw.txt

#coexpr_promONLY - TG (geneB)
# a. first, get all switches between all pairs
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$21==1 || $23==1 || $29==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-AbPnMz_AllTGsw.txt
# b. then, highlight the number of switches between pairs
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$21==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-AbPnMz_MzPnTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$23==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-AbPnMz_MzAbTGsw.txt
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$29==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-AbPnMz_PnAbTGsw.txt

# 4. Interactions present in Pn, Mz ONLY
#coexpr_promONLY - TF (geneA)
# a. get the switches between the single pair
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$20==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-PnMz_AllTFsw.txt

#coexpr_promONLY - TG (geneB)
# a. get the switches between the single pair
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$21==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-PnMz_AllTGsw.txt

# run the above
sbatch getmodswitch_alledges.sh # DONE


# 5. TF-TG interactions where both genes switched (along phylogeny) but found in same module as each other (cis)
# a. Interactions present in all 5 species (consensus nodes), any of the five species have TF-TG switched and foundin same module
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '(($20==1) && ($21==1)) || (($22==1) && ($23==1)) || (($24==1) && ($25==1)) || (($26==1) && ($27==1)) || (($28==1) && ($29==1)) || (($30==1) && ($31==1)) || (($32==1) && ($33==1)) || (($34==1) && ($35==1)) || (($36==1) && ($37==1)) || (($38==1) && ($39==1))' OFS='\t' | awk '$10==$15 || $11==$16 || $12==$17 || $13==$18 || $14==$19' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_AllTFTGswSameMod.txt #8363
# b. Interactions present in NbAbPnMz
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '(($20==1) && ($21==1)) || (($22==1) && ($23==1)) || (($24==1) && ($25==1)) || (($26==1) && ($27==1)) || (($28==1) && ($29==1)) || (($30==1) && ($31==1)) || (($32==1) && ($33==1)) || (($34==1) && ($35==1)) || (($36==1) && ($37==1))' OFS='\t' | awk '$10==$15 || $11==$16 || $12==$17 || $13==$18' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_AllTFTGswSameMod.txt #936
# c. Interactions present in AbPnMz
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '(($20==1) && ($21==1)) || (($22==1) && ($23==1)) || (($24==1) && ($25==1)) || (($26==1) && ($27==1)) || (($28==1) && ($29==1)) || (($30==1) && ($31==1)) || (($32==1) && ($33==1)) || (($34==1) && ($35==1))' OFS='\t' | awk '$10==$15 || $11==$16 || $12==$17' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-AbPnMz_AllTFTGswSameMod.txt #850
# d. Interactions present in PnMz
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '(($20==1) && ($21==1)) || (($22==1) && ($23==1)) || (($24==1) && ($25==1)) || (($26==1) && ($27==1)) || (($28==1) && ($29==1)) || (($30==1) && ($31==1)) || (($32==1) && ($33==1))' OFS='\t' | awk '$10==$15 || $11==$16' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-PnMz_AllTFTGswSameMod.txt #758

# 6. TF-TG interactions where both genes switched (along phylogeny) but found in different modules as each other (trans)
# a. Interactions present in all 5 species (consensus nodes), any of the five species have TF-TG switched and foundin same module
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '(($20==1) && ($21==1)) || (($22==1) && ($23==1)) || (($24==1) && ($25==1)) || (($26==1) && ($27==1)) || (($28==1) && ($29==1)) || (($30==1) && ($31==1)) || (($32==1) && ($33==1)) || (($34==1) && ($35==1)) || (($36==1) && ($37==1)) || (($38==1) && ($39==1))' OFS='\t' | awk '$10!=$15 || $11!=$16 || $12!=$17 || $13!=$18 || $14!=$19' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_AllTFTGswDiffMod.txt #23717
# b. Interactions present in NbAbPnMz
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '(($20==1) && ($21==1)) || (($22==1) && ($23==1)) || (($24==1) && ($25==1)) || (($26==1) && ($27==1)) || (($28==1) && ($29==1)) || (($30==1) && ($31==1)) || (($32==1) && ($33==1)) || (($34==1) && ($35==1)) || (($36==1) && ($37==1))' OFS='\t' | awk '$10!=$15 || $11!=$16 || $12!=$17 || $13!=$18' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_AllTFTGswDiffMod.txt #2998
# c. Interactions present in AbPnMz
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '(($20==1) && ($21==1)) || (($22==1) && ($23==1)) || (($24==1) && ($25==1)) || (($26==1) && ($27==1)) || (($28==1) && ($29==1)) || (($30==1) && ($31==1)) || (($32==1) && ($33==1)) || (($34==1) && ($35==1))' OFS='\t' | awk '$10!=$15 || $11!=$16 || $12!=$17' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-AbPnMz_AllTFTGswDiffMod.txt #3859
# d. Interactions present in PnMz
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '(($20==1) && ($21==1)) || (($22==1) && ($23==1)) || (($24==1) && ($25==1)) || (($26==1) && ($27==1)) || (($28==1) && ($29==1)) || (($30==1) && ($31==1)) || (($32==1) && ($33==1))' OFS='\t' | awk '$10!=$15 || $11!=$16' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-PnMz_AllTFTGswDiffMod.txt #3174


# total number of consensus edges present in those species only along the phylogeny
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | wc -l # OnNbAbPnMz
# coexpr_prom - 77223
awk '$5==1 && $6==1 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | wc -l # NbAbPnMz
# coexpr_prom - 17887
awk '$5==1 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | wc -l # AbPnMz
# coexpr_prom - 29035
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | wc -l # PnMz
# coexpr_prom - 20523

wc -l Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-*_All*sw.txt
## pull out numbers - where are expansions of switched TF/TG in consensus edges, remember, these are specific for those ancestral nodes, absent in the others
# 43042 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_AllTFsw.txt
# 4650 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_AllTFsw.txt
# 3583 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-AbPnMz_AllTFsw.txt
# 2787 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-PnMz_AllTFsw.txt
#
# 42665 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-OnNbAbPnMz_AllTGsw.txt
# 7565 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-NbAbPnMz_AllTGsw.txt
# 9333 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-AbPnMz_AllTGsw.txt
# 4713 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-PnMz_AllTGsw.txt

nano getmodedgeswitch_alledges.sh

#!/bin/bash -e
#SBATCH -p tgac-short # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --mem 28000 # memory pool for all cores
#SBATCH -t 0-00:45 # time (D-HH:MM)
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address

# iii.	How many module switched genes are also rewired in networks? > how many of these are associated with duplicated genes? If it is too many then a separate paper.
# In the main files, perform the same comparisons along the phylogeny (all 5 species, 4 species, 3 and 2) of
  # module switches in GeneA and GeneB (col20-39), this time though,
  # the edge needs to be absent in at least one of the comparison species (col5-9) and
  # at least one other edge with the same node (col2/3) must exist

#coexpr_promONLY - TF (geneA)
# a. first, get network switches (at least one '1' in cols 5-9), then, the module switch needs to be the same as an absent interaction (don't bother in scenarios when 0 in more than one species, make this species specific within the species you're comparing and cat)
awk '$5==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$20==1 || $22==1 || $24==1 || $26==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW2.txt #Mz requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$6==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$20==1 || $28==1 || $30==1 || $32==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW2.txt #Pn requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$7==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$22==1 || $28==1 || $34==1 || $36==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW2.txt #Ab requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$8==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$24==1 || $30==1 || $34==1 || $38==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW2.txt #Nb requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$26==1 || $32==1 || $36==1 || $38==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW2.txt #On requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
sort -u Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW2.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt
rm Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW2.txt

# b. Re-usage events linked to module assignment switches (edge presence in species, loss in some species and presence in a common ancestor/basal species in tree + switches vs basal species implies re-usage derived from switch)
# MzOn-PnAbNb (edge present in Mz and On, absent in 3 species, TF switched in Mz vs On and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$26==1' OFS='\t' | awk '$20==1 || $22==1 || $24==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_MzOn-PnAbNb.txt
# MzNb-PnAbOn (edge present in Mz and Nb, absent in 3 species, TF switched in Mz vs Nb and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$24==1' OFS='\t' | awk '$20==1 || $22==1 || $26==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_MzNb-PnAbOn.txt
# MzAb-PnNbOn (edge present in Mz and Ab, absent in 3 species, TF switched in Mz vs Ab and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in Ab (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$22==1' OFS='\t' | awk '$20==1 || $24==1 || $26==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_MzAb-PnNbOn.txt
# MzPn-AbNbOn (edge present in Mz and Pn, absent in 3 species, TF switched in Mz vs Pn and Mz vs any of other 3 species) - this implies re-usage of an MzPn ancestral state but re-purpose in Mz derived from TF module assignment switch
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$20==1' OFS='\t' | awk '$22==1 || $24==1 || $26==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_MzPn-AbNbOn.txt

# PnOn-MzAbNb (edge present in Pn and On, absent in 3 species, TF switched in Pn vs On and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$32==1' OFS='\t' | awk '$20==1 || $28==1 || $30==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_PnOn-MzAbNb.txt
# PnNb-MzAbOn (edge present in Pn and Nb, absent in 3 species, TF switched in Pn vs Nb and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$30==1' OFS='\t' | awk '$20==1 || $28==1 || $32==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_PnNb-MzAbOn.txt
# PnAb-MzNbOn (edge present in Pn and Ab, absent in 3 species, TF switched in Pn vs Ab and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in Ab (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$28==1' OFS='\t' | awk '$20==1 || $30==1 || $32==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_PnAb-MzNbOn.txt
# PnMz-AbNbOn (edge present in Pn and Mz, absent in 3 species, TF switched in Pn vs Mz and Pn vs any of other 3 species) - this implies re-usage of an PnMz ancestral state but re-purpose in Pn derived from TF module assignment switch
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$20==1' OFS='\t' | awk '$28==1 || $30==1 || $32==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_PnMz-AbNbOn.txt

# AbOn-MzPnNb (edge present in Ab and On, absent in 3 species, TF switched in Ab vs On and Ab vs any of other 3 species) - this implies re-usage in Ab of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$36==1' OFS='\t' | awk '$22==1 || $28==1 || $34==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_AbOn-MzPnNb.txt
# AbNb-MzPnOn (edge present in Ab and Nb, absent in 3 species, TF switched in Ab vs Nb and Ab vs any of other 3 species) - this implies re-usage in Ab of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$34==1' OFS='\t' | awk '$22==1 || $28==1 || $36==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_AbNb-MzPnOn.txt
# AbPn-MzNbOn (edge present in Ab and Pn, absent in 3 species, TF switched in Ab vs Pn and Ab vs any of other 3 species) - this implies re-usage of an AbPn ancestral state (haplochromine) but re-purpose in Ab derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$28==1' OFS='\t' | awk '$22==1 || $34==1 || $36==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_AbPn-MzNbOn.txt
# AbMz-PnNbOn (edge present in Ab and Mz, absent in 3 species, TF switched in Ab vs Mz and Ab vs any of other 3 species) - this implies re-usage of an AbMz ancestral state (haplochromine) but re-purpose in Ab derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$22==1' OFS='\t' | awk '$28==1 || $34==1 || $36==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_AbMz-PnNbOn.txt

# NbOn-MzPnAb (edge present in Nb and On, absent in 3 species, TF switched in Nb vs On and Nb vs any of other 3 species) - this implies re-usage in Nb of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$38==1' OFS='\t' | awk '$24==1 || $30==1 || $34==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_NbOn-MzPnAb.txt
# NbAb-MzPnOn (edge present in Nb and Ab, absent in 3 species, TF switched in Nb vs Ab and Nb vs any of other 3 species) - this implies re-usage of an NbAb ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$34==1' OFS='\t' | awk '$24==1 || $30==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_NbAb-MzPnOn.txt
# NbPn-MzAbOn (edge present in Nb and Pn, absent in 3 species, TF switched in Nb vs Pn and Nb vs any of other 3 species) - this implies re-usage of an NbPn ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$30==1' OFS='\t' | awk '$24==1 || $34==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_NbPn-MzAbOn.txt
# NbMz-PnAbOn (edge present in Nb and Mz, absent in 3 species, TF switched in Nb vs Mz and Nb vs any of other 3 species) - this implies re-usage of an NbMz ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$24==1' OFS='\t' | awk '$30==1 || $34==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_NbMz-PnAbOn.txt

# OnNb-MzPnAb (edge present in On and Nb, absent in 3 species, TF switched in On vs Nb and On vs any of other 3 species) - this implies re-usage of an OnNb ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$38==1' OFS='\t' | awk '$26==1 || $32==1 || $36==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_OnNb-MzPnAb.txt
# OnAb-MzPnNb (edge present in On and Ab, absent in 3 species, TF switched in On vs Ab and On vs any of other 3 species) - this implies re-usage of an OnAb ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$36==1' OFS='\t' | awk '$26==1 || $32==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_OnAb-MzPnNb.txt
# OnPn-MzAbNb (edge present in On and Pn, absent in 3 species, TF switched in On vs Pn and On vs any of other 3 species) - this implies re-usage of an OnPn ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$32==1' OFS='\t' | awk '$26==1 || $36==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_OnPn-MzAbNb.txt
# OnMz-PnAbNb (edge present in On and Mz, absent in 3 species, TF switched in On vs Mz and On vs any of other 3 species) - this implies re-usage of an OnMz ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt | awk '$26==1' OFS='\t' | awk '$32==1 || $36==1 || $38==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_reusage_OnMz-PnAbNb.txt

# c. Re-wiring events linked to module assignment switches (edge present in only one species + switching in any of the other species and then check for reocurring geneA nodes, so that there will be an edge containing that node in the other species)
# Mz-PnAbNbOn (edge present in Mz, absent in other species and TF switched vs at least any one of the other species)
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$20==1 || $22==1 || $24==1 || $26==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_rewired_Mz-PnAbNbOn.txt #37590/843168
# Pn-MzAbNbOn (edge present in Pn, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$20==1 || $28==1 || $30==1 || $32==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt #20716/843168
# Ab-MzPnNbOn (edge present in Ab, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$22==1 || $28==1 || $34==1 || $36==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt #29445/843168
# Nb-MzPnAbOn (edge present in Nb, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$24==1 || $30==1 || $34==1 || $38==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt #25110/843168
# On-MzPnAbNb (edge present in On, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$26==1 || $32==1 || $36==1 || $38==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_rewired_On-MzPnAbNb.txt #37560/843168


## get number of TFs that are state changed and rewired in above edges
cut -f2 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | sort -u | wc -l # 783 TFs
cut -f2 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_rewired_Mz-PnAbNbOn.txt | sort -u | wc -l # 123/783 = 16%
cut -f2 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_rewired_Pn-MzAbNbOn.txt | sort -u | wc -l # 109/783 = 14%
cut -f2 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_rewired_Ab-MzPnNbOn.txt | sort -u | wc -l # 133/783 = 17%
cut -f2 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_rewired_Nb-MzPnAbOn.txt | sort -u | wc -l # 100/783 = 13%
cut -f2 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_rewired_On-MzPnAbNb.txt | sort -u | wc -l # 140/783 = 18%



# d. then, highlight the number of switches between pairs (pairwise-specific rewiring events) irrespective of other species - this can be represented as a matrix
# Mz-Pn (edge present in Mz, absent in Pn, TF switched in Mz vs Pn)
awk '$5==1 && $6==0 && $20==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_MzvsPn.txt
# Pn-Mz
awk '$5==0 && $6==1 && $20==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_PnvsMz.txt
# Mz-Ab
awk '$5==1 && $7==0 && $22==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_MzvsAb.txt
# Ab-Mz
awk '$5==0 && $7==1 && $22==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_AbvsMz.txt
# Mz-Nb
awk '$5==1 && $8==0 && $24==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_MzvsNb.txt
# Nb-Mz
awk '$5==0 && $8==1 && $24==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_NbvsMz.txt
# Mz-On
awk '$5==1 && $9==0 && $26==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_MzvsOn.txt
# On-Mz
awk '$5==0 && $9==1 && $26==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_OnvsMz.txt
# Pn-Ab
awk '$6==1 && $7==0 && $28==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_PnvsAb.txt
# Ab-Pn
awk '$6==0 && $7==1 && $28==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_AbvsPn.txt
# Pn-Nb
awk '$6==1 && $8==0 && $30==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_PnvsNb.txt
# Nb-Pn
awk '$6==0 && $8==1 && $30==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_NbvsPn.txt
# Pn-On
awk '$6==1 && $9==0 && $32==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_PnvsOn.txt
# On-Pn
awk '$6==0 && $9==1 && $32==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_OnvsPn.txt
# Ab-Nb
awk '$7==1 && $8==0 && $34==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_AbvsNb.txt
# Nb-Ab
awk '$7==0 && $8==1 && $34==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_NbvsAb.txt
# Ab-On
awk '$7==1 && $9==0 && $36==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_AbvsOn.txt
# On-Ab
awk '$7==0 && $9==1 && $36==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_OnvsAb.txt
# Nb-On
awk '$8==1 && $9==0 && $38==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_NbvsOn.txt
# On-Nb
awk '$8==0 && $9==1 && $38==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_OnvsNb.txt
# get total number of pairwise rows
wc -l Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_*.txt > coexpr_geneApairwiseSW_alledges_wc
# 24274 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_MzvsPn.txt
# 16918 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_MzvsAb.txt
# 58403 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_MzvsNb.txt
# 54572 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_MzvsOn.txt
#
# 13366 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_PnvsMz.txt
# 14921 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_PnvsAb.txt
# 24541 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_PnvsNb.txt
# 38990 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_PnvsOn.txt
#
# 19011 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_AbvsMz.txt
# 23462 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_AbvsPn.txt
# 39940 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_AbvsNb.txt
# 50630 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_AbvsOn.txt
#
# 34010 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_NbvsMz.txt
# 15732 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_NbvsPn.txt
# 28821 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_NbvsAb.txt
# 40722 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_NbvsOn.txt
#
# 61055 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_OnvsMz.txt
# 36911 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_OnvsPn.txt
# 44044 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_OnvsAb.txt
# 67059 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_OnvsNb.txt


# e. then, highlight the number of switches in the haplochromines specifically (haplochromine-specific rewiring events)
# Create another main table from which to work
# for this, the edge needs to be present in any of the haplochromines (Mz || Pn || Ab) AND,
# also any of the ancestor (Nb || On) to be rewired in the haplochromines AND,
# the col2/col3 node needs to be present as other edges
awk '$5==1 || $6==1 || $7==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$8==1 || $9==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneAhaploSW.txt # 502403
# Mz-PnAb (edge present in Mz, absent in Pn and Ab, TF switched in Mz vs Pn and Mz vs Ab)
awk '$5==1 && $6==0 && $7==0 && $20==1 && $22==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneAhaploSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneAhaploSW_MzvsPnAb.txt
# Pn-MzAb
awk '$5==0 && $6==1 && $7==0 && $20==1 && $28==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneAhaploSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneAhaploSW_PnvsMzAb.txt
# Ab-MzPn
awk '$5==0 && $6==0 && $7==1 && $22==1 && $28==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneAhaploSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneAhaploSW_AbvsMzPn.txt
# get total numbers
wc -l Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneAhaploSW_*.txt > coexpr_geneAhaploSW_alledges_wc
# 1382 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneAhaploSW_MzvsPnAb.txt
# 2393 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneAhaploSW_PnvsMzAb.txt
# 4631 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneAhaploSW_AbvsMzPn.txt

#coexpr_promONLY - TG (geneB)
# a. first, get network switches (at least one '1' in cols 5-9), then, the module switch needs to be the same as an absent interaction (don't bother in scenarios when 0 in more than one species, make this species specific within the species you're comparing and cat)
awk '$5==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$21==1 || $23==1 || $25==1 || $27==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW2.txt #Mz requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$6==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$21==1 || $29==1 || $31==1 || $33==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW2.txt #Pn requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$7==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$23==1 || $29==1 || $35==1 || $37==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW2.txt #Ab requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$8==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$25==1 || $31==1 || $35==1 || $39==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW2.txt #Nb requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
awk '$9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$27==1 || $33==1 || $37==1 || $39==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$2]++;if (count[$2] == 1) first[$2] = $0;if (count[$2] == 2) print first[$2];if (count[$2] > 1)print}' >> Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW2.txt #On requires at least one module switch, then remove lines where col2 does not appear again (shows switched network interactions)
sort -u Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW2.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt
rm Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW2.txt

# b. Re-usage events linked to module assignment switches (edge presence in species, loss in some species and presence in a common ancestor/basal species in tree + switches vs basal species implies re-usage derived from switch)
# MzOn-PnAbNb (edge present in Mz and On, absent in 3 species, TF switched in Mz vs On and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$27==1' OFS='\t' | awk '$21==1 || $23==1 || $25==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_MzOn-PnAbNb.txt
# MzNb-PnAbOn (edge present in Mz and Nb, absent in 3 species, TF switched in Mz vs Nb and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$25==1' OFS='\t' | awk '$21==1 || $23==1 || $27==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_MzNb-PnAbOn.txt
# MzAb-PnNbOn (edge present in Mz and Ab, absent in 3 species, TF switched in Mz vs Ab and Mz vs any of other 3 species) - this implies re-usage in Mz of edge also present in Ab (and not other species) derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$23==1' OFS='\t' | awk '$21==1 || $25==1 || $27==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_MzAb-PnNbOn.txt
# MzPn-AbNbOn (edge present in Mz and Pn, absent in 3 species, TF switched in Mz vs Pn and Mz vs any of other 3 species) - this implies re-usage of an MzPn ancestral state but re-purpose in Mz derived from TF module assignment switch
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$21==1' OFS='\t' | awk '$23==1 || $25==1 || $27==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_MzPn-AbNbOn.txt

# PnOn-MzAbNb (edge present in Pn and On, absent in 3 species, TF switched in Pn vs On and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$33==1' OFS='\t' | awk '$21==1 || $29==1 || $31==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_PnOn-MzAbNb.txt
# PnNb-MzAbOn (edge present in Pn and Nb, absent in 3 species, TF switched in Pn vs Nb and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$31==1' OFS='\t' | awk '$21==1 || $29==1 || $33==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_PnNb-MzAbOn.txt
# PnAb-MzNbOn (edge present in Pn and Ab, absent in 3 species, TF switched in Pn vs Ab and Pn vs any of other 3 species) - this implies re-usage in Pn of edge also present in Ab (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$29==1' OFS='\t' | awk '$21==1 || $31==1 || $33==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_PnAb-MzNbOn.txt
# PnMz-AbNbOn (edge present in Pn and Mz, absent in 3 species, TF switched in Pn vs Mz and Pn vs any of other 3 species) - this implies re-usage of an PnMz ancestral state but re-purpose in Pn derived from TF module assignment switch
awk '$5==1 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$21==1' OFS='\t' | awk '$29==1 || $31==1 || $33==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_PnMz-AbNbOn.txt

# AbOn-MzPnNb (edge present in Ab and On, absent in 3 species, TF switched in Ab vs On and Ab vs any of other 3 species) - this implies re-usage in Ab of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$37==1' OFS='\t' | awk '$23==1 || $29==1 || $35==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_AbOn-MzPnNb.txt
# AbNb-MzPnOn (edge present in Ab and Nb, absent in 3 species, TF switched in Ab vs Nb and Ab vs any of other 3 species) - this implies re-usage in Ab of edge also present in Nb (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$35==1' OFS='\t' | awk '$23==1 || $29==1 || $37==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_AbNb-MzPnOn.txt
# AbPn-MzNbOn (edge present in Ab and Pn, absent in 3 species, TF switched in Ab vs Pn and Ab vs any of other 3 species) - this implies re-usage of an AbPn ancestral state (haplochromine) but re-purpose in Ab derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$29==1' OFS='\t' | awk '$23==1 || $35==1 || $37==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_AbPn-MzNbOn.txt
# AbMz-PnNbOn (edge present in Ab and Mz, absent in 3 species, TF switched in Ab vs Mz and Ab vs any of other 3 species) - this implies re-usage of an AbMz ancestral state (haplochromine) but re-purpose in Ab derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$23==1' OFS='\t' | awk '$29==1 || $35==1 || $37==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_AbMz-PnNbOn.txt

# NbOn-MzPnAb (edge present in Nb and On, absent in 3 species, TF switched in Nb vs On and Nb vs any of other 3 species) - this implies re-usage in Nb of edge also present in On (and not other species) derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$39==1' OFS='\t' | awk '$25==1 || $31==1 || $35==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_NbOn-MzPnAb.txt
# NbAb-MzPnOn (edge present in Nb and Ab, absent in 3 species, TF switched in Nb vs Ab and Nb vs any of other 3 species) - this implies re-usage of an NbAb ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$35==1' OFS='\t' | awk '$25==1 || $31==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_NbAb-MzPnOn.txt
# NbPn-MzAbOn (edge present in Nb and Pn, absent in 3 species, TF switched in Nb vs Pn and Nb vs any of other 3 species) - this implies re-usage of an NbPn ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$31==1' OFS='\t' | awk '$25==1 || $35==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_NbPn-MzAbOn.txt
# NbMz-PnAbOn (edge present in Nb and Mz, absent in 3 species, TF switched in Nb vs Mz and Nb vs any of other 3 species) - this implies re-usage of an NbMz ancestral state but re-purpose in Nb derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$25==1' OFS='\t' | awk '$31==1 || $35==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_NbMz-PnAbOn.txt

# OnNb-MzPnAb (edge present in On and Nb, absent in 3 species, TF switched in On vs Nb and On vs any of other 3 species) - this implies re-usage of an OnNb ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$39==1' OFS='\t' | awk '$27==1 || $33==1 || $37==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_OnNb-MzPnAb.txt
# OnAb-MzPnNb (edge present in On and Ab, absent in 3 species, TF switched in On vs Ab and On vs any of other 3 species) - this implies re-usage of an OnAb ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$37==1' OFS='\t' | awk '$27==1 || $33==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_OnAb-MzPnNb.txt
# OnPn-MzAbNb (edge present in On and Pn, absent in 3 species, TF switched in On vs Pn and On vs any of other 3 species) - this implies re-usage of an OnPn ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$33==1' OFS='\t' | awk '$27==1 || $37==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_OnPn-MzAbNb.txt
# OnMz-PnAbNb (edge present in On and Mz, absent in 3 species, TF switched in On vs Mz and On vs any of other 3 species) - this implies re-usage of an OnMz ancestral state but re-purpose in On derived from TF module assignment switch
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt | awk '$27==1' OFS='\t' | awk '$33==1 || $37==1 || $39==1' OFS='\t' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_reusage_OnMz-PnAbNb.txt

# c. Re-wiring events linked to module assignment switches (edge present in only one species + switching in any of the other species and then check for reocurring geneA nodes, so that there will be an edge containing that node in the other species)
# Mz-PnAbNbOn (edge present in Mz, absent in other species and TG switched vs at least any one of the other species)
awk '$5==1 && $6==0 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$21==1 || $23==1 || $25==1 || $27==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_rewired_Mz-PnAbNbOn.txt
# Pn-MzAbNbOn (edge present in Pn, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==1 && $7==0 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$21==1 || $29==1 || $31==1 || $33==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_rewired_Pn-MzAbNbOn.txt
# Ab-MzPnNbOn (edge present in Ab, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==1 && $8==0 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$23==1 || $29==1 || $35==1 || $37==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_rewired_Ab-MzPnNbOn.txt
# Nb-MzPnAbOn (edge present in Nb, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==0 && $8==1 && $9==0' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$25==1 || $31==1 || $35==1 || $39==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_rewired_Nb-MzPnAbOn.txt
# On-MzPnAbNb (edge present in On, absent in other species and TF switched vs at least any one of the other species)
awk '$5==0 && $6==0 && $7==0 && $8==0 && $9==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$27==1 || $33==1 || $37==1 || $39==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_rewired_On-MzPnAbNb.txt

# d. then, highlight the number of switches between pairs
# Mz-Pn (absent edge in Mz, present in Pn, TF switched in Mz vs Pn)
# Mz-Pn (edge present in Mz, absent in Pn, TF switched in Mz vs Pn)
awk '$5==1 && $6==0 && $21==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_MzvsPn.txt
# Pn-Mz
awk '$5==0 && $6==1 && $21==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_PnvsMz.txt
# Mz-Ab
awk '$5==1 && $7==0 && $23==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_MzvsAb.txt
# Ab-Mz
awk '$5==0 && $7==1 && $23==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_AbvsMz.txt
# Mz-Nb
awk '$5==1 && $8==0 && $25==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_MzvsNb.txt
# Nb-Mz
awk '$5==0 && $8==1 && $25==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_NbvsMz.txt
# Mz-On
awk '$5==1 && $9==0 && $27==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_MzvsOn.txt
# On-Mz
awk '$5==0 && $9==1 && $27==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_OnvsMz.txt
# Pn-Ab
awk '$6==1 && $7==0 && $29==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_PnvsAb.txt
# Ab-Pn
awk '$6==0 && $7==1 && $29==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_AbvsPn.txt
# Pn-Nb
awk '$6==1 && $8==0 && $31==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_PnvsNb.txt
# Nb-Pn
awk '$6==0 && $8==1 && $31==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_NbvsPn.txt
# Pn-On
awk '$6==1 && $9==0 && $33==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_PnvsOn.txt
# On-Pn
awk '$6==0 && $9==1 && $33==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_OnvsPn.txt
# Ab-Nb
awk '$7==1 && $8==0 && $35==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_AbvsNb.txt
# Nb-Ab
awk '$7==0 && $8==1 && $35==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_NbvsAb.txt
# Ab-On
awk '$7==1 && $9==0 && $37==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_AbvsOn.txt
# On-Ab
awk '$7==0 && $9==1 && $37==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_OnvsAb.txt
# Nb-On
awk '$8==1 && $9==0 && $39==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_NbvsOn.txt
# On-Nb
awk '$8==0 && $9==1 && $39==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_OnvsNb.txt

# get total number of pairwise rows
wc -l Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_*.txt > coexpr_geneBpairwiseSW_alledges_wc
# 28788 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_MzvsAb.txt
# 51215 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_MzvsNb.txt
# 55836 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_MzvsOn.txt
# 27371 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_MzvsPn.txt
#
# 19720 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_PnvsAb.txt
# 25634 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_PnvsMz.txt
# 36548 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_PnvsNb.txt
# 46224 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_PnvsOn.txt
#
# 31541 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_AbvsMz.txt
# 44302 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_AbvsNb.txt
# 52469 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_AbvsOn.txt
# 23086 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_AbvsPn.txt
#
# 24365 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_NbvsAb.txt
# 30656 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_NbvsMz.txt
# 34511 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_NbvsOn.txt
# 21405 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_NbvsPn.txt
#
# 46526 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_OnvsAb.txt
# 53108 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_OnvsMz.txt
# 59512 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_OnvsNb.txt
# 47470 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_OnvsPn.txt


# e. then, highlight the number of switches in the haplochromines specifically (haplochromine-specific rewiring events)
# Create another main table from which to work
# for this, the edge needs to be present in any of the haplochromines (Mz || Pn || Ab) AND,
# also any of the ancestor (Nb || On) to be rewired in the haplochromines AND,
# the col2/col3 node needs to be present as other edges
awk '$5==1 || $6==1 || $7==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS.txt | awk '$8==1 || $9==1' OFS='\t' | awk 'BEGIN { FS = "\t" }{count[$3]++;if (count[$3] == 1) first[$3] = $0;if (count[$3] == 2) print first[$3];if (count[$3] > 1)print}' > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBhaploSW.txt
# Mz-PnAb (edge present in Mz, absent in Pn and Ab, TF switched in Mz vs Pn and Mz vs Ab)
awk '$5==1 && $6==0 && $7==0 && $21==1 && $23==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBhaploSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBhaploSW_MzvsPnAb.txt
# Pn-MzAb
awk '$5==0 && $6==1 && $7==0 && $21==1 && $29==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBhaploSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBhaploSW_PnvsMzAb.txt
# Ab-MzPn
awk '$5==0 && $6==0 && $7==1 && $23==1 && $29==1' OFS='\t' Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBhaploSW.txt > Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBhaploSW_AbvsMzPn.txt
# get total numbers
wc -l Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBhaploSW_*.txt > coexpr_geneBhaploSW_alledges_wc
# 3455 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBhaploSW_MzvsPnAb.txt
# 2733 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBhaploSW_PnvsMzAb.txt
# 3158 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBhaploSW_AbvsMzPn.txt

# run the above
sbatch getmodedgeswitch_alledges.sh # DONE


## GO enrichment of above
# 5 species, haplochromines + pairwise comparisons of TF-TG edges only

# TF switched and rewired
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_rewired_*-*.txt > TFGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmoduleSW_*vs*.txt >> TFGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneAhaploSW_*vs*.txt >> TFGOfilelist

# TG switched and rewired
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_rewired_*.txt > TGGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBSW_*vs*.txt | grep -v reusage | grep -v rewired >> TGGOfilelist
ls -1 Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.filteredPresentNULLOGIDS-networkandmodule_geneBhaploSW_*vs*.txt | grep -v reusage | grep -v rewired >> TGGOfilelist

# Prepare gene names INPUT files
# first, cut the filename (col1) and OGID (col2)
for i in `cat TFGOfilelist` ; do
	awk '{print FILENAME,$2}' OFS='\t' $i | sed 's/Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.//g' | sort -u > "$(basename "$i" .txt)_cut.txt" ;
done

for i in `cat TGGOfilelist` ; do
	awk '{print FILENAME,$3}' OFS='\t' $i | sed 's/Edge_Attributes_Collated4c.coexpr_promONLY.matrix3.//g' | sort -u > "$(basename "$i" .txt)_cut.txt" ;
done

# second, merge same species (as in edge presence) cut files
for i in Mz Pn Ab Nb On ; do
  cat *_$i*cut.txt *_${i}vs*_cut.txt > $i-cut_cat.txt
done
rm *cut.txt # remove all cut intermediate files

# third, prepare GOinput files - col1 is source file and col2 is hash-separated genes
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.txt5 Mz-cut_cat.txt | cut -f1,3 | awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > Mz-cut_cat_GOINPUT.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$3;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.txt5 Pn-cut_cat.txt | cut -f1,3 | awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > Pn-cut_cat_GOINPUT.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$4;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.txt5 Ab-cut_cat.txt | cut -f1,3 | awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > Ab-cut_cat_GOINPUT.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$5;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.txt5 Nb-cut_cat.txt | cut -f1,3 | awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > Nb-cut_cat_GOINPUT.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$6;next}{if(a[$2]){print $0,a[$2];}else{print $0,"REMOVEME";}}' OGIDS.txt5 On-cut_cat.txt | cut -f1,3 | awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > On-cut_cat_GOINPUT.txt

# Run GO enrichment
mkdir GOOUTPUT_BPonly

ml gcc
ml zlib
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/tgac/software/testing/enrichAnalyzer/0.1/x86_64/lib:/tgac/software/testing/enrichAnalyzer/0.1/x86_64/lib2/

/tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer Ab-cut_cat_GOINPUT.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Ab-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Asbu_ 1 GOOUTPUT_BPonly/Ab-cut_cat_GOOUTPUT persg
/tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer Mz-cut_cat_GOINPUT.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Mz-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Meze_ 1 GOOUTPUT_BPonly/Mz-cut_cat_GOOUTPUT persg
/tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer Pn-cut_cat_GOINPUT.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Pn-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Puny_ 1 GOOUTPUT_BPonly/Pn-cut_cat_GOOUTPUT persg
/tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer Nb-cut_cat_GOINPUT.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Nb-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Nebr_ 1 GOOUTPUT_BPonly/Nb-cut_cat_GOOUTPUT persg
/tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer On-cut_cat_GOINPUT.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/On-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Orni_ 1 GOOUTPUT_BPonly/On-cut_cat_GOOUTPUT persg

# filter output (qval < 0.05)
for i in GOOUTPUT_BPonly/*txt ; do awk '($4 < 0.05 )' $i > GOOUTPUT_BPonly/"$(basename "$i" .txt)_filtered.txt" ; done

# for plotting the GO (just doing based on log10 fold enrichment (FDR < 0.05), sorting based on p-value here) prepare the OUTPUT file so that matches will show the GO output on each line for each gene
for i in GOOUTPUT_BPonly/*_filtered.txt ; do
 sed 's/$/;/g' $i |
 awk '{ gsub(";", ";"$1";"$2";"$3";"$4";"$5";"$6";"$7";"$8";"$9"\n") } 1' |
 cut -f10 |
 awk '{ gsub(";", "\t") } 1' |
 sed '/^$/d' > GOOUTPUT_BPonly/"$(basename "$i" )2" ;
done

# remove first column then only display unique entries as final column displays no. of genes assigned to the term if you need it!
for i in GOOUTPUT_BPonly/*_filtered.txt2 ; do
 cut -f2-10 $i |
 sort -u | sort -k3,3 > GOOUTPUT_BPonly/"$(basename "$i" 2)3" ;
done

cat GOOUTPUT_BPonly/*_filtered.txt3 > GOOUTPUT_BPonly/GOOUTPUT_BPonly-rewiredsiteonly_cut_cat_GOOUTPUT_details_filtered.txt3

# mkdir /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/matrix
# mkdir /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/matrix/1to1only
cp -r GOOUTPUT_BPonly/ /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/matrix/

# Copied all cat files above to local here: /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Edge_Attributes/matrix/1to1only/ #DONE
### then plotting /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Edge_Attributes/matrix/rewiringgenes_GOenrichmentplots.R
### Created GO enrichment plots for separated comparisons (all 5 species, haplo and pairwise - geneA/B SW) > plots here: /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Manuscript/Figures/New/Supplementary/networks/alledges


#### ##### ##### May 2019 Addressing Nature reviewer comments #### ##### #####

cd ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/
mkdir May2019_ReviewerComments
cd ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments

## 1.1a. are TFs with similar fold motif enrichment across taxa more stable (no state change) than TFs with high degree of variation in the fold enrichment across taxa?
mkdir 1a.TFenrich-statechange_corr
cd 1a.TFenrich-statechange_corr

### NOTE: As of 13/08/2019 - ran the analysis below but sushmita is running different analysis instead where:
# plot the scatter plot of fold-enrichment of a TF vs its expression level in each species.
# If fold enrichment varies with expression, we can argue if the variation can lead to regulatory rewiring. Even if it does not it is interesting, because it could be because the Targets (edges) change.
# A regulator might not change its expression but targets change.

# She prepared other required plots (Top5TF_scatter.pdf)
# She also prepared text files (*_perTFCC.txt) for the correlation values for each motif, across all tissues
# From this, create Fig. S-R1f: heatmap matrix for the correlation values for each motif, across all tissues
# She also shared merged_q_exp_with_header.txt that has:
  # 3rd to 8th columns are -log(qval) where qval was from the file you shared.
  # The remaining are species specific expression values. These are zero-meaned per species which was the input to Arboretum and per-gene greedy network inference.
# In unix, prepared six tissue-specific files where the correlation is mapped > *_perTFCC_mapped.txt
cd /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Manuscript/Nature_submission/Reviewer_comments/srfigs/motif_exp_divanalysis/results

# Output structure
# 0: Cluster_TF; 1-5: each species motif enrichment (-log_qval); 6-10: zero-meaned tissue expression in five species; 11: correlation
printf 'Cluster_TF\tOGID\tMz_q\tPn_q\tAb_q\tNb_q\tOn_q\tMz_Br\tPn_Br\tAb_Br\tNb_Br\tOn_Br\tPearson_Correlation\n' > Br_colheader
printf 'Cluster_TF\tOGID\tMz_q\tPn_q\tAb_q\tNb_q\tOn_q\tMz_Ey\tPn_Ey\tAb_Ey\tNb_Ey\tOn_Ey\tPearson_Correlation\n' > Ey_colheader
printf 'Cluster_TF\tOGID\tMz_q\tPn_q\tAb_q\tNb_q\tOn_q\tMz_Ht\tPn_Ht\tAb_Ht\tNb_Ht\tOn_Ht\tPearson_Correlation\n' > Ht_colheader
printf 'Cluster_TF\tOGID\tMz_q\tPn_q\tAb_q\tNb_q\tOn_q\tMz_Kd\tPn_Kd\tAb_Kd\tNb_Kd\tOn_Kd\tPearson_Correlation\n' > Kd_colheader
printf 'Cluster_TF\tOGID\tMz_q\tPn_q\tAb_q\tNb_q\tOn_q\tMz_Ms\tPn_Ms\tAb_Ms\tNb_Ms\tOn_Ms\tPearson_Correlation\n' > Ms_colheader
printf 'Cluster_TF\tOGID\tMz_q\tPn_q\tAb_q\tNb_q\tOn_q\tMz_Ts\tPn_Ts\tAb_Ts\tNb_Ts\tOn_Ts\tPearson_Correlation\n' > Ts_colheader

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTMAPPED";}}' merged_q_exp_with_header.txt Br_perTFCC.txt | awk '{print $1,$4,$5,$6,$7,$8,$9,$22,$28,$16,$34,$10,$2}' OFS='\t' | sort -k1,1 | sed 's/Cluster/Module/g' > Br_perTFCC.txtA
cat Br_colheader Br_perTFCC.txtA > Br_perTFCC_mapped.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTMAPPED";}}' merged_q_exp_with_header.txt Ey_perTFCC.txt | awk '{print $1,$4,$5,$6,$7,$8,$9,$23,$29,$17,$35,$11,$2}' OFS='\t' | sort -k1,1 | sed 's/Cluster/Module/g' > Ey_perTFCC.txtA
cat Ey_colheader Ey_perTFCC.txtA > Ey_perTFCC_mapped.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTMAPPED";}}' merged_q_exp_with_header.txt Ht_perTFCC.txt | awk '{print $1,$4,$5,$6,$7,$8,$9,$24,$30,$18,$36,$12,$2}' OFS='\t' | sort -k1,1 | sed 's/Cluster/Module/g' > Ht_perTFCC.txtA
cat Ht_colheader Ht_perTFCC.txtA > Ht_perTFCC_mapped.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTMAPPED";}}' merged_q_exp_with_header.txt Kd_perTFCC.txt | awk '{print $1,$4,$5,$6,$7,$8,$9,$25,$31,$19,$37,$13,$2}' OFS='\t' | sort -k1,1 | sed 's/Cluster/Module/g' > Kd_perTFCC.txtA
cat Kd_colheader Kd_perTFCC.txtA > Kd_perTFCC_mapped.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTMAPPED";}}' merged_q_exp_with_header.txt Ms_perTFCC.txt | awk '{print $1,$4,$5,$6,$7,$8,$9,$26,$32,$20,$38,$14,$2}' OFS='\t' | sort -k1,1 | sed 's/Cluster/Module/g' > Ms_perTFCC.txtA
cat Ms_colheader Ms_perTFCC.txtA > Ms_perTFCC_mapped.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTMAPPED";}}' merged_q_exp_with_header.txt Ts_perTFCC.txt | awk '{print $1,$4,$5,$6,$7,$8,$9,$27,$33,$21,$39,$15,$2}' OFS='\t' | sort -k1,1 | sed 's/Cluster/Module/g' > Ts_perTFCC.txtA
cat Ts_colheader Ts_perTFCC.txtA > Ts_perTFCC_mapped.txt

# NOTE: There are multiple same hit Cluster_TF, but the OGID and correlation are different - the different correlation will carry into final files but the OGID will not (doesn't matter since we won't use this!)

rm *_perTFCC.txtA
# *_perTFCC_mapped.txt > these are final files to create the heatmap in R here: ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1a.TFenrich-statechange_corr/TFmotifVariance_Plotting.R

### This analysis below for 1.1a was not used - used Sushmita's analyses instead!

# use -log(qval) to get a list of all the enrichment values of TFs that are
~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs/motif_discovery/promoters_JASPAR2018/cichlids_motif_enrichments/results/Motif_enrichments/Output/{Asbu,Meze,Nebr,Orni,Puny}_MOTIFS_OUTPUT_q0.05_details.txt
# A) conserved across all five species
for i in ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs/motif_discovery/promoters_JASPAR2018/cichlids_motif_enrichments/results/Motif_enrichments/Output/{Asbu,Meze,Nebr,Orni,Puny}_MOTIFS_OUTPUT_q0.05_details.txt ; do awk '{print $1"_"$2,$3,$4}' OFS='\t' $i > "$(basename "$i" .txt).1a.txt" ; done # merge columns 1 and 2
# compare each species for conserved only

# amend $1 to the column in file 2 to match, amend =$0 to the output you want from file2
# amend $4 (in both ‘if' and ‘print' cases) to the key in file 1
# file1 is the main output file structure
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTCONSERVED";}}' Asbu_MOTIFS_OUTPUT_q0.05_details.1a.txt Meze_MOTIFS_OUTPUT_q0.05_details.1a.txt | grep -v NOTCONSERVED | cut -f1 > Ab_Mz_CONS.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTCONSERVED";}}' Ab_Mz_CONS.txt Nebr_MOTIFS_OUTPUT_q0.05_details.1a.txt | grep -v NOTCONSERVED | cut -f1 > Ab_Mz_Nb_CONS.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTCONSERVED";}}' Ab_Mz_Nb_CONS.txt Orni_MOTIFS_OUTPUT_q0.05_details.1a.txt | grep -v NOTCONSERVED | cut -f1 > Ab_Mz_Nb_On_CONS.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTCONSERVED";}}' Ab_Mz_Nb_On_CONS.txt Puny_MOTIFS_OUTPUT_q0.05_details.1a.txt | grep -v NOTCONSERVED | cut -f1 > Ab_Mz_Nb_On_Pn_CONS.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTCONSERVED";}}' Ab_Mz_Nb_On_Pn_CONS.txt Asbu_MOTIFS_OUTPUT_q0.05_details.1a.txt | grep -v NOTCONSERVED | cut -f1-3 > Asbu_MOTIFS_OUTPUT_q0.05_details.Conserved.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTCONSERVED";}}' Ab_Mz_Nb_On_Pn_CONS.txt Meze_MOTIFS_OUTPUT_q0.05_details.1a.txt | grep -v NOTCONSERVED | cut -f1-3 > Meze_MOTIFS_OUTPUT_q0.05_details.Conserved.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTCONSERVED";}}' Ab_Mz_Nb_On_Pn_CONS.txt Nebr_MOTIFS_OUTPUT_q0.05_details.1a.txt | grep -v NOTCONSERVED | cut -f1-3 > Nebr_MOTIFS_OUTPUT_q0.05_details.Conserved.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTCONSERVED";}}' Ab_Mz_Nb_On_Pn_CONS.txt Orni_MOTIFS_OUTPUT_q0.05_details.1a.txt | grep -v NOTCONSERVED | cut -f1-3 > Orni_MOTIFS_OUTPUT_q0.05_details.Conserved.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTCONSERVED";}}' Ab_Mz_Nb_On_Pn_CONS.txt Puny_MOTIFS_OUTPUT_q0.05_details.1a.txt | grep -v NOTCONSERVED | cut -f1-3 > Puny_MOTIFS_OUTPUT_q0.05_details.Conserved.txt

# B) not conserved across all five species
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTCONSERVED";}}' Ab_Mz_Nb_On_Pn_CONS.txt Asbu_MOTIFS_OUTPUT_q0.05_details.1a.txt | grep NOTCONSERVED | cut -f1-3 > Asbu_MOTIFS_OUTPUT_q0.05_details.NotConserved.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTCONSERVED";}}' Ab_Mz_Nb_On_Pn_CONS.txt Meze_MOTIFS_OUTPUT_q0.05_details.1a.txt | grep NOTCONSERVED | cut -f1-3 > Meze_MOTIFS_OUTPUT_q0.05_details.NotConserved.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTCONSERVED";}}' Ab_Mz_Nb_On_Pn_CONS.txt Nebr_MOTIFS_OUTPUT_q0.05_details.1a.txt | grep NOTCONSERVED | cut -f1-3 > Nebr_MOTIFS_OUTPUT_q0.05_details.NotConserved.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTCONSERVED";}}' Ab_Mz_Nb_On_Pn_CONS.txt Orni_MOTIFS_OUTPUT_q0.05_details.1a.txt | grep NOTCONSERVED | cut -f1-3 > Orni_MOTIFS_OUTPUT_q0.05_details.NotConserved.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NOTCONSERVED";}}' Ab_Mz_Nb_On_Pn_CONS.txt Puny_MOTIFS_OUTPUT_q0.05_details.1a.txt | grep NOTCONSERVED | cut -f1-3 > Puny_MOTIFS_OUTPUT_q0.05_details.NotConserved.txt

# using the -log10(qvalue)
for i in *.Conserved.txt ; do awk '{print $1,$2,-log($3)/log(10)}' OFS='\t' $i | sort -k1,1 > "$(basename "$i" .txt).-log10qval.txt" ; done # calculate -log10(qvalue)
for i in *.NotConserved.txt ; do awk '{print $1,$2,-log($3)/log(10)}' OFS='\t' $i | sort -k1,1 > "$(basename "$i" .txt).-log10qval.txt" ; done # calculate -log10(qvalue)

# A. calculate the variance over each TF motif -log10(qval) enrichment across the five species - this will measure how far the qvals are spread out from their average value
# this can be done with GNU datamash - brew install datamash
# Test using datamash
# for i in *_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qval.txt ; do grep 'Cluster1_CRX' $i >> XX ; done
# datamash sstdev column3 < XX
# datamash sstdev 3 < XX
# datamash svar 3 < XX
# for i in *_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qval.txt ; do grep 'Cluster1_CRX' $i >> XX ; done
# for i in *_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qval.txt ; do grep 'Cluster1_GSC' $i >> XX ; done
# datamash --sort --group 1 svar 3 < XX
# # Test calculation of variance and stdev on CRX using awk
# for i in *_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qval.txt ; do grep 'Cluster1_CRX' $i >> XX ; done
# awk -F'\t' '{sum+=$3;a[NR]=$3}END{for(i in a)y+=(a[i]-(sum/NR))^2;print($1, y/(NR-1))}' OFS='\t' XX  # this calculates the variance on col3 - answer is 6.20106
# awk -F'\t' '{sum+=$3;a[NR]=$3}END{for(i in a)y+=(a[i]-(sum/NR))^2;print $1, sqrt(y/(NR-1))}' OFS='\t' XX # this calculates the standard deviation on col3 - answer is 2.49019
cat *_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qval.txt > All_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qval.txt
cat *_MOTIFS_OUTPUT_q0.05_details.NotConserved.-log10qval.txt > All_MOTIFS_OUTPUT_q0.05_details.NotConserved.-log10qval.txt
datamash --sort --group 1 svar 3 < All_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qval.txt > All_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qvalSVAR.txt # datamash group's same values in col1 and then calculates the variance using collated values in col3
datamash --sort --group 1 sstdev 3 < All_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qval.txt > All_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qvalSTDEV.txt # datamash group's same values in col1 and then calculates the stdev using collated values in col3
datamash --sort --group 1 mean 3 < All_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qval.txt > All_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qvalMean.txt # datamash group's same values in col1 and then calculates the mean using collated values in col3
datamash --sort --group 1 svar 3 < All_MOTIFS_OUTPUT_q0.05_details.NotConserved.-log10qval.txt > All_MOTIFS_OUTPUT_q0.05_details.NotConserved.-log10qvalSVAR.txt
datamash --sort --group 1 sstdev 3 < All_MOTIFS_OUTPUT_q0.05_details.NotConserved.-log10qval.txt > All_MOTIFS_OUTPUT_q0.05_details.NotConserved.-log10qvalSTDEV.txt
datamash --sort --group 1 mean 3 < All_MOTIFS_OUTPUT_q0.05_details.NotConserved.-log10qval.txt > All_MOTIFS_OUTPUT_q0.05_details.NotConserved.-log10qvalMean.txt
# merge to create one for each with mean, variance and StDev (in that order)
datamash --sort --group 1 mean 3 svar 3 sstdev 3 < All_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qval.txt | awk -F"_" '{print $1,$2}' OFS='\t' | sed 's/Cluster/Module_/g' | sed 's/(VAR.2)/_V2/g' | sed 's/(VAR.3)/_V3/g' > All_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qval-Mean-SVAR-StDev.txt # col1 - Module; col2 - TF gene ID; col3 - Mean; col4 - variance; col5 - stdev
datamash --sort --group 1 mean 3 svar 3 sstdev 3 < All_MOTIFS_OUTPUT_q0.05_details.NotConserved.-log10qval.txt | awk -F"_" '{print $1,$2}' OFS='\t' | sed 's/Cluster/Module_/g' | sed 's/(VAR.2)/_V2/g' | sed 's/(VAR.3)/_V3/g' > All_MOTIFS_OUTPUT_q0.05_details.NotConserved.-log10qval-Mean-SVAR-StDev.txt # col1 - Module; col2 - TF gene ID; col3 - Mean; col4 - variance; col5 - stdev

# B. Eventually, we will plot the density (y) distribution of the variance (x) in R and categorise TFs into similar fold enrichment (FE) or dissimilar by taking the tails
# C. Before plotting, characterise the TFs that are state-changed (with a '1') and non state-changed (with a '0') in any vs all species and then when plotting, demarcate those that fall within the tails

# i. There are missing orthogroups for ones that should exist - map the TF gene ID (col2) to an orthogroup ID
awk '$10=toupper($10),$12=toupper($12)' OFS='\t' /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/OGIDS.txt5 > OGIDS.txt5 # convert gene IDs to uppercase

## amend the OGID file as some TF gene IDS for human are best to use e.g. PAX2 but not crx - map to col 10, 12 and 15, then take the best mapped using IF statements

awk 'BEGIN{OFS="\t"}NR==FNR{a[$10]=$0;next}{if(a[$6]){print $0,a[$6];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' OGIDS.txt5 ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/merged_mat_qual_pvals_ALL.out1.TF.mz | sort -u > merged_mat_qual_pvals_ALL.out1.TF.May2019.1
awk 'BEGIN{OFS="\t"}NR==FNR{a[$12]=$0;next}{if(a[$6]){print $0,a[$6];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' OGIDS.txt5 merged_mat_qual_pvals_ALL.out1.TF.May2019.1 | sort -u > merged_mat_qual_pvals_ALL.out1.TF.May2019.2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$12]=$0;next}{if(a[$6]){print $0,a[$6];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' OGIDS.txt5 merged_mat_qual_pvals_ALL.out1.TF.May2019.2 | sort -u > merged_mat_qual_pvals_ALL.out1.TF.May2019.3
rm merged_mat_qual_pvals_ALL.out1.TF.May2019.1 merged_mat_qual_pvals_ALL.out1.TF.May2019.2

# awk '{print $1,$11,$27,$43, $2,$12,$28,$44, $3,$13,$29,$45, $4,$14,$30,$46, $5,$15,$31,$47, $6,$7,$8,$9,$10,$26,$42}' OFS='\t' merged_mat_qual_pvals_ALL.out1.TF.May2019.3 | awk '{if($1 == "NULL" && $2==$3 && $3==$4)print $2,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27; else print $1,$2,$3,$4,$5,$6,$7,$8,$19}' OFS='\t' | awk '{if($2 == "NULL" && $3==$4 && $4==$5)print $1,$3,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27; else print $1,$2,$3,$4,$5,$6,$7,$8,$19}' OFS='\t' | awk '{if($3 == "NULL" && $4==$5 && $5==$6)print $1,$2,$4,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27; else print $1,$2,$3,$4,$5,$6,$7,$8,$19}' OFS='\t' | awk '{if($4 == "NULL" && $5==$6 && $6==$7)print $1,$2,$3,$5,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27; else print $1,$2,$3,$4,$5,$6,$7,$8,$19}' OFS='\t'| awk '{if($5 == "NULL" && $6==$7 && $7==$8)print $1,$2,$3,$4,$6,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27; else print $1,$2,$3,$4,$5,$6,$7,$8,$19}' OFS='\t'
# awk '{if($1 == "NULL")print $2,$12,$13,$14,$15,$6,$7,$8,$10;else if ($11 == "NULL") print $27,$2,$3,$4,$5,$6,$7,$8,$9;else if ($27 == "NULL") print $43,$2,$3,$4,$5,$6,$7,$8,$9}' OFS='\t' merged_mat_qual_pvals_ALL.out1.TF.May2019.3
# awk '{if($1 == "NULL")print $11,$12,$13,$14,$15,$6,$7,$8,$10;else if ($11 == "NULL") print $27,$2,$3,$4,$5,$6,$7,$8,$9;else if ($27 == "NULL") print $43,$2,$3,$4,$5,$6,$7,$8,$9}' OFS='\t' merged_mat_qual_pvals_ALL.out1.TF.May2019.3
# awk '{print $1";"$11";"$27";"$43, $2";"$12";"$28";"$44, $3";"$13";"$29";"$45, $4";"$14";"$30";"$46, $5";"$15";"$31";"$47,$6,$7,$8,$9";"$10";"$26";"$42}' OFS='\t' merged_mat_qual_pvals_ALL.out1.TF.May2019.3
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$6]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"Not_Mapped","Not_Mapped","Not_Mapped","Not_Mapped","Not_Mapped","Not_Mapped","Not_Mapped","Not_Mapped","Not_Mapped";}}' /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/merged_mat_qual_pvals_ALL.out1.TF.mz All_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qval-Mean-SVAR-StDev.txt
# awk 'BEGIN{OFS="\t"}NR==FNR{a[$6]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"Not_Mapped","Not_Mapped","Not_Mapped","Not_Mapped","Not_Mapped","Not_Mapped","Not_Mapped","Not_Mapped","Not_Mapped";}}' /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/merged_mat_qual_pvals_ALL.out1.TF.mz All_MOTIFS_OUTPUT_q0.05_details.NotConserved.-log10qval-Mean-SVAR-StDev.txt

# use the unified orthogroup to map back to the OGIDs file to get the correct cichlid gene IDs
cut -f6,7,8,9,10,26,42 merged_mat_qual_pvals_ALL.out1.TF.May2019.3 | sed 's/NA/NULL/g' | awk '{if($4 == "NA")print $1,$2,$3,$5; else if ($5 == "NULL") print $1,$2,$3,$6; else if ($6 == "NULL") print $1,$2,$3,$7; else if ($4 !="NULL" && $4 != $5 || $4 != $6 || $4 != $7) print $1,$2,$3,$4,$5,$6,$7; else print $1,$2,$3,$4}' OFS='\t' > merged_mat_qual_pvals_ALL.out1.TF.May2019.4
# then manually amend the above file (in excel) so that for dual entries with two orthogroups, both are included > merged_mat_qual_pvals_ALL.out1.TF.May2019.4
tr -d '\15\32' < merged_mat_qual_pvals_ALL.out1.TF.May2019.4 > merged_mat_qual_pvals_ALL.out1.TF.May2019.5 # convert to unix format file from windows
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$4]){print $0,a[$4];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' OGIDS.txt5 merged_mat_qual_pvals_ALL.out1.TF.May2019.5 | awk '{print $6,$7,$8,$9,$10,$1,$2,$3,$4}' OFS='\t' > merged_mat_qual_pvals_ALL.out1.TF.May2019.6
# cat with the old file and sort -u to ensure none are missed then prepare two final files - one for Mouse and another for Human derived motifs
cat ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/merged_mat_qual_pvals_ALL.out1.TF.mz merged_mat_qual_pvals_ALL.out1.TF.May2019.6 | sort -u | sed 's/[[:<:]]NA[[:>:]]/NULL/g' | awk '$8 ~ /ENSG000/ || $8 == "NULL" { print }' OFS='\t' > merged_mat_qual_pvals_ALL.out1.TF.May2019.Hs
cat ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/merged_mat_qual_pvals_ALL.out1.TF.mz merged_mat_qual_pvals_ALL.out1.TF.May2019.6 | sort -u | sed 's/[[:<:]]NA[[:>:]]/NULL/g' | awk '$8 ~ /ENSMUSG000/ || $8 == "NULL" { print }' OFS='\t' > merged_mat_qual_pvals_ALL.out1.TF.May2019.Mm
for i in merged_mat_qual_pvals_ALL.out1.TF.May2019.Mm merged_mat_qual_pvals_ALL.out1.TF.May2019.Hs ; do cp $i ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/ ; done
# FINAL motif mapping files are ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/merged_mat_qual_pvals_ALL.out1.TF.May2019.Mm ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/merged_mat_qual_pvals_ALL.out1.TF.May2019.Hs

# Below are switched genes in any branch for all orthologs
awk '$17!="NA" && $18!="NA" && $17!=$18 || $17!="NA" && $19!="NA" && $17!=$19 || $17!="NA" && $20!="NA" && $17!=$20 || $17!="NA" && $21!="NA" && $17!=$21' /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-clusterassign > OGIDS.tx5-clusterassign_AnySwitchGene #7587
# Below are switched genes in any branch for 1-to-1 orthologs only - don't use this, instead use all orthologs above since some TFs are not found in all cichlid species
# awk '$17!=$18 || $17!=$19 || $17!=$20 || $17!=$21' OFS='\t' /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-clusterassign-1to1 > OGIDS.txt5-clusterassign-1to1_AnySwitchGene #3904

# Other switch files are these (however, these are for 1-to-1 orthologs only and a switch is specifically in the mentioned species/branch and not in any branch)
# /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-clusterassign-1to1_Mzvsall #809
# /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-clusterassign-1to1_Pnvsall #351
# /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-clusterassign-1to1_Abvsall #485
# /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-clusterassign-1to1_Nbvsall #983
# /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-clusterassign-1to1_Onvsall #1617
#
# /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/prediction_mode_results/results/Anc3vs4_clusterassign_noOG-allassigned_StateChange.txt #792
# /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/prediction_mode_results/results/Anc2vs3_clusterassign_noOG-allassigned_StateChange.txt #293
# /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/prediction_mode_results/results/Anc1vs2_clusterassign_noOG-allassigned_StateChange.txt #404


# then map each TF to whether state changed (1) or non state-changed (0) across
for i in merged_mat_qual_pvals_ALL.out1.TF.May2019.Mm merged_mat_qual_pvals_ALL.out1.TF.May2019.Hs ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$1;next}{if(a[$9]){print $0,"1";}else{print $0,"0";}}' OGIDS.tx5-clusterassign_AnySwitchGene $i > $i.Nsw-Sw
done # 210/1248 Hs derived state-changed TFs AND 248/1328 Mm derived state-changed TFs; Used a set of 7587 any switched orthogroups (non-1-to-1)

# A) the modules of all five species where conserved
awk 'BEGIN{OFS="\t"}NR==FNR{a[$6]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NOMAP!";}}' merged_mat_qual_pvals_ALL.out1.TF.May2019.Hs.Nsw-Sw All_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qval-Mean-SVAR-StDev.txt | cut -f1-10,12-15 > All_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qval-Mean-SVAR-StDev.Hs.Nsw-Sw.txt # col1 - Module; col2 - TF gene ID; col3 - Mean; col4 - variance; col5 - stdev; col6-10: cichlid gene IDs; col11 - motif ID; col12 - Hs/Mm ENSEMBL_id; col13 - orthogroup; col15 - sw(1) or no-sw(0)
awk 'BEGIN{OFS="\t"}NR==FNR{a[$6]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NOMAP!";}}' merged_mat_qual_pvals_ALL.out1.TF.May2019.Mm.Nsw-Sw All_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qval-Mean-SVAR-StDev.txt | cut -f1-10,12-15 > All_MOTIFS_OUTPUT_q0.05_details.Conserved.-log10qval-Mean-SVAR-StDev.Mm.Nsw-Sw.txt # col1 - Module; col2 - TF gene ID; col3 - Mean; col4 - variance; col5 - stdev; col6-10: cichlid gene IDs; col11 - motif ID; col12 - Hs/Mm ENSEMBL_id; col13 - orthogroup; col15 - sw(1) or no-sw(0)

# B) the modules of all the species where not-conserved
awk 'BEGIN{OFS="\t"}NR==FNR{a[$6]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NOMAP!";}}' merged_mat_qual_pvals_ALL.out1.TF.May2019.Hs.Nsw-Sw All_MOTIFS_OUTPUT_q0.05_details.NotConserved.-log10qval-Mean-SVAR-StDev.txt | cut -f1-10,12-15 > All_MOTIFS_OUTPUT_q0.05_details.NotConserved.-log10qval-Mean-SVAR-StDev.Hs.Nsw-Sw.txt # col1 - Module; col2 - TF gene ID; col3 - Mean; col4 - variance; col5 - stdev; col6-10: cichlid gene IDs; col11 - motif ID; col12 - Hs/Mm ENSEMBL_id; col13 - orthogroup; col15 - sw(1) or no-sw(0)
awk 'BEGIN{OFS="\t"}NR==FNR{a[$6]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NOMAP!";}}' merged_mat_qual_pvals_ALL.out1.TF.May2019.Mm.Nsw-Sw All_MOTIFS_OUTPUT_q0.05_details.NotConserved.-log10qval-Mean-SVAR-StDev.txt | cut -f1-10,12-15 > All_MOTIFS_OUTPUT_q0.05_details.NotConserved.-log10qval-Mean-SVAR-StDev.Mm.Nsw-Sw.txt # col1 - Module; col2 - TF gene ID; col3 - Mean; col4 - variance; col5 - stdev; col6-10: cichlid gene IDs; col11 - motif ID; col12 - Hs/Mm ENSEMBL_id; col13 - orthogroup; col15 - sw(1) or no-sw(0)

# FINAL files: All_MOTIFS_OUTPUT_q0.05_details.{Conserved,NotConserved}.-log10qval-Mean-SVAR-StDev.{Hs,Mm}.Nsw-Sw.txt # col1 - Module; col2 - TF gene ID; col3 - Mean; col4 - variance; col5 - stdev; col6-10: cichlid gene IDs; col11 - TF gene ID; col12 - motif ID; col13 - Hs/Mm ENSEMBL_id; col14 - orthogroup; col15 - sw(1) or no-sw(0)
# ready to plot the density (y) distribution of the variance (x) in R and categorise TFs into similar fold enrichment (FE) or dissimilar by taking the tails
# demarcate in the tails, the TFs that are state-changed (with a '1') and non state-changed (with a '0') in any vs all species
# can also create plots per module enrichment
# plotting here: ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1a.TFenrich-statechange_corr/TFmotifVariance_Plotting.R


cd ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments

## 1.3. Calculation of significance scores to indicate higher rewiring scores of teleost and cichlid trait genes associated with morphogenesis.
# mann whitney test of significant difference between candidate genes scores vs the rest? Then include in main text.

mkdir 1.3.candidate_rewiring
cd 1.3.candidate_rewiring

# convert to unix format file
tr -d '\15\32' < /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Manuscript/Figures/New/Supplementary/Extended_Data_Table_S-R3B_Candidate_Genes.txt > Cand_genes.txt
tr -d '\15\32' < /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Manuscript/Figures/New/Supplementary/Extended_Data_Table_S-R3A_TFTG1to1_DyNet_rewiring_allfive_species.txt > TFTG1to1_DyNet_rewiring.txt
tr -d '\15\32' < /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Manuscript/Figures/New/Supplementary/Extended_Data_Table_S-R3D_TFTGalledges_DyNet_rewiring_allfive_species.txt > TFTGalledges_DyNet_rewiring.txt

# demarcate candidates (1) and non-candidates (0) in DyNet rewiring tables to calculate Mann-Whitney signficance based on Dn-Score_(degree_corrected) scores (col3 in each)
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$14;next}{if(a[$1]){print $0,"1";}else{print $0,"0";}}' Cand_genes.txt TFTG1to1_DyNet_rewiring.txt | sed '$H;x;1,/0/s/0/Candidate/;1d' > TFTG1to1_DyNet_rewiring_CandsMarked.txt # 31/90 candidates, of which 9/31 have > mean of 0.17
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$14;next}{if(a[$1]){print $0,"1";}else{print $0,"0";}}' Cand_genes.txt TFTGalledges_DyNet_rewiring.txt | sed '$H;x;1,/0/s/0/Candidate/;1d' > TFTGalledges_DyNet_rewiring_CandsMarked.txt # 89/90 candidates, of which 60/89 have > mean of 0.23
# awk '$12==1' TFTGalledges_DyNet_rewiring_CandsMarked.txt | awk '$3>=0.23' | wc -l
# awk '$12==1' TFTG1to1_DyNet_rewiring_CandsMarked.txt | awk '$3>=0.1' | wc -l
# demarcate the candidates that have degree-corrected rewiring scores higher than the mean
awk '{if($12 == 1 && $3>=0.1657865)print $0,$13=1;else print $0,$13=0;}' OFS='\t' TFTG1to1_DyNet_rewiring_CandsMarked.txt | sed '$H;x;1,/0/s/0/MoreThanMean/;1d' > TFTG1to1_DyNet_rewiring_CandsMarked_MoreThanMean.txt
awk '{if($12 == 1 && $3>=0.2274561)print $0,$13=1;else print $0,$13=0;}' OFS='\t' TFTGalledges_DyNet_rewiring_CandsMarked.txt | sed '$H;x;1,/0/s/0/MoreThanMean/;1d' > TFTGalledges_DyNet_rewiring_CandsMarked_MoreThanMean.txt

# Testing significance in R and new Fig. 2c plot here: ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.3.candidate_rewiring/TFTG_rewiring_significance.R

## 3.3 Significance of “more predicted unique TF regulators of sws1 in M. zebra (38 TFs) as compared to N. brichardi (6 TFs) (Fig. 3a)”
# ranking the edges based on q-value and ordering in terms of significance. Can also do Mann-Whitney test of significant difference in unique regulator motif prediction q-vals.
cd ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments
mkdir 3.3.sws1_significance
cd 3.3.sws1_significance

# run this if you want all the detailed information like gene symbol, module, motif sequence etc.
# for i in /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Mz-Edge_Attributes_Collated4c.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Nb-Edge_Attributes_Collated4c.txt ; do
#   awk '$18=="co-expression_TF-TG" || $18=="promoter_motif"' $i | awk '$9=="OG11366_0"' | cut -f1-10,27,31-36,49 > "$(basename "$i" .txt).coexpr_prom_sws1_ONLY.txt"
# done

cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/
for i in Mz-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt Nb-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt; do
  awk '{print $0,FILENAME}' OFS='\t' $i | awk '$3=="OG11366_0"' | sed 's/-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.txt//g' > "$(basename "$i" .txt).sws1_ONLY.txt"
done

# since we are only looking at interactions of sws1, no need to filter for PresentNULLOGIDS however, if you needed to, can use below
# for i in Mz-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.sws1_ONLY.txt Nb-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.sws1_ONLY.txt ; do
#   awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"KEEPME";}}' /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/matrix/MzPnAbNbOnGenome-BLAST_PresentNULLOGIDS-noCand-noTF.txt2 $i | grep 'KEEPME' | cut -f1-9 > "$(basename "$i" .txt).filteredPresentNULLOGIDS.txt"
# done
cp *.sws1_ONLY.txt /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/ # then copy to 3.3.sws1_significance to work locally

# check that you pick up the correct number of unique TFs
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"UNIQUE";}}' Nb-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.sws1_ONLY.txt Mz-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.sws1_ONLY.txt | grep 'UNIQUE' | cut -f1 | sort -u | wc -l # 38 unique TFs in Mz confirmed
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"UNIQUE";}}' Mz-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.sws1_ONLY.txt Nb-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.sws1_ONLY.txt | grep 'UNIQUE' | cut -f1 | sort -u | wc -l # 6 unique TFs in Nb confirmed

# combine and rank the unique edges
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"UNIQUE";}}' Nb-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.sws1_ONLY.txt Mz-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.sws1_ONLY.txt | grep 'UNIQUE' > Mz-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.sws1_ONLY_uniq.txt # 38 unique TFs represented as 224 edges in Mz
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"UNIQUE";}}' Mz-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.sws1_ONLY.txt Nb-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.sws1_ONLY.txt | grep 'UNIQUE' > Nb-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.sws1_ONLY_uniq.txt # 6 unique TFs represented as 10 edges in Nb
cat Mz-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.sws1_ONLY_uniq.txt Nb-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.sws1_ONLY_uniq.txt | sort -k4,4 | sort -k8,8 | sort -k7,7 > MzNb-Edge_Attributes_Collated4c.coexpr_promONLY_FDRrank.sws1_ONLY_uniqRANKED.txt

# Mann-Whitney test of significant difference between q-vals (col7) of Mz and Nb unique edges in: /TFTG_rewiring_significance.R
# Mann-Whitney p-value = 0.1731 - no significant difference between q-value unique regulatory edges of Mz and Nb sws1 networks
# Instead, include the violin plot that shows many more significant TF-sws1 edges in Mz compared to Nb

# 2.1. An appropriate null-model e.g. a base-line or an expectation of how much regulatory evolution is to be expected
# Tarang, Will and Wilfried to TEST [~2 weeks]: this can be addressed by further analyses (beyond Fig. S-R2a of the manuscript) of the evolutionary rate of diverged motifs and their flanking region in the promoter regions of rewired genes.
  # Take 5kb promoter region
  # Using O. niloticus centred alignments, extract columns (Python or TCofee) in the alignment of each 1to1 orthogroup for
    # non-TFBS nucleotides
    # TFBS nucleotides
  # Concatenate nucleotides for each of the two groups above
  # Compute evolutionary rate using baseml for every orthogroup and the two groups (non-TFBS and TFBS)
  # Expectations:
    # Neutral - two identical distributions
    # Purifying selection: selection acting on TFBS lower tahn non-TFBS
# Concluding statement: Using the data available to us, we show selective constraint acting upon TFBS regions but it is likely that mutations can occur by chance, leading to rewiring of TF-TG edges between the five closely-related species. We accept the value of an appropriate null-model e.g. a base-line or an expectation of how much regulatory evolution is to be expected; this analyses of neutrally evolving vs selected sites is only possible with access to population data of all five cichlid species and distantly diverged species.

cd ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments
mkdir 2.1.nullmodel
cd 2.1.nullmodel

# Promoter alignments are here
/tgac/workarea/group-vh/Tarang/Reference_Genomes/cichlids/1stexonBLAT/alignments/
# separated by those with a BLAT1to1OGID
/tgac/workarea/group-vh/Tarang/Reference_Genomes/cichlids/1stexonBLAT/alignments/*.fa # 5421
# and those without, around 20% are reliable
/tgac/workarea/group-vh/Tarang/Reference_Genomes/cichlids/1stexonBLAT/alignments/no_BLAT_hit/*.fa # 1033
# As we select TFBS and non-TFBS nucleotides based on O. niloticus motifs, use that file here:
awk 'NR==1 {print}; /on.gene/ {print}' /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/motifenr_merged-TFBSs_map2d.txt | cut -f1-17 > /tgac/workarea/group-vh/Tarang/Reference_Genomes/cichlids/1stexonBLAT/alignments/On_motifenr_merged-TFBSs_map2d.txt


# 1.1b. Testing the divergence of retina/lens-related TFs motifs in eye-expressed genes

# The analysis needs to be along the lines of:
# Let’s take CRX1. First, do we see a variation (gain/loss) of enrichment in different species for module 1 genes (Mz, Pn and Ab CRX found in module 1, Nb missing and On found in module 6).
# Next, do we see then that in On, CRX1 expression is lower in eye than other species?
# For the species that don’t have CRX1, is there a different regulator that now regulates the genes that were regulated by CRX1?

cd ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments
mkdir 1.1b.RetinaMotifDivergence
cd 1.1b.RetinaMotifDivergence

# 1. Collate every single motif that is enriched in Module 1 genes.
# a. use the files created above
for i in ../1a.TFenrich-statechange_corr/*_MOTIFS_OUTPUT_q0.05_details.Conserved.txt ; do grep Cluster1 $i | sed 's/Cluster/Module/g' | sed $'s/_/\t/g' > "$(basename "$i" .txt).Mod1.txt" ; done
for i in ../1a.TFenrich-statechange_corr/*_MOTIFS_OUTPUT_q0.05_details.NotConserved.txt ; do grep Cluster1 $i | sed 's/Cluster/Module/g' | sed $'s/_/\t/g' > "$(basename "$i" .txt).Mod1.txt" ; done
# b. map the TF to OGID
TFmap=(~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/merged_mat_qual_pvals_ALL.out1.TF.May2019.Mm)
for i in *.Mod1.txt ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$6]=$0;next}{if(a[$2]){print $0,a[$2];}else{print $0,"NOMAP!";}}' $TFmap $i | cut -f1-4,13 | grep -v NULL | grep -v 'NOMAP!' > "$(basename "$i" .txt).map.txt" ; done

# 2. How many of those TFs are actually found in module 1 for each of the species
# a. for each species, map to module assignment
CA=(~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-clusterassign)
for i in Meze*.map.txt ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$5]){print $0,a[$5];}else{print $0,"NOMAP!";}}' $CA $i | cut -f1-5,22 | grep -v 'NOMAP!' > "$(basename "$i" .txt)2.txt" ; done
for i in Puny*.map.txt ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$5]){print $0,a[$5];}else{print $0,"NOMAP!";}}' $CA $i | cut -f1-5,23 | grep -v 'NOMAP!' > "$(basename "$i" .txt)2.txt" ; done
for i in Asbu*.map.txt ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$5]){print $0,a[$5];}else{print $0,"NOMAP!";}}' $CA $i | cut -f1-5,24 | grep -v 'NOMAP!' > "$(basename "$i" .txt)2.txt" ; done
for i in Nebr*.map.txt ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$5]){print $0,a[$5];}else{print $0,"NOMAP!";}}' $CA $i | cut -f1-5,25 | grep -v 'NOMAP!' > "$(basename "$i" .txt)2.txt" ; done
for i in Orni*.map.txt ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$5]){print $0,a[$5];}else{print $0,"NOMAP!";}}' $CA $i | cut -f1-5,26 | grep -v 'NOMAP!' > "$(basename "$i" .txt)2.txt" ; done
# b. get the counts for those assigned to module 1 in each species
for i in *.Conserved.Mod1.map2.txt ; do awk '$6==1{count++} $6!=1{count2++} END {print FILENAME, count, count2}' $i ; done # prints the filename, the number in module 1, number not in module 1
# Meze_MOTIFS_OUTPUT_q0.05_details.Conserved.Mod1.map2.txt 1 11 - CRX
# Puny_MOTIFS_OUTPUT_q0.05_details.Conserved.Mod1.map2.txt 1 11 - CRX
# Asbu_MOTIFS_OUTPUT_q0.05_details.Conserved.Mod1.map2.txt 2 10 - CRX and GFI1
# Nebr_MOTIFS_OUTPUT_q0.05_details.Conserved.Mod1.map2.txt 0 12
# Orni_MOTIFS_OUTPUT_q0.05_details.Conserved.Mod1.map2.txt 1 11 - GFI1
for i in *.NotConserved.Mod1.map2.txt ; do awk '$6==1{count++} $6!=1{count2++} END {print FILENAME, count, count2}' $i ; done # prints the filename, the number in module 1, number not in module 1
# Meze_MOTIFS_OUTPUT_q0.05_details.NotConserved.Mod1.map2.txt 15 170 - 15/185 = 8%
# Puny_MOTIFS_OUTPUT_q0.05_details.NotConserved.Mod1.map2.txt 14 227 - 14/241 = 6%
# Asbu_MOTIFS_OUTPUT_q0.05_details.NotConserved.Mod1.map2.txt 12 202 - 12/214 = 6%
# Nebr_MOTIFS_OUTPUT_q0.05_details.NotConserved.Mod1.map2.txt 0 5 = 0%
# Orni_MOTIFS_OUTPUT_q0.05_details.NotConserved.Mod1.map2.txt 20 184 - 20/204 = 10%

# For motifs that are enriched (FDR<0.05) in module 1 gene promoters of all species, we note that in the haplochromines (M. zebra, P. nyererei and A. burtoni), one TF (CRX) is also found in module 1, as well as GFI1 in A. burtoni only.
# However, in O. niloticus, CRX is enriched in module 1 gene promoters but found in module 6 and only GFI1 is a module 1 TF that is also enriched in module 1 gene promoters, similar to A. burtoni.
# GFI1 is enriched (FDR<0.05) in module 1 gene promoters but found to be state-changed in module assignment in M. zebra (module 5) and P. nyererei (Module 2), indicative of a change in expression pattern.
# This variability is also observed in motifs that are not enriched (FDR<0.05) across all five species module 1 gene promoters.


# c. create unified files that show the Presence and Absence across species to highlight the gain and loss along the phylogeny
# i. first, amend the file structure for mapping
for i in *.Mod1.map2.txt ; do awk '{print $5,$1"_"$2,$4,$6}' OFS='\t' $i > "$(basename "$i" .map2.txt).map3.txt" ; done # col1 - OGID; col2 - module1_TF; col3 - qval enrichment; col4 - module assignment

cat *.Conserved.Mod1.map3.txt | cut -f1 | sort -u > Conserved_OGIDS.txt
cat *.NotConserved.Mod1.map3.txt | cut -f1,2 | sort -u > NotConserved_OGIDS.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA";}}' Meze_MOTIFS_OUTPUT_q0.05_details.Conserved.Mod1.map3.txt Conserved_OGIDS.txt | cut -f2-5 > Mz_Conserved.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA";}}' Puny_MOTIFS_OUTPUT_q0.05_details.Conserved.Mod1.map3.txt Mz_Conserved.txt  | cut -f1-4,7-8 > Mz_Pn_Conserved.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA";}}' Asbu_MOTIFS_OUTPUT_q0.05_details.Conserved.Mod1.map3.txt Mz_Pn_Conserved.txt | cut -f1-6,9-10 > Mz_Pn_Ab_Conserved.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA";}}' Nebr_MOTIFS_OUTPUT_q0.05_details.Conserved.Mod1.map3.txt Mz_Pn_Ab_Conserved.txt | cut -f1-8,11-12 > Mz_Pn_Ab_Nb_Conserved.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA";}}' Orni_MOTIFS_OUTPUT_q0.05_details.Conserved.Mod1.map3.txt Mz_Pn_Ab_Nb_Conserved.txt | cut -f1-10,13-14 > Mz_Pn_Ab_Nb_On_Conserved.txt
# col1 - OGID; col2 - Module1_TF; col3 - Mz_qval; col4 - Mz_TF_module-assign; col5 - Pn_qval; col6 - Pn_TF_module-assign; col7 - Ab_qval; col8 - Ab_TF_module-assign; col9 - Nb_qval; col10 - Nb_TF_module-assign; col11 - On_qval; col12 - On_TF_module-assign

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA","NA","NA","NA";}}' Meze_MOTIFS_OUTPUT_q0.05_details.NotConserved.Mod1.map3.txt NotConserved_OGIDS.txt | cut -f1-2,5-6 > Mz_NotConserved.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA","NA","NA","NA";}}' Puny_MOTIFS_OUTPUT_q0.05_details.NotConserved.Mod1.map3.txt Mz_NotConserved.txt | cut -f1-4,7-8 > Mz_Pn_NotConserved.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA","NA","NA","NA";}}' Asbu_MOTIFS_OUTPUT_q0.05_details.NotConserved.Mod1.map3.txt Mz_Pn_NotConserved.txt | cut -f1-6,9-10 > Mz_Pn_Ab_NotConserved.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA","NA","NA","NA";}}' Nebr_MOTIFS_OUTPUT_q0.05_details.NotConserved.Mod1.map3.txt Mz_Pn_Ab_NotConserved.txt | cut -f1-8,11-12 > Mz_Pn_Ab_Nb_NotConserved.txt
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA","NA","NA","NA";}}' Orni_MOTIFS_OUTPUT_q0.05_details.NotConserved.Mod1.map3.txt Mz_Pn_Ab_Nb_NotConserved.txt | cut -f1-10,13-14 > Mz_Pn_Ab_Nb_On_NotConserved.txt

# 3. Map the eye expression value (normalized expression values (that you then log transform (x+1) to avoid zeroes)) for all of these TFs and demarcate in what species the TF is not found in module 1 - do we see a difference in expression

mzexpr=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Gene_expression_data/fromChris_notlogtransf/expression_for_Tarang/Mz_expr_noloss_nz_names-OGIDs.geneexp)
pnexpr=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Gene_expression_data/fromChris_notlogtransf/expression_for_Tarang/Pn_expr_noloss_nz_names-OGIDs.geneexp)
abexpr=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Gene_expression_data/fromChris_notlogtransf/expression_for_Tarang/Ab_expr_noloss_nz_names-OGIDs.geneexp)
nbexpr=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Gene_expression_data/fromChris_notlogtransf/expression_for_Tarang/Nb_expr_noloss_nz_names-OGIDs.geneexp)
onexpr=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Gene_expression_data/fromChris_notlogtransf/expression_for_Tarang/On_expr_noloss_nz_names-OGIDs.geneexp)

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$3;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA";}}' $mzexpr Mz_Pn_Ab_Nb_On_Conserved.txt >  Mz_Pn_Ab_Nb_On_Conserved.txt.1
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$3;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA";}}' $pnexpr Mz_Pn_Ab_Nb_On_Conserved.txt.1 >  Mz_Pn_Ab_Nb_On_Conserved.txt.2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$3;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA";}}' $abexpr Mz_Pn_Ab_Nb_On_Conserved.txt.2 >  Mz_Pn_Ab_Nb_On_Conserved.txt.3
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$3;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA";}}' $nbexpr Mz_Pn_Ab_Nb_On_Conserved.txt.3 >  Mz_Pn_Ab_Nb_On_Conserved.txt.4
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$3;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA";}}' $onexpr Mz_Pn_Ab_Nb_On_Conserved.txt.4 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,log($13+1),log($14+1),log($15+1),log($16+1),log($17+1)}' OFS='\t' >  Mz_Pn_Ab_Nb_On_Conserved.txt.5

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$3;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA";}}' $mzexpr Mz_Pn_Ab_Nb_On_NotConserved.txt >  Mz_Pn_Ab_Nb_On_NotConserved.txt.1
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$3;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA";}}' $pnexpr Mz_Pn_Ab_Nb_On_NotConserved.txt.1 >  Mz_Pn_Ab_Nb_On_NotConserved.txt.2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$3;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA";}}' $abexpr Mz_Pn_Ab_Nb_On_NotConserved.txt.2 >  Mz_Pn_Ab_Nb_On_NotConserved.txt.3
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$3;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA";}}' $nbexpr Mz_Pn_Ab_Nb_On_NotConserved.txt.3 >  Mz_Pn_Ab_Nb_On_NotConserved.txt.4
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$3;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NA";}}' $onexpr Mz_Pn_Ab_Nb_On_NotConserved.txt.4 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,log($13+1),log($14+1),log($15+1),log($16+1),log($17+1)}' OFS='\t' >  Mz_Pn_Ab_Nb_On_NotConserved.txt.5

printf 'OGID\tTF\tMz_qval\tMz_TF_module-assign\tPn_qval\tPn_TF_module-assign\tAb_qval\tAb_TF_module-assign\tNb_qval\tNb_TF_module-assign\tOn_qval\tOn_TF_module-assign\tMz_eye_expr_log(x+1)\tPn_eye_expr_log(x+1)\tAb_eye_expr_log(x+1)\tNb_eye_expr_log(x+1)\tOn_eye_expr_log(x+1)\n' > colheadsTF
cat colheadsTF Mz_Pn_Ab_Nb_On_Conserved.txt.5 | sed 's/Module1_//g' > Mz_Pn_Ab_Nb_On_Conserved.Final.txt
cat colheadsTF Mz_Pn_Ab_Nb_On_NotConserved.txt.5 | sed 's/Module1_//g' > Mz_Pn_Ab_Nb_On_NotConserved.Final.txt

# at this point, create a scatter plot of the enrichment of motifs in module 1 gene promoters VS the eye expression level in each species, colouring based on whether module 1 or not

# then, calculate the variance in enrichment and eye expression for each cons and not cons TF
cut -f2,3,5,7,9,11 Mz_Pn_Ab_Nb_On_Conserved.Final.txt > Mz_Pn_Ab_Nb_On_Conserved.FinalMotifVar.txt
cut -f2,13,14,15,16,17 Mz_Pn_Ab_Nb_On_Conserved.Final.txt > Mz_Pn_Ab_Nb_On_Conserved.FinalExprVar.txt

cut -f2,3,5,7,9,11 Mz_Pn_Ab_Nb_On_NotConserved.Final.txt > Mz_Pn_Ab_Nb_On_NotConserved.FinalMotifVar.txt
cut -f2,13,14,15,16,17 Mz_Pn_Ab_Nb_On_NotConserved.Final.txt > Mz_Pn_Ab_Nb_On_NotConserved.FinalExprVar.txt


# plotting in /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.1b.RetinaMotifDivergence/1.1bRetinaMotifDivergence_plotting.R



# 4. For the species where a particular TF is either not found or located in module 1, is there a different enrichment of regulators?







#### NOTE: As of 13/08/19, ran the analysis below but Sushmita suggested the above instead.

# For state changed TFs is there a loss/divergence of the motif (filter raw fimo outputs of JP2018 scans for state-changed TFs - ensure crx, pitx3, and otx1 are in this set) in eye-expressed genes (module 1 genes).
# Also indicate the raw expression value of the TF.
# How many of the TFs state changed to module 1 (more motifs present?) and how many state-changed away from module 1 (less present?).

slurm
cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/
mkdir -p May2019_ReviewerComments/1.1b.RetinaMotifDivergence
# cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes
# for i in *-Edge_Attributes_Collated4d.txt ; do
#   awk 'NR==1 {print};$18=="co-expression_TF-TG" || $18=="promoter_motif"' OFS='\t' $i | cut -f1-10,27-36,49 > /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.1b.RetinaMotifDivergence/"$(basename "$i" .txt).coexpr_promTFTGonly.txt"
# done # filter for just co-expression_TFTG and promoter_motif and take the relevant columns you need

cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.1b.RetinaMotifDivergence
# OG15312_0	mz.gene.s75.1	pn.gene.s96.17	ab.gene.s564.3	NULL	on.gene.LG10.31	ENSORLG00000000324	ENSTNIG00000011632	ENSGACG00000020178	crx	ENSDARG00000011989	crx	ENSONIG00000015806	NULL	NULL	NULL
# OG13189_0	mz.gene.s217.8	pn.gene.s196.30	ab.gene.s889.1	NULL	on.gene.UNK25.9	ENSORLG00000001148	ENSTNIG00000003142	ENSGACG00000014620	pitx3	ENSDARG00000070069	pitx3	ENSONIG00000009139	ENSG00000107859	PITX3	ENSMUSG00000025229
for i in *.coexpr_promTFTGonly.txt ; do awk '$3 == "OG15312_0" || $3 == "OG13189_0"' $i | less ; done # crx present

# Cannot find the original JASPAR2018 fimo raw outputs so re-run
cp /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/motif_discovery/JASPAR* .

echo "fimo --o M_zebra_1e-4_JASPAR2018 --thresh 1e-4 --max-stored-scores 500000 JASPAR2018_CORE_vertebrates_non-redundant_pfms_meme.txt /tgac/workarea/group-vh/Tarang/Reference_Genomes/cichlids/1stexonBLAT/Mz_GeneAnnotation_11092017_FINALcorrected.5kb_promoters.stranded.GENEBED_all.fasta" > run_fimocom
echo "fimo --o P_nyererei_1e-4_JASPAR2018 --thresh 1e-4 --max-stored-scores 500000 JASPAR2018_CORE_vertebrates_non-redundant_pfms_meme.txt /tgac/workarea/group-vh/Tarang/Reference_Genomes/cichlids/1stexonBLAT/Pn_GeneAnnotation_11092017_FINALcorrected.5kb_promoters.stranded.GENEBED_all.fasta" >> run_fimocom
echo "fimo --o A_burtoni_1e-4_JASPAR2018 --thresh 1e-4 --max-stored-scores 500000 JASPAR2018_CORE_vertebrates_non-redundant_pfms_meme.txt /tgac/workarea/group-vh/Tarang/Reference_Genomes/cichlids/1stexonBLAT/Ab_GeneAnnotation_11092017_FINALcorrected.5kb_promoters.stranded.GENEBED_all.fasta" >> run_fimocom
echo "fimo --o N_brichardi_1e-4_JASPAR2018 --thresh 1e-4 --max-stored-scores 500000 JASPAR2018_CORE_vertebrates_non-redundant_pfms_meme.txt /tgac/workarea/group-vh/Tarang/Reference_Genomes/cichlids/1stexonBLAT/Nb_GeneAnnotation_11092017_FINALcorrected.5kb_promoters.stranded.GENEBED_all.fasta" >> run_fimocom
echo "fimo --o O_niloticus_1e-4_JASPAR2018 --thresh 1e-4 --max-stored-scores 500000 JASPAR2018_CORE_vertebrates_non-redundant_pfms_meme.txt /tgac/workarea/group-vh/Tarang/Reference_Genomes/cichlids/1stexonBLAT/Oreochromis_niloticus.BROADON1.longestCDS_new.5kb_promoters.stranded.GENEBED_all.fasta" >> run_fimocom

nano run_fimo.sh

#!/bin/bash -e
#SBATCH -p ei-largemem # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --array=0-4
#SBATCH --mem-per-cpu 256GB
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR

#load the latest module
ml meme/4.11.1

mapfile -t run_fimocom < run_fimocom # assign as elements to $mzreads_a variable

# use FIMO in the MEME suite to scan for motif models using the JASPAR file across the genomes at a level of statistical significance (use stringent default pval <1e-4)
${run_fimocom[${SLURM_ARRAY_TASK_ID}]}

# run the above
sbatch run_fimo.sh

# Map the TFs to orthogroup IDs
cp /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/motif_discovery/merged_* .
JASPAR_Vertebrates_2018_motifname.txt

# create a new JASPAR 2018 Motif mapping file using a python script
# read in OGIDS.txt5 and do a match of the col2 from file below to col10,12 and 15 - if match then take whole row
~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.1b.RetinaMotifDivergence/JASPAR_Vertebrates_2018_motifname.OGID.txt # created the following file - 359/579 TFs mapped: checked the file and it looks perfectly mapped; copied to scratch area above
cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.1b.RetinaMotifDivergence
cp /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.1b.RetinaMotifDivergence/JASPAR_Vertebrates_2018_motifname.OGID.txt .
cp /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1a.TFenrich-statechange_corr/OGIDS.tx5-clusterassign_AnySwitchGene .
cp /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-clusterassign .
cp /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.1b.RetinaMotifDivergence/*_expr_noloss_nz_names-OGIDs.geneexp .

nano mapping.sh

#!/bin/bash -e
#SBATCH -p tgac-short # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --mem 18000 # memory pool for all cores
#SBATCH -t 0-00:45 # time (D-HH:MM)
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address

# awk '{print $1,toupper($2),$3,$4,$5,$6,$7,$8,$9,$10}' OFS='\t' /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/pn-JASPAR_fimo.nofilt.out > pn-JASPAR_fimo.TEST # this was just testing using old raw fimo output
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' JASPAR_Vertebrates_2018_motifname.OGID.txt M_zebra_1e-4_JASPAR2018/fimo.txt | awk '$10!="NULL"' | awk '{print $1,$11,$12,$13,$2,$3,$4,$5,$6,$7,$8,$9}' OFS='\t' > mz-JASPAR_fimo.map
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' JASPAR_Vertebrates_2018_motifname.OGID.txt P_nyererei_1e-4_JASPAR2018/fimo.txt | awk '$10!="NULL"' | awk '{print $1,$11,$12,$14,$2,$3,$4,$5,$6,$7,$8,$9}' OFS='\t' > pn-JASPAR_fimo.map
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' JASPAR_Vertebrates_2018_motifname.OGID.txt A_burtoni_1e-4_JASPAR2018/fimo.txt | awk '$10!="NULL"' | awk '{print $1,$11,$12,$15,$2,$3,$4,$5,$6,$7,$8,$9}' OFS='\t' > ab-JASPAR_fimo.map
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' JASPAR_Vertebrates_2018_motifname.OGID.txt N_brichardi_1e-4_JASPAR2018/fimo.txt | awk '$10!="NULL"' | awk '{print $1,$11,$12,$16,$2,$3,$4,$5,$6,$7,$8,$9}' OFS='\t' > nb-JASPAR_fimo.map
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' JASPAR_Vertebrates_2018_motifname.OGID.txt O_niloticus_1e-4_JASPAR2018/fimo.txt | awk '$10!="NULL"' | awk '{print $1,$11,$12,$17,$2,$3,$4,$5,$6,$7,$8,$9}' OFS='\t' > on-JASPAR_fimo.map

# Then, filter the TFs for state-changed TFs, map geneB and add modules assignments for TF and TG using the files below

awk '$17==1 || $18==1 || $19==1 || $20==1 || $21==1' OGIDS.tx5-clusterassign_AnySwitchGene > OGIDS.tx5-clusterassign_Module1SwitchGene #681/7587 where there is a module switch from/to module 1 in any species

for i in *-JASPAR_fimo.map ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene $i | grep -v 'NO_SWITCH' > "$(basename "$i" .map).switched.map"
done

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign mz-JASPAR_fimo.switched.map | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$30,$5,$6,$7,$8,$9,$10,$11,$12,$13}' OFS='\t' > mz-JASPAR_fimo.switched.map.TMP
awk 'BEGIN{OFS="\t"}NR==FNR{a[$2]=$0;next}{if(a[$6]){print $0,a[$6];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign mz-JASPAR_fimo.switched.map.TMP | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$5,$6,$24,$26,$29,$15,$31,$7,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' > mz-JASPAR_fimo.switched.map2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign pn-JASPAR_fimo.switched.map | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$31,$5,$6,$7,$8,$9,$10,$11,$12,$13}' OFS='\t' > pn-JASPAR_fimo.switched.map.TMP
awk 'BEGIN{OFS="\t"}NR==FNR{a[$3]=$0;next}{if(a[$6]){print $0,a[$6];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign pn-JASPAR_fimo.switched.map.TMP | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$5,$6,$24,$26,$29,$15,$31,$7,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' > pn-JASPAR_fimo.switched.map2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign ab-JASPAR_fimo.switched.map | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$32,$5,$6,$7,$8,$9,$10,$11,$12,$13}' OFS='\t' > ab-JASPAR_fimo.switched.map.TMP
awk 'BEGIN{OFS="\t"}NR==FNR{a[$4]=$0;next}{if(a[$6]){print $0,a[$6];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign ab-JASPAR_fimo.switched.map.TMP | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$5,$6,$24,$26,$29,$15,$31,$7,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' > ab-JASPAR_fimo.switched.map2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign nb-JASPAR_fimo.switched.map | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$33,$5,$6,$7,$8,$9,$10,$11,$12,$13}' OFS='\t' > nb-JASPAR_fimo.switched.map.TMP
awk 'BEGIN{OFS="\t"}NR==FNR{a[$5]=$0;next}{if(a[$6]){print $0,a[$6];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign nb-JASPAR_fimo.switched.map.TMP | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$5,$6,$24,$26,$29,$15,$31,$7,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' > nb-JASPAR_fimo.switched.map2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign on-JASPAR_fimo.switched.map | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$34,$5,$6,$7,$8,$9,$10,$11,$12,$13}' OFS='\t' > on-JASPAR_fimo.switched.map.TMP
awk 'BEGIN{OFS="\t"}NR==FNR{a[$6]=$0;next}{if(a[$6]){print $0,a[$6];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign on-JASPAR_fimo.switched.map.TMP | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$5,$6,$24,$26,$29,$15,$31,$7,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' > on-JASPAR_fimo.switched.map2
rm *_fimo.switched.map.TMP

# map the raw expression value (in the eye) of the TFs
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR";}}' Mz_expr_noloss_nz_names-OGIDs.geneexp mz-JASPAR_fimo.switched.map2 | awk '{print $1,$2,$3,$4,$5,$22,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19}' OFS='\t' > mz-JASPAR_fimo.switched.map3
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR";}}' Pn_expr_noloss_nz_names-OGIDs.geneexp pn-JASPAR_fimo.switched.map2 | awk '{print $1,$2,$3,$4,$5,$22,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19}' OFS='\t' > pn-JASPAR_fimo.switched.map3
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR";}}' Ab_expr_noloss_nz_names-OGIDs.geneexp ab-JASPAR_fimo.switched.map2 | awk '{print $1,$2,$3,$4,$5,$22,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19}' OFS='\t' > ab-JASPAR_fimo.switched.map3
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR";}}' Nb_expr_noloss_nz_names-OGIDs.geneexp nb-JASPAR_fimo.switched.map2 | awk '{print $1,$2,$3,$4,$5,$22,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19}' OFS='\t' > nb-JASPAR_fimo.switched.map3
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR";}}' On_expr_noloss_nz_names-OGIDs.geneexp on-JASPAR_fimo.switched.map2 | awk '{print $1,$2,$3,$4,$5,$22,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19}' OFS='\t' > on-JASPAR_fimo.switched.map3
printf 'motifID\tgeneA_symbol\tgeneA_OGID\tgeneA_ID\tgeneA_module\tgeneA_Eye_RawExpr\tgeneB_ID\tgeneB_DrSymbol\tgeneB_GaSymbol\tgeneB_HsSymbol\tgeneB_OGID\tgeneB_OGID\tStart\tStop\tStrand\tScore\tp-val\tq-val\tsequence\tSwitch\n' > colheads
for i in *-JASPAR_fimo.switched.map3; do
  cat colheads $i > "$(basename "$i" .map3).expr.map"
done
rm *-JASPAR_fimo.map
rm *-JASPAR_fimo.switched.map
rm *-JASPAR_fimo.switched.map2
rm *-JASPAR_fimo.switched.map3
# final files to analyse are /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.1b.RetinaMotifDivergence/*.switched.expr.map

# run the above
sbatch mapping.sh #DONE

cp *-JASPAR_fimo.switched.expr.map /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.1b.RetinaMotifDivergence/ # work locally

# How many of the TFs state changed to module 1 (more motifs present?) and how many state-changed away from module 1 (at any point in the phylogeny - less present?) for geneB (TG) found in module 1; and what is the raw expression values of those TFs
# What is the comparison across species; do we see a decay of TFBSs (based on those that state-change away from module 1) and of their raw expression value

# IF statement of 1. IF TF and TG in module 1, then assign "TF-TG eye co-expressed (no state-change)" and "Species name"; 2. ELSE TG in module 1 and TF in another module (but at least one switch in phylogeny from module 1 in another species) then assign "TG eye-expressed and TF state-changed" and "Species name"
# plot title: Decay of TFBSs and TF raw expression in predicted TF-TG interactions of eye-expressed TGs
# Violin plot in R: x-axis "TF-TG eye co-expressed (no state-change)" and "TG eye-expressed and TF state-changed", main label "TF-TG interactions of eye-expressed TGs"; y-axis "raw expression value"
awk '$12==1 && $5==1' mz-JASPAR_fimo.switched.expr.map | wc -l #1816
awk '$12==1 && $5!=1' mz-JASPAR_fimo.switched.expr.map | wc -l #12126
awk '$12==1 && $5==1' pn-JASPAR_fimo.switched.expr.map | wc -l #1756
awk '$12==1 && $5!=1' pn-JASPAR_fimo.switched.expr.map | wc -l #9587
awk '$12==1 && $5==1' ab-JASPAR_fimo.switched.expr.map | wc -l #3807
awk '$12==1 && $5!=1' ab-JASPAR_fimo.switched.expr.map | wc -l #7202
awk '$12==1 && $5==1' nb-JASPAR_fimo.switched.expr.map | wc -l #1627
awk '$12==1 && $5!=1' nb-JASPAR_fimo.switched.expr.map | wc -l #5959
awk '$12==1 && $5==1' on-JASPAR_fimo.switched.expr.map | wc -l #8683
awk '$12==1 && $5!=1' on-JASPAR_fimo.switched.expr.map | wc -l #3384
# prep files for plotting in R
awk '{if($12==1 && $5==1)print $0,"TF-TG eye co-expressed (no state-change)","M. zebra";else print $0, "TG eye-expressed and TF state-changed", "M. zebra";}' OFS='\t' mz-JASPAR_fimo.switched.expr.map > mz-JASPAR_fimo.switched.expr.map2
awk '{if($12==1 && $5==1)print $0,"TF-TG eye co-expressed (no state-change)","P. nyererei";else print $0, "TG eye-expressed and TF state-changed", "P. nyererei";}' OFS='\t' pn-JASPAR_fimo.switched.expr.map > pn-JASPAR_fimo.switched.expr.map2
awk '{if($12==1 && $5==1)print $0,"TF-TG eye co-expressed (no state-change)","A. burtoni";else print $0, "TG eye-expressed and TF state-changed", "A. burtoni";}' OFS='\t' ab-JASPAR_fimo.switched.expr.map > ab-JASPAR_fimo.switched.expr.map2
awk '{if($12==1 && $5==1)print $0,"TF-TG eye co-expressed (no state-change)","N. brichardi";else print $0, "TG eye-expressed and TF state-changed", "N. brichardi";}' OFS='\t' nb-JASPAR_fimo.switched.expr.map > nb-JASPAR_fimo.switched.expr.map2
awk '{if($12==1 && $5==1)print $0,"TF-TG eye co-expressed (no state-change)","O. niloticus";else print $0, "TG eye-expressed and TF state-changed", "O. niloticus";}' OFS='\t' on-JASPAR_fimo.switched.expr.map > on-JASPAR_fimo.switched.expr.map2

cp *-JASPAR_fimo.switched.expr.map2 /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.1b.RetinaMotifDivergence/ # work locally
# Plotting here: /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.1b.RetinaMotifDivergence/1.1bRetinaMotifDivergence_plotting.R

# In each species, how many times are each TF e.g. crx (OG15312_0) and pitx3 (OG13189_0) state-changed (decay of TFBS) away from eye-expressed (module 1) genes in TF-TG interactions?
OG15312_0	mz.gene.s75.1	pn.gene.s96.17	ab.gene.s564.3	NULL	on.gene.LG10.31	ENSORLG00000000324	ENSTNIG00000011632	ENSGACG00000020178	crx	ENSDARG00000011989	crx	ENSONIG00000015806	NULL	NULL	NULL	1	1	1	NA	6 # switched in On
OG13189_0	mz.gene.s217.8	pn.gene.s196.30	ab.gene.s889.1	NULL	on.gene.UNK25.9	ENSORLG00000001148	ENSTNIG00000003142	ENSGACG00000014620	pitx3	ENSDARG00000070069	pitx3	ENSONIG00000009139	ENSG00000107859	PITX3	ENSMUSG00000025229	4	4	6	NA	4 # this will be ignored in our analyses since no switch from module 1
awk '$12==1 && $5==1 && $3=="OG15312_0"' mz-JASPAR_fimo.switched.expr.map | wc -l # 531 Mz CRX
awk '$12==1 && $5==1 && $3=="OG15312_0"' pn-JASPAR_fimo.switched.expr.map | wc -l # 469 Pn CRX
awk '$12==1 && $5==1 && $3=="OG15312_0"' ab-JASPAR_fimo.switched.expr.map | wc -l # 453 Ab CRX
awk '$12==1 && $5!=1 && $3=="OG15312_0"' on-JASPAR_fimo.switched.expr.map | wc -l # 480 On CRX - found in module 6 not 1

# Instead, since O. niloticus CRX is found in module 6, how many times are CRX TFBSs found in module 6 genes compared to other species (Mz, Pn and Nb) module 1 genes - need to prep new files

nano mapping2.sh

#!/bin/bash -e
#SBATCH -p tgac-short # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --mem 18000 # memory pool for all cores
#SBATCH -t 0-00:45 # time (D-HH:MM)
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' JASPAR_Vertebrates_2018_motifname.OGID.txt M_zebra_1e-4_JASPAR2018/fimo.txt | awk '$10!="NULL"' | awk '{print $1,$11,$12,$13,$2,$3,$4,$5,$6,$7,$8,$9}' OFS='\t' > mz-JASPAR_fimo.map
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' JASPAR_Vertebrates_2018_motifname.OGID.txt P_nyererei_1e-4_JASPAR2018/fimo.txt | awk '$10!="NULL"' | awk '{print $1,$11,$12,$14,$2,$3,$4,$5,$6,$7,$8,$9}' OFS='\t' > pn-JASPAR_fimo.map
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' JASPAR_Vertebrates_2018_motifname.OGID.txt A_burtoni_1e-4_JASPAR2018/fimo.txt | awk '$10!="NULL"' | awk '{print $1,$11,$12,$15,$2,$3,$4,$5,$6,$7,$8,$9}' OFS='\t' > ab-JASPAR_fimo.map
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' JASPAR_Vertebrates_2018_motifname.OGID.txt N_brichardi_1e-4_JASPAR2018/fimo.txt | awk '$10!="NULL"' | awk '{print $1,$11,$12,$16,$2,$3,$4,$5,$6,$7,$8,$9}' OFS='\t' > nb-JASPAR_fimo.map
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NULL";}}' JASPAR_Vertebrates_2018_motifname.OGID.txt O_niloticus_1e-4_JASPAR2018/fimo.txt | awk '$10!="NULL"' | awk '{print $1,$11,$12,$17,$2,$3,$4,$5,$6,$7,$8,$9}' OFS='\t' > on-JASPAR_fimo.map

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign mz-JASPAR_fimo.map | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$29,$5,$6,$7,$8,$9,$10,$11,$12}' OFS='\t' > mz-JASPAR_fimo.map.TMP
awk 'BEGIN{OFS="\t"}NR==FNR{a[$2]=$0;next}{if(a[$6]){print $0,a[$6];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign mz-JASPAR_fimo.map.TMP | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$5,$6,$23,$25,$28,$14,$30,$7,$8,$9,$10,$11,$12,$13}' OFS='\t' > mz-JASPAR_fimo.map2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign pn-JASPAR_fimo.map | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$30,$5,$6,$7,$8,$9,$10,$11,$12}' OFS='\t' > pn-JASPAR_fimo.map.TMP
awk 'BEGIN{OFS="\t"}NR==FNR{a[$3]=$0;next}{if(a[$6]){print $0,a[$6];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign pn-JASPAR_fimo.map.TMP | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$5,$6,$23,$25,$28,$14,$30,$7,$8,$9,$10,$11,$12,$13}' OFS='\t' > pn-JASPAR_fimo.map2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign ab-JASPAR_fimo.map | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$31,$5,$6,$7,$8,$9,$10,$11,$12}' OFS='\t' > ab-JASPAR_fimo.map.TMP
awk 'BEGIN{OFS="\t"}NR==FNR{a[$4]=$0;next}{if(a[$6]){print $0,a[$6];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign ab-JASPAR_fimo.map.TMP | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$5,$6,$23,$25,$28,$14,$30,$7,$8,$9,$10,$11,$12,$13}' OFS='\t' > ab-JASPAR_fimo.map2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign nb-JASPAR_fimo.map | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$32,$5,$6,$7,$8,$9,$10,$11,$12}' OFS='\t' > nb-JASPAR_fimo.map.TMP
awk 'BEGIN{OFS="\t"}NR==FNR{a[$5]=$0;next}{if(a[$6]){print $0,a[$6];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign nb-JASPAR_fimo.map.TMP | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$5,$6,$23,$25,$28,$14,$30,$7,$8,$9,$10,$11,$12,$13}' OFS='\t' > nb-JASPAR_fimo.map2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign on-JASPAR_fimo.map | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$33,$5,$6,$7,$8,$9,$10,$11,$12}' OFS='\t' > on-JASPAR_fimo.map.TMP
awk 'BEGIN{OFS="\t"}NR==FNR{a[$6]=$0;next}{if(a[$6]){print $0,a[$6];}else{print $0,"NOMAP";}}' OGIDS.txt5-clusterassign on-JASPAR_fimo.map.TMP | grep -v 'NOMAP'| awk '{print $1,$2,$3,$4,$5,$6,$23,$25,$28,$14,$30,$7,$8,$9,$10,$11,$12,$13}' OFS='\t' > on-JASPAR_fimo.map2
rm *_fimo.map.TMP

# map the raw expression value (in the eye) of the TFs
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR";}}' Mz_expr_noloss_nz_names-OGIDs.geneexp mz-JASPAR_fimo.map2 | awk '{print $1,$2,$3,$4,$5,$21,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18}' OFS='\t' > mz-JASPAR_fimo.map3
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR";}}' Pn_expr_noloss_nz_names-OGIDs.geneexp pn-JASPAR_fimo.map2 | awk '{print $1,$2,$3,$4,$5,$21,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18}' OFS='\t' > pn-JASPAR_fimo.map3
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR";}}' Ab_expr_noloss_nz_names-OGIDs.geneexp ab-JASPAR_fimo.map2 | awk '{print $1,$2,$3,$4,$5,$21,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18}' OFS='\t' > ab-JASPAR_fimo.map3
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR";}}' Nb_expr_noloss_nz_names-OGIDs.geneexp nb-JASPAR_fimo.map2 | awk '{print $1,$2,$3,$4,$5,$21,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18}' OFS='\t' > nb-JASPAR_fimo.map3
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,a[$3];}else{print $0,"NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR","NOEXPR";}}' On_expr_noloss_nz_names-OGIDs.geneexp on-JASPAR_fimo.map2 | awk '{print $1,$2,$3,$4,$5,$21,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18}' OFS='\t' > on-JASPAR_fimo.map3
printf 'motifID\tgeneA_symbol\tgeneA_OGID\tgeneA_ID\tgeneA_module\tgeneA_Eye_RawExpr\tgeneB_ID\tgeneB_DrSymbol\tgeneB_GaSymbol\tgeneB_HsSymbol\tgeneB_OGID\tgeneB_OGID\tStart\tStop\tStrand\tScore\tp-val\tq-val\tsequence\n' > colheads2
for i in *-JASPAR_fimo.map3; do
  cat colheads2 $i > "$(basename "$i" .map3).expr.map"
done

# run the above
sbatch mapping2.sh

# How many times are CRX TFBSs found in O. niloticus module 6 genes compared to other species (Mz, Pn and Ab) module 1 genes
awk '$2=="CRX" && $12==1' mz-JASPAR_fimo.expr.map | wc -l # 531 > 531/8239 = 6.4% CRX TFBSs found in module 1 genes
awk '$2=="CRX" && $12!=1 && $12!="NA"' mz-JASPAR_fimo.expr.map | wc -l # 7708

awk '$2=="CRX" && $12==1' pn-JASPAR_fimo.expr.map | wc -l # 469 > 531/8111 = 5.8% CRX TFBSs found in module 1 genes
awk '$2=="CRX" && $12==1' ab-JASPAR_fimo.expr.map | wc -l # 453 > 453/8237 = 5.5% CRX TFBSs found in module 1 genes

awk '$2=="CRX" && $12==6' on-JASPAR_fimo.expr.map | wc -l # 526 > 526/8639 = 6.1% CRX TFBSs found in module 6 genes
awk '$2=="CRX" && $12==1' on-JASPAR_fimo.expr.map | wc -l # 480 (5.6%) - CRX TFBS is found more times in module 6 genes than module 1 genes - decay of TFBS due to co-expression with module 6 genes

# Do this for each TF switched from On (non module 1) to module 1 in Nb/Ab/Pn/Mz - the test below will only select those in module 1 of the four species anway
awk '$21!=1 && $21!="NA" && ($17==1 || $18==1 || $19==1 || $20==1)' OGIDS.tx5-clusterassign_AnySwitchGene > OGIDS.tx5-clusterassign_Module1SwitchGene-fromON #234/7587 genes (not TFs) where there is a module switch from On to module 1 in at least one of the other species

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromON mz-JASPAR_fimo.expr.map | grep -wiF 'SWITCH' | awk '$5==1 && $12==1' | wc -l
# 1318 TF and TGs in module 1 (eye-expressed) and where there is a module switch of the TF from On (non module 1) to module 1 in M. zebra
# This shows that more TFs have switched to Mz module 1 from another module in On and are 1. co-expressed with eye-expressed genes and 2. have a predicted TFBS
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromON mz-JASPAR_fimo.expr.map | grep -wiF 'SWITCH' | awk '$5!=1 && $12==1' | wc -l
# 1051 TF not in module 1 and TG in module 1 (eye-expressed) and there is a module switch of the TF from On (non module 1) to non-module 1 in M. zebra

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromON pn-JASPAR_fimo.expr.map | grep -wiF 'SWITCH' | awk '$5==1 && $12==1' | wc -l # 674
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromON pn-JASPAR_fimo.expr.map | grep -wiF 'SWITCH' | awk '$5!=1 && $12==1' | wc -l # 1264

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromON ab-JASPAR_fimo.expr.map | grep -wiF 'SWITCH' | awk '$5==1 && $12==1' | wc -l # 1729
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromON ab-JASPAR_fimo.expr.map | grep -wiF 'SWITCH' | awk '$5!=1 && $12==1' | wc -l # 190

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromON nb-JASPAR_fimo.expr.map | grep -wiF 'SWITCH' | awk '$5==1 && $12==1' | wc -l # 718
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromON nb-JASPAR_fimo.expr.map | grep -wiF 'SWITCH' | awk '$5!=1 && $12==1' | wc -l # 605

awk '$5==1 && $12==1' on-JASPAR_fimo.expr.map | wc -l # 13,436
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$3]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromON on-JASPAR_fimo.expr.map | grep -wiF 'SWITCH' | awk '$5!=1 && $12==1' | wc -l # 2058 - this is the baseline expectation: this many TFBSs are found in O. niloticus module 1 genes even though the TF is found in another module - decay from this number of sites

# This shows that more (with the exception of P. nyererei) TFs that are state-changed to module 1 from non-module 1 in On, have TFBSs in module 1 (eye-expressed) gene promoters, than TFs that are not in module 1
# Therefore, a decay of TFBSs of non-module 1 TFs in module 1 gene promoters of the four species (with the exception of P. nyererei)

# The above is ok but it does not take into account whether the interactions are the same (orthologous)
# How to test for the gain/decay of TFBSs (just like above for CRX)
# For TFs that are found in module 1 of any species
# For the above TFs, in the species where the TF is not in module 1, how many times are their TFBSs found in module 1 genes compared to their native module
# If the number of TFBSs is higher for native module genes e.g. TF and TG in module 6, than module 1 genes AND in the other species where orthologous TF is in module 1, no. of TFBSs is higher in module 1 genes than that for module 1 genes of species with no TF in module 1, it shows a decay of TFBSs
# This can be for state-changed TFs along the phylogeny e.g. On vs NbAbPnMz; Nb vs AbPnMz; Ab vs PnMz
# Then, think of a way of plotting this against the log2(raw expression) - for every eye-expressed TG (in module1), if a TF has switched from non-module1 in one species to module1 in another species, does it's raw expression value support this i.e do you see a difference in eye expression between the two species?

# A way to do this is to create a column that is 'geneA_OGID:geneB_OGID' then awk match (adding string for match or not), then do if-else match on modules and add string for match or not
# 1. For each state-changed TFs e.g. in On, characterize how many orthologous TF-TGs exist in (A) module 1 (of MzPnAbNb) vs (B) TF(state-changed On)-TGs(module1)
# 2. If (A) is higher than (B) then gain of sites in module 1
# 3. If (A) is lower than (B) then a loss of sites in module 1 (decay)

cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.1b.RetinaMotifDivergence

for i in *-JASPAR_fimo.expr.map ; do
  awk '{print $3":"$11,$0}' OFS='\t' $i > "$(basename "$i" .map).map2"
done

# A. create the switch comparison phylogenies
awk '$21!=1 && $21!="NA" && ($17==1 || $18==1 || $19==1 || $20==1)' OGIDS.tx5-clusterassign_AnySwitchGene > OGIDS.tx5-clusterassign_Module1SwitchGene-fromON #234/7587 genes (not TFs) where there is a module switch from On to module 1 in at least one of the other species
awk '$20!=1 && $20!="NA" && ($17==1 || $18==1 || $19==1)' OGIDS.tx5-clusterassign_AnySwitchGene > OGIDS.tx5-clusterassign_Module1SwitchGene-fromNB #98/7587 genes (not TFs) where there is a module switch from Nb to module 1 in Mz/Pn/Ab
awk '$19!=1 && $19!="NA" && ($17==1 || $18==1)' OGIDS.tx5-clusterassign_AnySwitchGene > OGIDS.tx5-clusterassign_Module1SwitchGene-fromAB #94/7587 genes (not TFs) where there is a module switch from Ab to module 1 in Mz/Pn

# B. create files to analyse the switches by only selecting the TFs that have state-changed in the relevant comparison
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$4]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromON mz-JASPAR_fimo.expr.map2 | grep -wiF 'SWITCH' | cut -f1-20 > mz-JASPAR_fimo.expr.map2-fromONswitch
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$4]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromON pn-JASPAR_fimo.expr.map2 | grep -wiF 'SWITCH' | cut -f1-20 > pn-JASPAR_fimo.expr.map2-fromONswitch
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$4]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromON ab-JASPAR_fimo.expr.map2 | grep -wiF 'SWITCH' | cut -f1-20 > ab-JASPAR_fimo.expr.map2-fromONswitch
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$4]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromON nb-JASPAR_fimo.expr.map2 | grep -wiF 'SWITCH' | cut -f1-20 > nb-JASPAR_fimo.expr.map2-fromONswitch

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$4]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromNB mz-JASPAR_fimo.expr.map2 | grep -wiF 'SWITCH' | cut -f1-20 > mz-JASPAR_fimo.expr.map2-fromNBswitch
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$4]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromNB pn-JASPAR_fimo.expr.map2 | grep -wiF 'SWITCH' | cut -f1-20 > pn-JASPAR_fimo.expr.map2-fromNBswitch
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$4]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromNB ab-JASPAR_fimo.expr.map2 | grep -wiF 'SWITCH' | cut -f1-20 > ab-JASPAR_fimo.expr.map2-fromNBswitch

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$4]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromNB mz-JASPAR_fimo.expr.map2 | grep -wiF 'SWITCH' | cut -f1-20 > mz-JASPAR_fimo.expr.map2-fromABswitch
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$4]){print $0,"SWITCH";}else{print $0,"NO_SWITCH";}}' OGIDS.tx5-clusterassign_Module1SwitchGene-fromNB pn-JASPAR_fimo.expr.map2 | grep -wiF 'SWITCH' | cut -f1-20 > pn-JASPAR_fimo.expr.map2-fromABswitch

# C.
# a. match the TF:TG (from i.On, ii.Nb, iii.Ab to i.MzPnAbNb, ii.MzPnAb, iii.MzPn)
# b. then check the number of hits that are module 1 for both TF and TG in the comparison
# c. then use a collated list (from all species) of the matched TF:TG from the comparison to get the number of hits in the main species (from i.On, ii.Nb, iii.Ab) where TF (not module 1) and TG (module 1)
# d. add strings to demarcate those used for plotting - 1. orthologous and co-expressed in module 1; 2. species
  # A = Orthologous TF-TG, TF-TG module 1 (eye co-expressed) and TF state-changed from O. niloticus > For On it is "TF-TG module 1 (eye co-expressed)"
  # B = Orthologous TF-TG, TG in module 1 (eye-expressed) and TF not state-changed to module 1 from O. niloticus > For On it is "TG in module 1 (eye-expressed) and TF not in module 1"
  # C = Orthologous TF-TG, TG in module 1 (eye-expressed) and TF not in module 1 but state-changed from O. niloticus
  # D = Orthologous TF-TG, TG in module 1 (eye-expressed) and TF not state-changed
  # E = For On only it is TF-TG not module 1 (eye co-expressed)
  # NOTE: only selecting in final tables belows, A and B
# e. consider showing difference in TF raw expression (species TF minus ancestral species TF e.g. Mz vs On) $7-$28: negative value indicates a loss of expression with/without state change, positive indicates a gain of expression with/without state-change
  # - problem with this is that negative values cannot be log transformed

# cp *-JASPAR_fimo.expr.map2-from*switch /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.1b.RetinaMotifDivergence/ # work locally
# cp on-JASPAR_fimo.expr.map2-orthMzPnAbNb /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.1b.RetinaMotifDivergence/ # work locally



# i. On vs MzPnAbNb
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"ORTH",a[$1];}else{print $0,"NO_ORTH",a[$1];}}' on-JASPAR_fimo.expr.map2 mz-JASPAR_fimo.expr.map2-fromONswitch | grep -wiF 'ORTH' | awk '$13==1' | awk '{if($6==1 && $13==1)print $0,"A","M. zebra",$7-$28;else if($6==$27 && $6!=1 && $27!=1)print $0,"B", "M. zebra",$7-$28; else if($6!=$27 && $6!=1 && $27!=1)print $0,"C", "M. zebra",$7-$28; else print $0, "D", "M. zebra",$7-$28;}' OFS='\t' | awk '$42=="A" || $42=="B"' > mz-JASPAR_fimo.expr.map2-fromONswitch2 # awk '$6==1 && $13==1' 912/1576 - note: 29348 is the total lines after awk '$13==1'
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"ORTH",a[$1];}else{print $0,"NO_ORTH",a[$1];}}' on-JASPAR_fimo.expr.map2 pn-JASPAR_fimo.expr.map2-fromONswitch | grep -wiF 'ORTH' | awk '$13==1' | awk '{if($6==1 && $13==1)print $0,"A","P. nyererei",$7-$28;else if($6==$27 && $6!=1 && $27!=1)print $0,"B", "P. nyererei",$7-$28; else if($6!=$27 && $6!=1 && $27!=1)print $0,"C", "P. nyererei",$7-$28; else print $0, "D", "P. nyererei",$7-$28;}' OFS='\t' | awk '$42=="A" || $42=="B"' > pn-JASPAR_fimo.expr.map2-fromONswitch2 # awk '$6==1 && $13==1' 496/1340
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"ORTH",a[$1];}else{print $0,"NO_ORTH",a[$1];}}' on-JASPAR_fimo.expr.map2 ab-JASPAR_fimo.expr.map2-fromONswitch | grep -wiF 'ORTH' | awk '$13==1' | awk '{if($6==1 && $13==1)print $0,"A","A. burtoni",$7-$28;else if($6==$27 && $6!=1 && $27!=1)print $0,"B", "A. burtoni",$7-$28; else if($6!=$27 && $6!=1 && $27!=1)print $0,"C", "A. burtoni",$7-$28; else print $0, "D", "A. burtoni",$7-$28;}' OFS='\t' | awk '$42=="A" || $42=="B"' > ab-JASPAR_fimo.expr.map2-fromONswitch2 # awk '$6==1 && $13==1' 1161/1287
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"ORTH",a[$1];}else{print $0,"NO_ORTH",a[$1];}}' on-JASPAR_fimo.expr.map2 nb-JASPAR_fimo.expr.map2-fromONswitch | grep -wiF 'ORTH' | awk '$13==1' | awk '{if($6==1 && $13==1)print $0,"A","N. brichardi",$7-$28;else if($6==$27 && $6!=1 && $27!=1)print $0,"B", "N. brichardi",$7-$28; else if($6!=$27 && $6!=1 && $27!=1)print $0,"C", "N. brichardi",$7-$28; else print $0, "D", "N. brichardi",$7-$28;}' OFS='\t' | awk '$42=="A" || $42=="B"' > nb-JASPAR_fimo.expr.map2-fromONswitch2 # awk '$6==1 && $13==1' 452/892
cat *-JASPAR_fimo.expr.map2-fromONswitch2 | cut -f1 | sort -u > MzPnAbNb-TFTG-fromONswitch2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"ORTH","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA";}else{print $0,"NO_ORTH","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA","NA";}}' MzPnAbNb-TFTG-fromONswitch2 on-JASPAR_fimo.expr.map2 | grep -wiF 'ORTH' | awk '$13==1' | awk '{if($6==1 && $13==1)print $0,"A","O. niloticus",$7;else if($6!=1 && $13==1)print $0,"B", "O. niloticus",$7; else print $0, "E", "O. niloticus",$7;}' OFS='\t' | awk '$42=="A" || $42=="B"' > on-JASPAR_fimo.expr.map2-orthMzPnAbNb # awk '$6!=1 && $13==1' 1774
cat mz-JASPAR_fimo.expr.map2-fromONswitch2 pn-JASPAR_fimo.expr.map2-fromONswitch2 ab-JASPAR_fimo.expr.map2-fromONswitch2 nb-JASPAR_fimo.expr.map2-fromONswitch2 on-JASPAR_fimo.expr.map2-orthMzPnAbNb > MzPnAbNb-fromONandOrth-JASPAR_fimo.expr.map2
# The On file represents all the edges and TFs from which the orthologous TFs in other species have switched their module assignment
# In Mz and Ab, a large proportion (912/1524 = 51% and 1161/1524 = 65%) of TFs and their TFBSs have state-changed (from O. niloticus) and are now found as regulators of module 1 (eye-expressed genes)
# Examples include CRX(>sws1, >otx5, >wnt9b), TBX4(>) and TFE3(>)
# CRX is retinal, TBX4 is fin bud, TFE3 is immune system activation
# In Pn and Nb, the proportion is lower (28% and 25%)
# Examples include CRX(>valopb)
# Scenario B exists 159 (Mz) and 405 (Pn) and 0 times in Ab and Nb - this means there are very few instances of orthologous TF-TGs where the TG is in module 1 and switched TFs (from On) are moving to another module 1
  # this means that for orthologous TF-TG interactions, TFs favour switching to module 1
  # furthermore, the mean expression value for TFs switched to module 1 (scenario A) in Mz, Pn and Ab is higher than the expression of non-module 1 TFs in orthologous TF-TG interactions of O. niloticus
# Plot the distribution (violin plot) of the raw expression for scenarios A and B -
cp MzPnAbNb-fromONandOrth-JASPAR_fimo.expr.map2 /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.1b.RetinaMotifDivergence/ # work locally for plotting in /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments/1.1b.RetinaMotifDivergence/1.1bRetinaMotifDivergence_plotting.R



# ii. Nb vs MzPnAb
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"ORTH";}else{print $0,"NO_ORTH";}}' nb-JASPAR_fimo.expr.map2 mz-JASPAR_fimo.expr.map2-fromNBswitch | grep -wiF 'ORTH' | cut -f1-20 | awk '$6==1 && $13==1' > mz-JASPAR_fimo.expr.map2-fromNBswitch2 # awk '$6==1 && $13==1' 0/5400
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"ORTH";}else{print $0,"NO_ORTH";}}' nb-JASPAR_fimo.expr.map2 pn-JASPAR_fimo.expr.map2-fromNBswitch | grep -wiF 'ORTH' | cut -f1-20 | awk '$6==1 && $13==1' > pn-JASPAR_fimo.expr.map2-fromNBswitch2 # awk '$6==1 && $13==1' 0/5350
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"ORTH";}else{print $0,"NO_ORTH";}}' nb-JASPAR_fimo.expr.map2 ab-JASPAR_fimo.expr.map2-fromNBswitch | grep -wiF 'ORTH' | cut -f1-20 | awk '$6==1 && $13==1' > ab-JASPAR_fimo.expr.map2-fromNBswitch2 # awk '$6==1 && $13==1' 185/5314
cat *-JASPAR_fimo.expr.map2-fromNBswitch2 | cut -f1 | sort -u > MzPnAb-TFTG-fromNBswitch2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"ORTH";}else{print $0,"NO_ORTH";}}' MzPnAb-TFTG-fromNBswitch2 nb-JASPAR_fimo.expr.map2 | grep -wiF 'ORTH' | cut -f1-20 | awk '$6!=1 && $13==1' > nb-JASPAR_fimo.expr.map2-orthMzPnAb # awk '$6!=1 && $13==1' 192/192
# In Ab, a large proportion (185/192 = 96%) of TFs and their TFBSs have state-changed (from N. brichardi) and are now found as regulators of module 1 (eye-expressed genes)
# Examples include NFIL3(>tyr)
# NFIL3 is hematopoiesis

# iii. Ab vs MzPn
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"ORTH";}else{print $0,"NO_ORTH";}}' ab-JASPAR_fimo.expr.map2 mz-JASPAR_fimo.expr.map2-fromABswitch | grep -wiF 'ORTH' | cut -f1-20 | awk '$6==1 && $13==1' > mz-JASPAR_fimo.expr.map2-fromABswitch2 # awk '$6==1 && $13==1' 0/7059
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"ORTH";}else{print $0,"NO_ORTH";}}' ab-JASPAR_fimo.expr.map2 pn-JASPAR_fimo.expr.map2-fromABswitch | grep -wiF 'ORTH' | cut -f1-20 | awk '$6==1 && $13==1' > pn-JASPAR_fimo.expr.map2-fromABswitch2 # awk '$6==1 && $13==1' 0/6764
cat *-JASPAR_fimo.expr.map2-fromABswitch2 | cut -f1 | sort -u > MzPn-TFTG-fromABswitch2
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,"ORTH";}else{print $0,"NO_ORTH";}}' MzPn-TFTG-fromABswitch2 ab-JASPAR_fimo.expr.map2 | grep -wiF 'ORTH' | cut -f1-20 | awk '$6!=1 && $13==1' > ab-JASPAR_fimo.expr.map2-orthMzPn # awk '$6!=1 && $13==1' 0/0

### 1.6. Correlation of TF-TG expression to support sws1 and rho expression variation driven by selected TFs (NR2C2 and Gata2) specifically.

# test the correlation of NR2C2 and sws1 expression
# For this, it might be worthwhile to
# 1.	load networks into R
  # a.	x=read.table("<file with normalised expr_vals.txt>",head=T,row.names=1,sep="\t")
# 2.	along with log transformed normalised expression values (in eye) for each gene as used for Arboretum
# 3.	run gene-gene pearson correlation
  # a.	if col 1 is your gene column
  # b.	cor(x,method="pearson")
# 4.	Hopefully, expression patterns of sws1 and NR2C2 are most correlated in Nb
# 5.	Output a heatmap

cd ~/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/May2019_ReviewerComments
mkdir 1.6_eye_exprcorrelation
cd 1.6_eye_exprcorrelation

# A. Pull out * Mz and Nb sws1 AND * Mz, Ab and On rho TF-TG and networks and map genes to their normalized expression values (that you then log2 transform (x+1 to avoid zeroes))

# NR2C2 (OG3997_0) > sws1 (OG11366_0): this will be in Nb (nb.gene.s44.59 > nb.gene.s1.386) and Mz (mz.gene.s12.107 > mz.gene.s102.69)
# RXRB (OG1991_0) > sws1 (OG11366_0): this will be in Nb (nb.gene.s79.100 > nb.gene.s1.386) and Mz (mz.gene.s4.354 > mz.gene.s102.69)
# GATA2A (OG5052_0) > rho (OG1655_0): this will be in On (on.gene.LG5.242 > on.gene.LG20.398), Mz (mz.gene.s10.326 > mz.gene.s12.95) and Ab (ab.gene.s9.66 > ab.gene.s134.8)
# You need to add the TFs for the species where the interaction was not predicted e.g. Mz NR2C2 and RXRB > sws1 and Mz GATA2A > sws1 since we want to test whether they correlate less.

ntw=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/rewiring_files_DyNet_Marton/7.FINALedgetables_TFno1to1_TG1to1PresenceNULLOGIDS/Edge_Attributes_Collated4c.coexpr_promONLY.NEWsimplified.matrix3.filteredPresentNULLOGIDS.txt)
mzexpr=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Gene_expression_data/fromChris_notlogtransf/expression_for_Tarang/Mz_expr_noloss_nz_names-OGIDs.geneexp)
pnexpr=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Gene_expression_data/fromChris_notlogtransf/expression_for_Tarang/Pn_expr_noloss_nz_names-OGIDs.geneexp)
abexpr=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Gene_expression_data/fromChris_notlogtransf/expression_for_Tarang/Ab_expr_noloss_nz_names-OGIDs.geneexp)
nbexpr=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Gene_expression_data/fromChris_notlogtransf/expression_for_Tarang/Nb_expr_noloss_nz_names-OGIDs.geneexp)
onexpr=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Gene_expression_data/fromChris_notlogtransf/expression_for_Tarang/On_expr_noloss_nz_names-OGIDs.geneexp)

awk '$6=="OG11366_0" && $14=="1"' $ntw | awk '{print $3,$2,$6,$4,$5}' OFS='\t' > Mz_sws1_network.txt # Mz sws1
awk '$6=="OG11366_0" && $17=="1"' $ntw | awk '{print $3,$2,$6,$4,$5}' OFS='\t' > Nb_sws1_network.txt # Nb sws1
echo 'OG3997_0\tNR2C2\tOG11366_0\topn1sw1\topn1sw1' >> Mz_sws1_network.txt
echo 'OG1991_0\tRXRB\tOG11366_0\topn1sw1\topn1sw1' >> Mz_sws1_network.txt
cut -f1,2 Mz_sws1_network.txt > Mz_sws1_network.txtA
cut -f3,4 Mz_sws1_network.txt > Mz_sws1_network.txtB
cat Mz_sws1_network.txtA Mz_sws1_network.txtB | sort -u | grep -wiFv 'NA' | sed 's/NONE/TET1/' | awk '{gsub(/si:dkey-110c1.10/,"MYO5B",$2); print $0}' OFS='\t' | awk '{print $1,tolower($2)}' OFS='\t' | sed 's/_oryla//g' | sed 's/_tetng//g' | sed 's/loc100049462/nr5a2/' > Mz_sws1_network.txtC
cut -f1,2 Nb_sws1_network.txt > Nb_sws1_network.txtA
cut -f3,4 Nb_sws1_network.txt > Nb_sws1_network.txtB
cat Nb_sws1_network.txtA Nb_sws1_network.txtB | sort -u | grep -wiFv 'NA' | sed 's/NONE/foxa2/' | awk '{print $1,tolower($2)}' OFS='\t' | sed 's/_oryla//g' | sed 's/_tetng//g' | sed 's/loc100049462/nr5a2/' | sed 's/q8ay99/runx2b/' | sed 's/q2l4u4/bhlhe40/' > Nb_sws1_network.txtC

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NO_EXPR";}}' $mzexpr Mz_sws1_network.txtC | awk '{print $1"-"$2,$4,$5,$6,$7,$8,$9}' OFS='\t' > Mz_sws1_network.txtD # these have the final expression values (that then need to be log transformed)
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NO_EXPR";}}' $nbexpr Nb_sws1_network.txtC | awk '{print $1"-"$2,$4,$5,$6,$7,$8,$9}' OFS='\t' > Nb_sws1_network.txtD # these have the final expression values (that then need to be log transformed)

awk '$6=="OG1655_0" && $14=="1"' $ntw | awk '{print $3,$2,$6,$4,$5}' OFS='\t' > Mz_rho_network.txt # Mz rho
awk '$6=="OG1655_0" && $16=="1"' $ntw | awk '{print $3,$2,$6,$4,$5}' OFS='\t' > Ab_rho_network.txt # Ab rho
awk '$6=="OG1655_0" && $18=="1"' $ntw | awk '{print $3,$2,$6,$4,$5}' OFS='\t' > On_rho_network.txt # On rho
echo 'OG5052_0\tGATA2A\tOG1655_0\trho\trho' >> Mz_rho_network.txt
cut -f1,2 Mz_rho_network.txt > Mz_rho_network.txtA
cut -f3,4 Mz_rho_network.txt > Mz_rho_network.txtB
cat Mz_rho_network.txtA Mz_rho_network.txtB | sort -u | grep -wiFv 'NA' | sed 's/NONE/TET1/' | awk '{gsub(/si:dkey-110c1.10/,"MYO5B",$2); print $0}' OFS='\t' | awk '{print $1,tolower($2)}' OFS='\t' | sed 's/_oryla//g' | sed 's/_tetng//g' | sed 's/q4s9f9/crx/' > Mz_rho_network.txtC

cut -f1,2 Ab_rho_network.txt > Ab_rho_network.txtA
cut -f3,4 Ab_rho_network.txt > Ab_rho_network.txtB
cat Ab_rho_network.txtA Ab_rho_network.txtB | sort -u | grep -wiFv 'NA' | sed 's/NONE/TET1/' | awk '{gsub(/si:dkey-110c1.10/,"MYO5B",$2); print $0}' OFS='\t' | awk '{print $1,tolower($2)}' OFS='\t' | sed 's/_oryla//g' | sed 's/_tetng//g' | sed 's/q4s9f9/crx/' | sed -e '1,/gata2/{s/gata2/gata2a/;}' > Ab_rho_network.txtC

cut -f1,2 On_rho_network.txt > On_rho_network.txtA
cut -f3,4 On_rho_network.txt > On_rho_network.txtB
cat On_rho_network.txtA On_rho_network.txtB | sort -u | grep -wiFv 'NA' | sed 's/NONE/TET1/' | awk '{gsub(/si:dkey-110c1.10/,"MYO5B",$2); print $0}' OFS='\t' | awk '{print $1,tolower($2)}' OFS='\t' | sed 's/_oryla//g' | sed 's/_tetng//g' | sed 's/q4s9f9/crx/' | sed -e '1,/gata2/{s/gata2/gata2a/;}' > On_rho_network.txtC

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NO_EXPR";}}' $mzexpr Mz_rho_network.txtC | awk '{print $1"-"$2,$4,$5,$6,$7,$8,$9}' OFS='\t' > Mz_rho_network.txtD # these have the final expression values (that then need to be log transformed)
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NO_EXPR";}}' $abexpr Ab_rho_network.txtC | awk '{print $1"-"$2,$4,$5,$6,$7,$8,$9}' OFS='\t' > Ab_rho_network.txtD # these have the final expression values (that then need to be log transformed)
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NO_EXPR";}}' $onexpr On_rho_network.txtC | awk '{print $1"-"$2,$4,$5,$6,$7,$8,$9}' OFS='\t' > On_rho_network.txtD # these have the final expression values (that then need to be log transformed)

rm *txtA *txtB *txtC

# calculations and plotting here: 1.6.TFTGexpr_correlation.R


# get sws1 network for Ab and On

awk '$6=="OG11366_0" && $16=="1"' $ntw | awk '{print $3,$2,$6,$4,$5}' OFS='\t' > Ab_sws1_network.txt # Ab sws1
awk '$6=="OG11366_0" && $18=="1"' $ntw | awk '{print $3,$2,$6,$4,$5}' OFS='\t' > On_sws1_network.txt # On sws1
cut -f1,2 Ab_sws1_network.txt > Ab_sws1_network.txtA
cut -f3,4 Ab_sws1_network.txt > Ab_sws1_network.txtB
cat Ab_sws1_network.txtA Ab_sws1_network.txtB | sort -u | grep -wiFv 'NA' | sed 's/NONE/TET1/' | awk '{gsub(/si:dkey-110c1.10/,"MYO5B",$2); print $0}' OFS='\t' | awk '{print $1,tolower($2)}' OFS='\t' | sed 's/_oryla//g' | sed 's/_tetng//g' | sed 's/loc100049462/nr5a2/' > Ab_sws1_network.txtC
cut -f1,2 On_sws1_network.txt > On_sws1_network.txtA
cut -f3,4 On_sws1_network.txt > On_sws1_network.txtB
cat On_sws1_network.txtA On_sws1_network.txtB | sort -u | grep -wiFv 'NA' | sed 's/NONE/foxa2/' | awk '{print $1,tolower($2)}' OFS='\t' | sed 's/_oryla//g' | sed 's/_tetng//g' | sed 's/loc100049462/nr5a2/' | sed 's/q8ay99/runx2b/' | sed 's/q2l4u4/bhlhe40/' > On_sws1_network.txtC

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NO_EXPR";}}' $abexpr Ab_sws1_network.txtC | awk '{print $1"-"$2,$4,$5,$6,$7,$8,$9}' OFS='\t' | sed $'s/-/\t/g' > Ab_sws1_network.txtD # these have the final expression values (that then need to be log transformed)
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$1]){print $0,a[$1];}else{print $0,"NO_EXPR";}}' $onexpr On_sws1_network.txtC | awk '{print $1"-"$2,$4,$5,$6,$7,$8,$9}' OFS='\t' | sed $'s/-/\t/g' > On_sws1_network.txtD # these have the final expression values (that then need to be log transformed)

rm *txtA *txtB *txtC


##########################################################################################################################
#
# 3.	Analysis of Regulons to link regulatory and functional landscape of transcriptional modules
### YOU HAVE PRETTY MUCH DONE THIS WHEN CREATING THE MATRICES TO RUN MATRICES
#
##########################################################################################################################

#### First, reconstruct regulon matrices ####

WDpromtfbs=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2)
cd $WDpromtfbs
mkdir /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis
WD=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/)
cd $WD

nano run-regulon_v2-pt1.sh

#!/bin/bash
cd $PBS_O_WORKDIR;

# WD=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/)
# cd $WD

# Using the final TF-TG edge tables, create Q-val 0.05 filtered files that look like native fimo outputs - change all NA to NONE (just in case you do awk matching where you add NA and remove rows with NA!)
Mzwholegenome_Regulon=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-5kbprom_p1e4q0.05Regulon.txt)
Pnwholegenome_Regulon=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-5kbprom_p1e4q0.05Regulon.txt)
Abwholegenome_Regulon=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-5kbprom_p1e4q0.05Regulon.txt)
Nbwholegenome_Regulon=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-5kbprom_p1e4q0.05Regulon.txt)
Onwholegenome_Regulon=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-5kbprom_p1e4q0.05Regulon.txt)

awk '{print $5,$1,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/mz-motifenr_mergedmap2d.txt | sed 's/NA/NONE/g' > $Mzwholegenome_Regulon # DONE
awk '{print $5,$1,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/pn-motifenr_mergedmap2d.txt | sed 's/NA/NONE/g' > $Pnwholegenome_Regulon # DONE
awk '{print $5,$1,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/ab-motifenr_mergedmap2d.txt | sed 's/NA/NONE/g' > $Abwholegenome_Regulon # DONE
awk '{print $5,$1,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/nb-motifenr_mergedmap2d.txt | sed 's/NA/NONE/g' > $Nbwholegenome_Regulon # DONE
awk '{print $5,$1,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/on-motifenr_mergedmap2d.txt | sed 's/NA/NONE/g' > $Onwholegenome_Regulon # DONE

# # 5kb promoter fimo motif scans here:
# Mzwholegenome_fimo=(/tgac/workarea/group-vh/Tarang/Cichlid_GRNs/motif_discovery/promoters/mzebra_promoters/mzebra_promoters-fimo.txt)
# Pnwholegenome_fimo=(/tgac/workarea/group-vh/Tarang/Cichlid_GRNs/motif_discovery/promoters/pnyererei_promoters/pnyererei_promoters-fimo.txt)
# Abwholegenome_fimo=(/tgac/workarea/group-vh/Tarang/Cichlid_GRNs/motif_discovery/promoters/aburtoni_promoters/aburtoni_promoters-fimo.txt)
# Nbwholegenome_fimo=(/tgac/workarea/group-vh/Tarang/Cichlid_GRNs/motif_discovery/promoters/nbrichardi_promoters/nbrichardi_promoters-fimo.txt)
# Onwholegenome_fimo=(/tgac/workarea/group-vh/Tarang/Cichlid_GRNs/motif_discovery/promoters/oniloticus_promoters/oniloticus_promoters-fimo.txt)
#
# # Q-val 0.5 filtered 5kb promoter fimo motif scans here:
# Mzwholegenome_Regulon=(/tgac/scratch/mehtat/Cichlid_GRNs/motif_discovery/promoters/1e-4/mzebra_1e4promoters/Mz-wholegenome_p1e4q0.1Regulon.txt)
# Pnwholegenome_Regulon=(/tgac/scratch/mehtat/Cichlid_GRNs/motif_discovery/promoters/1e-4/pnyererei_1e4promoters/Pn-wholegenome_p1e4q0.1Regulon.txt)
# Abwholegenome_Regulon=(/tgac/scratch/mehtat/Cichlid_GRNs/motif_discovery/promoters/1e-4/aburtoni_1e4promoters/Ab-wholegenome_p1e4q0.1Regulon.txt)
# Nbwholegenome_Regulon=(/tgac/scratch/mehtat/Cichlid_GRNs/motif_discovery/promoters/1e-4/nbrichardi_1e4promoters/Nb-wholegenome_p1e4q0.1Regulon.txt)
# Onwholegenome_Regulon=(/tgac/scratch/mehtat/Cichlid_GRNs/motif_discovery/promoters/1e-4/oniloticus_1e4promoters/On-wholegenome_p1e4q0.1Regulon.txt)

# Now, convert the outputs into per-species regulon tables (TF-target gene)

# First, we need a TFBS mapped to OGIDs file
# Use simplified mapping file based on Will p-val file (created during NetworkReconstruction_v5_simplified.sh)
TFBS_OGIDs3=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/merged_mat_qual_pvals_ALL.out1.TF) # THIS IS THE FINAL TFBS_MAPPING FILE THAT YOU SHOULD USE AND THE SPECIES ONES ARE BELOW
# create species-specific files that are TF_cichlid_ID;motif_pattern; OGID; TF_Gene_symbol
TFBSmappingMz=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/TFBS_OGIDs3-allMz.txt)
awk '{print $2,$7,$9,$1}' OFS='\t' $TFBS_OGIDs3 > $TFBSmappingMz
TFBSmappingPn=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/TFBS_OGIDs3-allPn.txt)
awk '{print $3,$7,$9,$1}' OFS='\t' $TFBS_OGIDs3 > $TFBSmappingPn
TFBSmappingAb=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/TFBS_OGIDs3-allAb.txt)
awk '{print $4,$7,$9,$1}' OFS='\t' $TFBS_OGIDs3 > $TFBSmappingAb
TFBSmappingNb=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/TFBS_OGIDs3-allNb.txt)
awk '{print $5,$7,$9,$1}' OFS='\t' $TFBS_OGIDs3 > $TFBSmappingNb
TFBSmappingOn=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/TFBS_OGIDs3-allOn.txt)
awk '{print $6,$7,$9,$1}' OFS='\t' $TFBS_OGIDs3 > $TFBSmappingOn

# cluster assignment files (col1 - gene ID; col2 - module)
pnmod=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Pn-speciesspecnames_clusterassign.txt)
mzmod=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Mz-speciesspecnames_clusterassign.txt)
abmod=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Ab-speciesspecnames_clusterassign.txt)
nbmod=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Nb-speciesspecnames_clusterassign.txt)
onmod=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/On-speciesspecnames_clusterassign.txt)

# 1. filter regulon tables to only include genes present in modules

## You need to mark TFs where they are present in certain species, but not others - then ensure they are not removed from the species regulon where they are not present > For this you should output MOTIF pattern in table too, then use that to keep in main file
Mz_NULL=$WD$(echo $(basename $TFBSmappingMz) | sed -e 's/.txt/NULL.txt/')
grep -wiF NULL $TFBSmappingMz | cut -f1 > $Mz_NULL
Pn_NULL=$WD$(echo $(basename $TFBSmappingPn) | sed -e 's/.txt/NULL.txt/')
grep -wiF NULL $TFBSmappingPn | cut -f1 > $Pn_NULL
Ab_NULL=$WD$(echo $(basename $TFBSmappingAb) | sed -e 's/.txt/NULL.txt/')
grep -wiF NULL $TFBSmappingAb | cut -f1 > $Ab_NULL
Nb_NULL=$WD$(echo $(basename $TFBSmappingNb) | sed -e 's/.txt/NULL.txt/')
grep -wiF NULL $TFBSmappingNb | cut -f1 > $Nb_NULL
On_NULL=$WD$(echo $(basename $TFBSmappingOn) | sed -e 's/.txt/NULL.txt/')
grep -wiF NULL $TFBSmappingOn | cut -f1 > $On_NULL

# Create new Regulon tables that have the gene symbol for the TF, plus include the TF orthologs that are present in another species
# First output: motif_pattern; TF_OGID; TF_cichlid_ID; TF_gene_symbol; TG_cichlid_ID | Second output: motif_pattern; TF_OGID; TF_cichlid_ID; TF_gene_symbol; TG_cichlid_ID; species_ID |
# Third output: species_ID; motif_pattern; TF_OGID; TF_cichlid_ID; TF_gene_symbol; TG_cichlid_ID > tmp1/2/3

Mztmp=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp/')
Mztmp2=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp2/')
Mztmp3=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp3/')
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL","NULL","NULL","NULL";}}' $TFBSmappingMz $Mzwholegenome_Regulon | awk '{print $11,$12,$1,$13,$2}' OFS='\t' | awk -v OFS="\t" 'NR==1{print $0, "Mz";next}{print $0,"Mz"}' | awk '{print $6,$1,$2,$3,$4,$5}' OFS='\t' > $Mztmp ; grep -f $Mz_NULL $Mztmp > $Mztmp2 ; cat $Mztmp $Mztmp2 > $Mztmp3 ; rm $Mztmp $Mztmp2 #| awk '$4 != "NULL"' - removed after cat to retain all TF loss

Pntmp=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp/')
Pntmp2=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp2/')
Pntmp3=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp3/')
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL","NULL","NULL","NULL";}}' $TFBSmappingPn $Pnwholegenome_Regulon | awk '{print $11,$12,$1,$13,$2}' OFS='\t' | awk -v OFS="\t" 'NR==1{print $0, "Pn";next}{print $0,"Pn"}' | awk '{print $6,$1,$2,$3,$4,$5}' OFS='\t' > $Pntmp ; grep -f $Pn_NULL $Pntmp > $Pntmp2 ; cat $Pntmp $Pntmp2 > $Pntmp3 ; rm $Pntmp $Pntmp2 #| awk '$4 != "NULL"' - removed after cat to retain all TF loss

Abtmp=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp/')
Abtmp2=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp2/')
Abtmp3=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp3/')
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL","NULL","NULL","NULL";}}' $TFBSmappingAb $Abwholegenome_Regulon | awk '{print $11,$12,$1,$13,$2}' OFS='\t' | awk -v OFS="\t" 'NR==1{print $0, "Ab";next}{print $0,"Ab"}' | awk '{print $6,$1,$2,$3,$4,$5}' OFS='\t' > $Abtmp ; grep -f $Ab_NULL $Abtmp > $Abtmp2 ; cat $Abtmp $Abtmp2 > $Abtmp3 ; rm $Abtmp $Abtmp2 #| awk '$4 != "NULL"' - removed after cat to retain all TF loss

Nbtmp=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp/')
Nbtmp2=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp2/')
Nbtmp3=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp3/')
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL","NULL","NULL","NULL";}}' $TFBSmappingNb $Nbwholegenome_Regulon | awk '{print $11,$12,$1,$13,$2}' OFS='\t' | awk -v OFS="\t" 'NR==1{print $0, "Nb";next}{print $0,"Nb"}' | awk '{print $6,$1,$2,$3,$4,$5}' OFS='\t' > $Nbtmp ; grep -f $Nb_NULL $Nbtmp > $Nbtmp2 ; cat $Nbtmp $Nbtmp2 > $Nbtmp3 ; rm $Nbtmp $Nbtmp2 #| awk '$4 != "NULL"' - removed after cat to retain all TF loss

Ontmp=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp/')
Ontmp2=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp2/')
Ontmp3=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp3/')
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL","NULL","NULL","NULL";}}' $TFBSmappingOn $Onwholegenome_Regulon | awk '{print $11,$12,$1,$13,$2}' OFS='\t' | awk -v OFS="\t" 'NR==1{print $0, "On";next}{print $0,"On"}' | awk '{print $6,$1,$2,$3,$4,$5}' OFS='\t' > $Ontmp ; grep -f $On_NULL $Ontmp > $Ontmp2 ; cat $Ontmp $Ontmp2 > $Ontmp3 ; rm $Ontmp $Ontmp2 #| awk '$4 != "NULL"' - removed after cat to retain all TF loss

## After you have these regulon files,
# A. Genome/mapping presence/absence: any TFs that have NULL for ID are not in genome/no mapped, in next column add 0 = absent, if ID is present then mark as 1 in next column, present in genome.

# 0. you should include all the NULL from motif matching - this would be 0, absent for TF column; process seperate first for absence then add below
# Note, that all TFs which are specifically absent in the species only will also be marked as 0
# Output: species_ID; motif_pattern; TF_OGID; TF_cichlid_ID; TF_gene_symbol; TF_genome_presence-absence; TG_cichlid_ID
Mztmp7=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp7/')
awk '{if ($4=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp3 | awk '{print $1,$2,$3,$4,$5,$7,$6}' OFS='\t' > $Mztmp7
Pntmp7=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp7/')
awk '{if ($4=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp3 | awk '{print $1,$2,$3,$4,$5,$7,$6}' OFS='\t' > $Pntmp7
Abtmp7=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp7/')
awk '{if ($4=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp3 | awk '{print $1,$2,$3,$4,$5,$7,$6}' OFS='\t' > $Abtmp7
Nbtmp7=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp7/')
awk '{if ($4=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp3 | awk '{print $1,$2,$3,$4,$5,$7,$6}' OFS='\t' > $Nbtmp7
Ontmp7=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp7/')
awk '{if ($4=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp3 | awk '{print $1,$2,$3,$4,$5,$7,$6}' OFS='\t' > $Ontmp7

# B. Module assignment presence/absence - assign to module then output module number then 1 (present) in next column, no assignment then output NULL and 0 (absent) in next column
fullorthologs=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5) # Actually has 15 columns (previous files and what scripts below were prepared for was a file with 14 columns), last is Hs gene symbol but excluding below to retain old scripts
fullorthologsmz=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-mz)
awk '{print $2,$1,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' $fullorthologs > $fullorthologsmz
fullorthologspn=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-pn)
awk '{print $3,$1,$2,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' $fullorthologs > $fullorthologspn
fullorthologsab=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-ab)
awk '{print $4,$1,$2,$3,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' $fullorthologs > $fullorthologsab
fullorthologsnb=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-nb)
awk '{print $5,$1,$2,$3,$4,$6,$7,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' $fullorthologs > $fullorthologsnb
fullorthologson=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/OGIDS.txt5-on)
awk '{print $6,$1,$2,$3,$4,$5,$7,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' $fullorthologs > $fullorthologson

#### Mz
# $fullorthologs file, col1 = Mz, col2 = Pn, col3 = Ab, col4 = Nb, col5 = On
	#1. you need to map to orthologs to map to their module number
	Mztmp8=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp8/')
	Mztmp9=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp9/')
	Mztmp10=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp10/')
	Mztmp11=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp11/')
	Mztmp12=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp12/')
	Mztmp13=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp13/')
	Mztmp14=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp14/')
	Mztmp15=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp15/')
	Mztmp16=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp16/')
	Mztmp17=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp17/')
	Mztmp18=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp18/')
	Mztmp19=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp19/')
	Mztmp20=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp20/')
	Mztmp21=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp21/')
	Mztmp22=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp22/')
	Mztmp23=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp23/')
	Mztmp24=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp24/')
	Mztmp25=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp25/')
	Mztmp26=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp26/')
	Mztmp27=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp27/')
	Mztmp28=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp28/')
	Mztmp29=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp29/')
	Mztmp30=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp30/')
	Mztmp31=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp31/')
	Mztmp32=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp32/')
	Mztmp33=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp33/')
	Mztmp34=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp34/')
	Mztmp35=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp35/')
	Mztmp36=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp36/')
	Mztmp37=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp37/')
	Mztmp38=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp38/')
	Mztmp39=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp39/')
	Mztmp40=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp40/')
	Mztmp41=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp41/')
	Mztmp42=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp42/')
	Mztmp43=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp43/')
	Mztmp44=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp44/')
	Mztmp45=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp45/')
	Mztmp46=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp46/')
	Mztmp47=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp47/')
	cut -f4 $Mztmp7 > $Mztmp8
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0;}}' $fullorthologsmz $Mztmp8 | awk '{if ($1=="NULL")print "NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL"; else{print $0;}}' OFS="\t" | cut -f2,4-10,12,14-15 > $Mztmp9 # NEED TO CHECK FIRST COLUMN (THOSE THAT SHOULD NOT MAP) AND FILL 15 NULL'S
	cut -f1 $Mztmp9 > $Mztmp10 #Mz
	cut -f2 $Mztmp9 > $Mztmp11 #Pn
	cut -f3 $Mztmp9 > $Mztmp12 #Ab
	cut -f4 $Mztmp9 > $Mztmp13 #Nb
	cut -f5 $Mztmp9 > $Mztmp14 #On
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $mzmod $Mztmp10 | cut -f2 > $Mztmp15 ; paste -d'\t' $Mztmp9 $Mztmp15 | awk '{print $1,$12,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11}' OFS='\t' > $Mztmp16
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $pnmod $Mztmp11 | cut -f2 > $Mztmp17 ; paste -d'\t' $Mztmp16 $Mztmp17 | awk '{print $1,$2,$3,$13,$4,$5,$6,$7,$8,$9,$10,$11,$12}' OFS='\t' > $Mztmp18
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $abmod $Mztmp12 | cut -f2 > $Mztmp19 ; paste -d'\t' $Mztmp18 $Mztmp19 | awk '{print $1,$2,$3,$4,$5,$14,$6,$7,$8,$9,$10,$11,$12,$13}' OFS='\t' > $Mztmp20
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $nbmod $Mztmp13 | cut -f2 > $Mztmp21 ; paste -d'\t' $Mztmp20 $Mztmp21 | awk '{print $1,$2,$3,$4,$5,$6,$7,$15,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' > $Mztmp22
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $onmod $Mztmp14 | cut -f2 > $Mztmp23 ; paste -d'\t' $Mztmp22 $Mztmp23 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$16,$10,$11,$12,$13,$14,$15}' OFS='\t' > $Mztmp24
paste -d'\t' $Mztmp7 $Mztmp24 > $Mztmp25 ; cut -f7 $Mztmp25 > $Mztmp26 # paste the module mapping to main table; cut target gene column to map

# target gene ID means that it is present in the genome, just need to map to module, if maps then 1 = present co-expressed, if NULL the 0 = absent
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $mzmod $Mztmp26 | awk '{if ($2=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" > $Mztmp27

# Get orthologs of TG
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $fullorthologsmz $Mztmp26 | cut -f2-10,12,14-15 > $Mztmp28 # NEED TO FILL 14 NULL'S FOR NON-MAPPED
	cut -f3 $Mztmp28 > $Mztmp29 #Pn
	cut -f4 $Mztmp28 > $Mztmp30 #Ab
	cut -f5 $Mztmp28 > $Mztmp31 #Nb
	cut -f6 $Mztmp28 > $Mztmp32 #On
	paste -d'\t' $Mztmp27 $Mztmp28 > $Mztmp33
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $pnmod $Mztmp29 | cut -f2 > $Mztmp34 ; paste -d'\t' $Mztmp33 $Mztmp34 | awk '{print $1,$2,$3,$4,$5,$6,$16,$7,$8,$9,$10,$11,$12,$13,$14,$15}' OFS='\t' > $Mztmp35
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $abmod $Mztmp30 | cut -f2 > $Mztmp36 ; paste -d'\t' $Mztmp35 $Mztmp36 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$17,$9,$10,$11,$12,$13,$14,$15,$16}' OFS='\t' > $Mztmp37
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $nbmod $Mztmp31 | cut -f2 > $Mztmp38 ; paste -d'\t' $Mztmp37 $Mztmp38 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$18,$11,$12,$13,$14,$15,$16,$17}' OFS='\t' > $Mztmp39
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $onmod $Mztmp32 | cut -f2 > $Mztmp40 ; paste -d'\t' $Mztmp39 $Mztmp40 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$19,$13,$14,$15,$16,$17,$18}' OFS='\t' > $Mztmp41
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $fullorthologsmz $Mztmp26 | cut -f11,13 > $Mztmp42 # map TG to gene symbol - add 14 NULL's for non mapped

### all of these equal 44 columns - $Mztmp25-22 cols; $Mztmp41-18 cols; $Mztmp42-2 cols;
paste -d'\t' $Mztmp25 $Mztmp41 $Mztmp42 | awk '{print $1,$2,$3,$4,$5,$6,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$28,$24,$43,$44,$26,$25,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42}' OFS='\t' > $Mztmp43 ## Paste all together, this will be the table for Mz to take to co-expression and module switch mapping below - total of 41 columns now

## NEXT, TO ADD:
# 1. Coexpression of TF and TG - only for the species
# a. pull out rows where col7 (TF module) and col27 (TG module) = NULL, then add 0, for absent coexpression
awk '$7=="NULL" && $27=="NULL"' $Mztmp43 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp44
# b. for the remaining rows where TF and/or TG are in modules, if module matches add 1 for co-expressed, if not, add 0 for not co-expressed
awk '$7 !="NULL" || $27 !="NULL"' $Mztmp43 OFS="\t" > $Mztmp45 # create a file that does not contain NULL for TF and TG modules to run on below
awk '{if ($7==$27)print $0,"1"; else{print $0,"0";}}' OFS="\t" $Mztmp45 > $Mztmp46
cat $Mztmp46 $Mztmp44 > $Mztmp47 # Note: the order of the file is different now - col42 is coexpression

# 2. Module switching of TF (1=switch; 0=no switch) - NULL>NULL=0, NULL>moduleX=0, moduleX>NULL=0, moduleX>moduleX2=1, moduleX2>moduleX=1

# Mz-Pn:col7-9
	Mztmp48=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp48/')
	Mztmp49=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp49/')
	Mztmp50=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp50/')
	Mztmp51=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp51/')
awk '$7=="NULL" || $9=="NULL"' $Mztmp47 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp48 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $9 !="NULL"' $Mztmp47 OFS="\t" > $Mztmp49 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$9)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp49 > $Mztmp50
cat $Mztmp50 $Mztmp48 > $Mztmp51 #43rd col is Mz-Pn switch

# Mz-Ab:col7-11
	Mztmp52=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp52/')
	Mztmp53=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp53/')
	Mztmp54=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp54/')
	Mztmp55=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp55/')
awk '$7=="NULL" || $11=="NULL"' $Mztmp51 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp52 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $11 !="NULL"' $Mztmp51 OFS="\t" > $Mztmp53 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$11)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp53 > $Mztmp54
cat $Mztmp54 $Mztmp52 > $Mztmp55 #44th col is Mz-Ab switch

# Mz-Nb:col7-13
	Mztmp56=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp56/')
	Mztmp57=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp57/')
	Mztmp58=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp58/')
	Mztmp59=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp59/')
awk '$7=="NULL" || $13=="NULL"' $Mztmp55 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp56 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $13 !="NULL"' $Mztmp55 OFS="\t" > $Mztmp57 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$13)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp57 > $Mztmp58
cat $Mztmp58 $Mztmp56 > $Mztmp59 #45th col is Mz-Nb switch

# Mz-On:col7-15
	Mztmp60=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp60/')
	Mztmp61=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp61/')
	Mztmp62=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp62/')
	Mztmp63=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp63/')
awk '$7=="NULL" || $15=="NULL"' $Mztmp59 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp60 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $15 !="NULL"' $Mztmp59 OFS="\t" > $Mztmp61 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp61 > $Mztmp62
cat $Mztmp62 $Mztmp60 > $Mztmp63 #46th col is Mz-On switch

# Pn-Ab:col9-11
	Mztmp64=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp64/')
	Mztmp65=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp65/')
	Mztmp66=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp66/')
	Mztmp67=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp67/')
awk '$9=="NULL" || $11=="NULL"' $Mztmp63 | awk '{if ($9=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp64 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$9 !="NULL" && $11 !="NULL"' $Mztmp63 OFS="\t" > $Mztmp65 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($9==$11)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp65 > $Mztmp66
cat $Mztmp66 $Mztmp64 > $Mztmp67 #47th col is Pn-Ab switch

# Pn-Nb:col9-13
	Mztmp68=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp68/')
	Mztmp69=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp69/')
	Mztmp70=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp70/')
	Mztmp71=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp71/')
awk '$9=="NULL" || $13=="NULL"' $Mztmp67 | awk '{if ($9=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp68 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$9 !="NULL" && $13 !="NULL"' $Mztmp67 OFS="\t" > $Mztmp69 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($9==$13)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp69 > $Mztmp70
cat $Mztmp70 $Mztmp68 > $Mztmp71 #48th col is Pn-Nb switch

# Pn-On:col9-15
	Mztmp72=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp72/')
	Mztmp73=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp73/')
	Mztmp74=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp74/')
	Mztmp75=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp75/')
awk '$9=="NULL" || $15=="NULL"' $Mztmp71 | awk '{if ($9=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp72 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$9 !="NULL" && $15 !="NULL"' $Mztmp71 OFS="\t" > $Mztmp73 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($9==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp73 > $Mztmp74
cat $Mztmp74 $Mztmp72 > $Mztmp75 #49th col is Pn-On switch

# Ab-Nb:col11-13
	Mztmp76=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp76/')
	Mztmp77=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp77/')
	Mztmp78=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp78/')
	Mztmp79=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp79/')
awk '$11=="NULL" || $13=="NULL"' $Mztmp75 | awk '{if ($11=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp76 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$11 !="NULL" && $13 !="NULL"' $Mztmp75 OFS="\t" > $Mztmp77 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($11==$13)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp77 > $Mztmp78
cat $Mztmp78 $Mztmp76 > $Mztmp79 #50th col is Ab-Nb switch

# Ab-On:col11-15
	Mztmp80=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp80/')
	Mztmp81=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp81/')
	Mztmp82=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp82/')
	Mztmp83=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp83/')
awk '$11=="NULL" || $15=="NULL"' $Mztmp79 | awk '{if ($11=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp80 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$11 !="NULL" && $15 !="NULL"' $Mztmp79 OFS="\t" > $Mztmp81 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($11==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp81 > $Mztmp82
cat $Mztmp82 $Mztmp80 > $Mztmp83 #51st col is Ab-On switch

# Nb-On:col13-15
	Mztmp84=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp84/')
	Mztmp85=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp85/')
	Mztmp86=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp86/')
	Mztmp87=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp87/')
awk '$13=="NULL" || $15=="NULL"' $Mztmp83 | awk '{if ($13=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp84 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$13 !="NULL" && $15 !="NULL"' $Mztmp83 OFS="\t" > $Mztmp85 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($13==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp85 > $Mztmp86
cat $Mztmp86 $Mztmp84 > $Mztmp87 #52nd col is Nb-On switch
# final file that includes TF module switching columns


# 3. Module switching of TG (1=switch; 0=no switch)

# Mz-Pn:col27-29
	Mztmp88=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp88/')
	Mztmp89=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp89/')
	Mztmp90=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp90/')
	Mztmp91=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp91/')
awk '$27=="NULL" || $29=="NULL"' $Mztmp87 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp88 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $29 !="NULL"' $Mztmp87 OFS="\t" > $Mztmp89 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$29)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp89 > $Mztmp90
cat $Mztmp90 $Mztmp88 > $Mztmp91 #51st col is Mz-Pn switch
# Mz-Ab:col27-31
	Mztmp92=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp92/')
	Mztmp93=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp93/')
	Mztmp94=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp94/')
	Mztmp95=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp95/')
awk '$27=="NULL" || $31=="NULL"' $Mztmp91 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp92 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $31 !="NULL"' $Mztmp91 OFS="\t" > $Mztmp93 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$31)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp93 > $Mztmp94
cat $Mztmp94 $Mztmp92 > $Mztmp95 #52nd col is Mz-Ab switch
# Mz-Nb:col27-33
	Mztmp96=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp96/')
	Mztmp97=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp97/')
	Mztmp98=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp98/')
	Mztmp99=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp99/')
awk '$27=="NULL" || $33=="NULL"' $Mztmp95 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp96 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $33 !="NULL"' $Mztmp95 OFS="\t" > $Mztmp97 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$33)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp97 > $Mztmp98
cat $Mztmp98 $Mztmp96 > $Mztmp99 #53rd col is Mz-Nb switch
# Mz-On:col27-35
	Mztmp100=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp100/')
	Mztmp101=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp101/')
	Mztmp102=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp102/')
	Mztmp103=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp103/')
awk '$27=="NULL" || $35=="NULL"' $Mztmp99 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp100 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $35 !="NULL"' $Mztmp99 OFS="\t" > $Mztmp101 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp101 > $Mztmp102
cat $Mztmp102 $Mztmp100 > $Mztmp103 #54th col is Mz-On switch
# Pn-Ab:col29-31
	Mztmp104=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp104/')
	Mztmp105=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp105/')
	Mztmp106=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp106/')
	Mztmp107=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp107/')
awk '$29=="NULL" || $31=="NULL"' $Mztmp103 | awk '{if ($29=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp104 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$29 !="NULL" && $31 !="NULL"' $Mztmp103 OFS="\t" > $Mztmp105 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($29==$31)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp105 > $Mztmp106
cat $Mztmp106 $Mztmp104 > $Mztmp107 #55th col is Pn-Ab switch
# Pn-Nb:col29-33
	Mztmp108=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp108/')
	Mztmp109=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp109/')
	Mztmp110=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp110/')
	Mztmp111=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp111/')
awk '$29=="NULL" || $33=="NULL"' $Mztmp107 | awk '{if ($29=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp108 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$29 !="NULL" && $33 !="NULL"' $Mztmp107 OFS="\t" > $Mztmp109 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($29==$33)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp109 > $Mztmp110
cat $Mztmp110 $Mztmp108 > $Mztmp111 #56th col is Pn-Nb switch
# Pn-On:col29-35
	Mztmp112=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp112/')
	Mztmp113=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp113/')
	Mztmp114=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp114/')
	Mztmp115=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp115/')
awk '$29=="NULL" || $35=="NULL"' $Mztmp111 | awk '{if ($29=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp112 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$29 !="NULL" && $35 !="NULL"' $Mztmp111 OFS="\t" > $Mztmp113 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($29==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp113 > $Mztmp114
cat $Mztmp114 $Mztmp112 > $Mztmp115 #57th col is Pn-On switch
# Ab-Nb:col31-33
	Mztmp116=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp116/')
	Mztmp117=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp117/')
	Mztmp118=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp118/')
	Mztmp119=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp119/')
awk '$31=="NULL" || $33=="NULL"' $Mztmp115 | awk '{if ($31=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp116 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$31 !="NULL" && $33 !="NULL"' $Mztmp115 OFS="\t" > $Mztmp117 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($31==$33)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp117 > $Mztmp118
cat $Mztmp118 $Mztmp116 > $Mztmp119 #58th col is Ab-Nb switch
# Ab-On:col31-35
	Mztmp120=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp120/')
	Mztmp121=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp121/')
	Mztmp122=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp122/')
	Mztmp123=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp123/')
awk '$31=="NULL" || $35=="NULL"' $Mztmp119 | awk '{if ($31=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp120 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$31 !="NULL" && $35 !="NULL"' $Mztmp119 OFS="\t" > $Mztmp121 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($31==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp121 > $Mztmp122
cat $Mztmp122 $Mztmp120 > $Mztmp123 #59th col is Ab-On switch
# Nb-On:col33-35
	Mztmp124=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp124/')
	Mztmp125=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp125/')
	Mztmp126=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp126/')
	Mztmp127=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp127/')
awk '$33=="NULL" || $35=="NULL"' $Mztmp123 | awk '{if ($33=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Mztmp124 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$33 !="NULL" && $35 !="NULL"' $Mztmp123 OFS="\t" > $Mztmp125 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($33==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Mztmp125 > $Mztmp126
cat $Mztmp126 $Mztmp124 > $Mztmp127 #60th col is Nb-On switch
# final file that includes TF and now TG module switching columns

## Check lowest and highest number of columns in rows of a file to ensure no blank cells or spaces
#awk '{print NF}' $Mztmp127 | sort -nu | head -n 1 # lowest - 62 (correct)
#awk '{print NF}' $Mztmp127 | sort -nu | tail -n 1 # highest - 62 (correct)

## Add column headers - check this
printf 'species\tmotif_pattern\tTF_OGid\tTF_id\tTF_symbol\tTF_presence\tTF_module\tTF_Pn_ortholog\tTF_Pn_module\tTF_Ab_ortholog\tTF_Ab_module\tTF_Nb_ortholog\tTF_Nb_module\tTF_On_ortholog\tTF_On_module\tTF_medaka_ortholog\tTF_tetraodon_ortholog\tTF_stickleback_ortholog\tTF_zebrafish_ortholog\tTF_niloticus_ortholog\tTF_human_ortholog\tTG_OGid\tTG_id\tTG_Dr_symbol\tTG_Ga_symbol\tTG_presence\tTG_module\tTG_Pn_ortholog\tTG_Pn_module\tTG_Ab_ortholog\tTG_Ab_module\tTG_Nb_ortholog\tTG_Nb_module\tTG_On_ortholog\tTG_On_module\tTG_medaka_ortholog\tTG_tetraodon_ortholog\tTG_stickleback_ortholog\tTG_zebrafish_ortholog\tTG_niloticus_ortholog\tTG_human_ortholog\tTF-TG_coexpressed\tTF_Mz-Pn_switch\tTF_Mz-Ab_switch\tTF_Mz-Nb_switch\tTF_Mz-On_switch\tTF_Pn-Ab_switch\tTF_Pn-Nb_switch\tTF_Pn-On_switch\tTF_Ab-Nb_switch\tTF_Ab-On_switch\tTF_Nb-On_switch\tTG_Mz-Pn_switch\tTG_Mz-Ab_switch\tTG_Mz-Nb_switch\tTG_Mz-On_switch\tTG_Pn-Ab_switch\tTG_Pn-Nb_switch\tTG_Pn-On_switch\tTG_Ab-Nb_switch\tTG_Ab-On_switch\tTG_Nb-On_switch\n' > Mz_colheaders

	Mztmp128=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp128/')
cat Mz_colheaders $Mztmp127 > $Mztmp128

## Expand TF_presence(col6) and TG_presence (col26) columns to *_presence_genome (if present in full_orthologs file) and *_presence_module
# Use TF_id (col4) and TG_id (col23)
	Mztmp129=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp129/')
	Mztmp130=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp130/')
cut -f4 $Mztmp128 > $Mztmp129
cut -f23 $Mztmp128 > $Mztmp130

	Mztmp131=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp131/')
	Mztmp132=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp132/')
	Mztmp133=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp133/')
	Mztmp134=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp134/')
	Mztmp135=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp135/')
# use species specific fullorthologs file (needs to be first column)
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $fullorthologsmz $Mztmp129 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TF_presence_genome' > $Mztmp131
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $mzmod $Mztmp129 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TF_presence_module' > $Mztmp132
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $fullorthologsmz $Mztmp130 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TG_presence_genome' > $Mztmp133
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $mzmod $Mztmp130 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TG_presence_module' > $Mztmp134

paste -d'\t' $Mztmp128 $Mztmp131 $Mztmp132 $Mztmp133 $Mztmp134 > $Mztmp135 # paste to main table - TF(cols 63,64) and TG(cols 65,66)

## Re-arrange column order - remove col6, replace with col 63,64; remove col26, replace with 65,66
	Mztmp136=$WD$(echo $(basename $Mzwholegenome_Regulon) | sed -e 's/.txt/.tmp136/')
awk '{print $1,$2,$3,$4,$5,$63,$64,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$22,$23,$24,$25,$65,$66,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$42}' OFS='\t' $Mztmp135 > $Mztmp136

Mztmp137=(Mz-wholegenome_Regulon_v1.txt)
mv $Mztmp136 $Mztmp137
# remove all tmp files
rm Mz-5kbprom_p1e4q0.05Regulon.tmp*
## FINAL MZ FILE IS Mz-wholegenome_Regulon_v1.txt ## Note: no TFBS_presence column yet

#### Pn
# $fullorthologs file, col1 = Pn, col2 = Pn, col3 = Ab, col4 = Nb, col5 = On
	#1. you need to map to orthologs to map to their module number
	Pntmp8=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp8/')
	Pntmp9=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp9/')
	Pntmp10=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp10/')
	Pntmp11=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp11/')
	Pntmp12=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp12/')
	Pntmp13=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp13/')
	Pntmp14=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp14/')
	Pntmp15=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp15/')
	Pntmp16=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp16/')
	Pntmp17=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp17/')
	Pntmp18=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp18/')
	Pntmp19=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp19/')
	Pntmp20=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp20/')
	Pntmp21=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp21/')
	Pntmp22=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp22/')
	Pntmp23=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp23/')
	Pntmp24=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp24/')
	Pntmp25=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp25/')
	Pntmp26=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp26/')
	Pntmp27=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp27/')
	Pntmp28=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp28/')
	Pntmp29=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp29/')
	Pntmp30=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp30/')
	Pntmp31=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp31/')
	Pntmp32=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp32/')
	Pntmp33=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp33/')
	Pntmp34=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp34/')
	Pntmp35=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp35/')
	Pntmp36=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp36/')
	Pntmp37=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp37/')
	Pntmp38=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp38/')
	Pntmp39=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp39/')
	Pntmp40=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp40/')
	Pntmp41=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp41/')
	Pntmp42=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp42/')
	Pntmp43=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp43/')
	Pntmp44=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp44/')
	Pntmp45=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp45/')
	Pntmp46=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp46/')
	Pntmp47=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp47/')
	cut -f4 $Pntmp7 > $Pntmp8
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0;}}' $fullorthologspn $Pntmp8 | awk '{if ($1=="NULL")print "NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL"; else{print $0;}}' OFS="\t" | cut -f2,4-10,12,14-15 > $Pntmp9 # NEED TO CHECK FIRST COLUMN (THOSE THAT SHOULD NOT MAP) AND FILL 15 NULL'S
	cut -f1 $Pntmp9 > $Pntmp10 #Pn
	cut -f2 $Pntmp9 > $Pntmp11 #Mz
	cut -f3 $Pntmp9 > $Pntmp12 #Ab
	cut -f4 $Pntmp9 > $Pntmp13 #Nb
	cut -f5 $Pntmp9 > $Pntmp14 #On
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $pnmod $Pntmp10 | cut -f2 > $Pntmp15 ; paste -d'\t' $Pntmp9 $Pntmp15 | awk '{print $1,$12,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11}' OFS='\t' > $Pntmp16
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $mzmod $Pntmp11 | cut -f2 > $Pntmp17 ; paste -d'\t' $Pntmp16 $Pntmp17 | awk '{print $1,$2,$3,$13,$4,$5,$6,$7,$8,$9,$10,$11,$12}' OFS='\t' > $Pntmp18
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $abmod $Pntmp12 | cut -f2 > $Pntmp19 ; paste -d'\t' $Pntmp18 $Pntmp19 | awk '{print $1,$2,$3,$4,$5,$14,$6,$7,$8,$9,$10,$11,$12,$13}' OFS='\t' > $Pntmp20
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $nbmod $Pntmp13 | cut -f2 > $Pntmp21 ; paste -d'\t' $Pntmp20 $Pntmp21 | awk '{print $1,$2,$3,$4,$5,$6,$7,$15,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' > $Pntmp22
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $onmod $Pntmp14 | cut -f2 > $Pntmp23 ; paste -d'\t' $Pntmp22 $Pntmp23 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$16,$10,$11,$12,$13,$14,$15}' OFS='\t' > $Pntmp24
paste -d'\t' $Pntmp7 $Pntmp24 > $Pntmp25 ; cut -f7 $Pntmp25 > $Pntmp26 # paste the module mapping to main table; cut target gene column to map
# target gene ID means that it is present in the genome, just need to map to module, if maps then 1 = present co-expressed, if NULL the 0 = absent
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $pnmod $Pntmp26 | awk '{if ($2=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" > $Pntmp27

# Get orthologs of TG
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $fullorthologspn $Pntmp26 | cut -f2-10,12,14-15 > $Pntmp28 # NEED TO FILL 14 NULL'S FOR NON-MAPPED
	cut -f3 $Pntmp28 > $Pntmp29 #Pn
	cut -f4 $Pntmp28 > $Pntmp30 #Ab
	cut -f5 $Pntmp28 > $Pntmp31 #Nb
	cut -f6 $Pntmp28 > $Pntmp32 #On
	paste -d'\t' $Pntmp27 $Pntmp28 > $Pntmp33
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $mzmod $Pntmp29 | cut -f2 > $Pntmp34 ; paste -d'\t' $Pntmp33 $Pntmp34 | awk '{print $1,$2,$3,$4,$5,$6,$16,$7,$8,$9,$10,$11,$12,$13,$14,$15}' OFS='\t' > $Pntmp35
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $abmod $Pntmp30 | cut -f2 > $Pntmp36 ; paste -d'\t' $Pntmp35 $Pntmp36 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$17,$9,$10,$11,$12,$13,$14,$15,$16}' OFS='\t' > $Pntmp37
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $nbmod $Pntmp31 | cut -f2 > $Pntmp38 ; paste -d'\t' $Pntmp37 $Pntmp38 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$18,$11,$12,$13,$14,$15,$16,$17}' OFS='\t' > $Pntmp39
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $onmod $Pntmp32 | cut -f2 > $Pntmp40 ; paste -d'\t' $Pntmp39 $Pntmp40 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$19,$13,$14,$15,$16,$17,$18}' OFS='\t' > $Pntmp41
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $fullorthologspn $Pntmp26 | cut -f11,13 > $Pntmp42 # map TG to gene symbol - add 14 NULL's for non mapped

### all of these equal 44 columns - $Pntmp25-22 cols; $Pntmp41-18 cols; $Pntmp42-2 cols;
paste -d'\t' $Pntmp25 $Pntmp41 $Pntmp42 | awk '{print $1,$2,$3,$4,$5,$6,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$28,$24,$43,$44,$26,$25,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42}' OFS='\t' > $Pntmp43 ## Paste all together, this will be the table for Pn to take to co-expression and module switch mapping below - total of 41 columns now

#Pn	MA0138.2	mz.gene.s185.180001	REST	1	NULL	pn.gene.s19.79	2	ab.gene.s61.5	2	nb.gene.s58.59	2	on.gene.LG2.63	2	ENSORLG00000020493	ENSTNIG00000006357	ENSGACG00000016320	ENSDARG00000007222	NULL	ENSG00000084093	mz.gene.s25.52	gria4b	gria4b	1	12	pn.gene.s14.24	12	ab.gene.s12.51	12	nb.gene.s7.174	12	on.gene.UNK17.34	11	ENSORLG00000014865	ENSTNIG00000002369	ENSGACG00000020783	ENSDARG00000059368	ENSONIG00000009523	ENSG00000152578

## NEXT, TO ADD:
# 1. Coexpression of TF and TG - only for the species
# a. pull out rows where col7 (TF module) and col27 (TG module) = NULL, then add 0, for absent coexpression
awk '$7=="NULL" && $27=="NULL"' $Pntmp43 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp44
# b. for the remaining rows where TF and/or TG are in modules, if module matches add 1 for co-expressed, if not, add 0 for not co-expressed
awk '$7 !="NULL" || $27 !="NULL"' $Pntmp43 OFS="\t" > $Pntmp45 # create a file that does not contain NULL for TF and TG modules to run on below
awk '{if ($7==$27)print $0,"1"; else{print $0,"0";}}' OFS="\t" $Pntmp45 > $Pntmp46
cat $Pntmp46 $Pntmp44 > $Pntmp47 # Note: the order of the file is different now - col42 is coexpression

#Pn	MA0138.2	mz.gene.s185.180001	REST	1	NULL	pn.gene.s19.79	2	ab.gene.s61.5	2	nb.gene.s58.59	2	on.gene.LG2.63	2	ENSORLG00000020493	ENSTNIG00000006357	ENSGACG00000016320	ENSDARG00000007222	NULL	ENSG00000084093	mz.gene.s249.19	gabbr1a	GABBR1_(1_of_many)	1	12	pn.gene.s293.16	12	ab.gene.s57.11	12	nb.gene.s83.47	12	on.gene.LG11.915	12	ENSORLG00000016024	NULL	ENSGACG00000013381	ENSDARG00000018967	NULL	ENSG00000204681	0

# 2. Module switching of TF (1=switch; 0=no switch) - NULL>NULL=0, NULL>moduleX=0, moduleX>NULL=0, moduleX>moduleX2=1, moduleX2>moduleX=1

# Pn-Mz:col7-9
	Pntmp48=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp48/')
	Pntmp49=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp49/')
	Pntmp50=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp50/')
	Pntmp51=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp51/')
awk '$7=="NULL" || $9=="NULL"' $Pntmp47 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp48 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $9 !="NULL"' $Pntmp47 OFS="\t" > $Pntmp49 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$9)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp49 > $Pntmp50
cat $Pntmp50 $Pntmp48 > $Pntmp51 #43rd col is Pn-Mz switch

# Pn-Ab:col7-11
	Pntmp52=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp52/')
	Pntmp53=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp53/')
	Pntmp54=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp54/')
	Pntmp55=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp55/')
awk '$7=="NULL" || $11=="NULL"' $Pntmp51 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp52 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $11 !="NULL"' $Pntmp51 OFS="\t" > $Pntmp53 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$11)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp53 > $Pntmp54
cat $Pntmp54 $Pntmp52 > $Pntmp55 #44th col is Pn-Ab switch

# Pn-Nb:col7-13
	Pntmp56=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp56/')
	Pntmp57=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp57/')
	Pntmp58=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp58/')
	Pntmp59=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp59/')
awk '$7=="NULL" || $13=="NULL"' $Pntmp55 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp56 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $13 !="NULL"' $Pntmp55 OFS="\t" > $Pntmp57 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$13)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp57 > $Pntmp58
cat $Pntmp58 $Pntmp56 > $Pntmp59 #45th col is Pn-Nb switch

# Pn-On:col7-15
	Pntmp60=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp60/')
	Pntmp61=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp61/')
	Pntmp62=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp62/')
	Pntmp63=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp63/')
awk '$7=="NULL" || $15=="NULL"' $Pntmp59 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp60 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $15 !="NULL"' $Pntmp59 OFS="\t" > $Pntmp61 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp61 > $Pntmp62
cat $Pntmp62 $Pntmp60 > $Pntmp63 #46th col is Pn-On switch

# Mz-Ab:col9-11
	Pntmp64=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp64/')
	Pntmp65=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp65/')
	Pntmp66=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp66/')
	Pntmp67=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp67/')
awk '$9=="NULL" || $11=="NULL"' $Pntmp63 | awk '{if ($9=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp64 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$9 !="NULL" && $11 !="NULL"' $Pntmp63 OFS="\t" > $Pntmp65 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($9==$11)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp65 > $Pntmp66
cat $Pntmp66 $Pntmp64 > $Pntmp67 #47th col is Mz-Ab switch

# Mz-Nb:col9-13
	Pntmp68=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp68/')
	Pntmp69=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp69/')
	Pntmp70=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp70/')
	Pntmp71=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp71/')
awk '$9=="NULL" || $13=="NULL"' $Pntmp67 | awk '{if ($9=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp68 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$9 !="NULL" && $13 !="NULL"' $Pntmp67 OFS="\t" > $Pntmp69 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($9==$13)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp69 > $Pntmp70
cat $Pntmp70 $Pntmp68 > $Pntmp71 #48th col is Mz-Nb switch

# Mz-On:col9-15
	Pntmp72=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp72/')
	Pntmp73=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp73/')
	Pntmp74=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp74/')
	Pntmp75=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp75/')
awk '$9=="NULL" || $15=="NULL"' $Pntmp71 | awk '{if ($9=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp72 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$9 !="NULL" && $15 !="NULL"' $Pntmp71 OFS="\t" > $Pntmp73 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($9==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp73 > $Pntmp74
cat $Pntmp74 $Pntmp72 > $Pntmp75 #49th col is Mz-On switch

# Ab-Nb:col11-13
	Pntmp76=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp76/')
	Pntmp77=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp77/')
	Pntmp78=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp78/')
	Pntmp79=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp79/')
awk '$11=="NULL" || $13=="NULL"' $Pntmp75 | awk '{if ($11=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp76 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$11 !="NULL" && $13 !="NULL"' $Pntmp75 OFS="\t" > $Pntmp77 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($11==$13)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp77 > $Pntmp78
cat $Pntmp78 $Pntmp76 > $Pntmp79 #50th col is Ab-Nb switch

# Ab-On:col11-15
	Pntmp80=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp80/')
	Pntmp81=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp81/')
	Pntmp82=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp82/')
	Pntmp83=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp83/')
awk '$11=="NULL" || $15=="NULL"' $Pntmp79 | awk '{if ($11=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp80 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$11 !="NULL" && $15 !="NULL"' $Pntmp79 OFS="\t" > $Pntmp81 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($11==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp81 > $Pntmp82
cat $Pntmp82 $Pntmp80 > $Pntmp83 #51st col is Ab-On switch

# Nb-On:col13-15
	Pntmp84=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp84/')
	Pntmp85=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp85/')
	Pntmp86=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp86/')
	Pntmp87=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp87/')
awk '$13=="NULL" || $15=="NULL"' $Pntmp83 | awk '{if ($13=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp84 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$13 !="NULL" && $15 !="NULL"' $Pntmp83 OFS="\t" > $Pntmp85 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($13==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp85 > $Pntmp86
cat $Pntmp86 $Pntmp84 > $Pntmp87 #52nd col is Nb-On switch
# final file that includes TF module switching columns


# 3. Module switching of TG (1=switch; 0=no switch)

# Pn-Mz:col27-29
	Pntmp88=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp88/')
	Pntmp89=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp89/')
	Pntmp90=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp90/')
	Pntmp91=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp91/')
awk '$27=="NULL" || $29=="NULL"' $Pntmp87 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp88 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $29 !="NULL"' $Pntmp87 OFS="\t" > $Pntmp89 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$29)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp89 > $Pntmp90
cat $Pntmp90 $Pntmp88 > $Pntmp91 #51st col is Pn-Mz switch
# Pn-Ab:col27-31
	Pntmp92=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp92/')
	Pntmp93=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp93/')
	Pntmp94=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp94/')
	Pntmp95=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp95/')
awk '$27=="NULL" || $31=="NULL"' $Pntmp91 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp92 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $31 !="NULL"' $Pntmp91 OFS="\t" > $Pntmp93 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$31)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp93 > $Pntmp94
cat $Pntmp94 $Pntmp92 > $Pntmp95 #52nd col is Pn-Ab switch
# Pn-Nb:col27-33
	Pntmp96=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp96/')
	Pntmp97=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp97/')
	Pntmp98=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp98/')
	Pntmp99=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp99/')
awk '$27=="NULL" || $33=="NULL"' $Pntmp95 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp96 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $33 !="NULL"' $Pntmp95 OFS="\t" > $Pntmp97 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$33)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp97 > $Pntmp98
cat $Pntmp98 $Pntmp96 > $Pntmp99 #53rd col is Pn-Nb switch
# Pn-On:col27-35
	Pntmp100=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp100/')
	Pntmp101=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp101/')
	Pntmp102=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp102/')
	Pntmp103=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp103/')
awk '$27=="NULL" || $35=="NULL"' $Pntmp99 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp100 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $35 !="NULL"' $Pntmp99 OFS="\t" > $Pntmp101 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp101 > $Pntmp102
cat $Pntmp102 $Pntmp100 > $Pntmp103 #54th col is Pn-On switch
# Mz-Ab:col29-31
	Pntmp104=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp104/')
	Pntmp105=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp105/')
	Pntmp106=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp106/')
	Pntmp107=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp107/')
awk '$29=="NULL" || $31=="NULL"' $Pntmp103 | awk '{if ($29=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp104 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$29 !="NULL" && $31 !="NULL"' $Pntmp103 OFS="\t" > $Pntmp105 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($29==$31)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp105 > $Pntmp106
cat $Pntmp106 $Pntmp104 > $Pntmp107 #55th col is Mz-Ab switch
# Mz-Nb:col29-33
	Pntmp108=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp108/')
	Pntmp109=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp109/')
	Pntmp110=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp110/')
	Pntmp111=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp111/')
awk '$29=="NULL" || $33=="NULL"' $Pntmp107 | awk '{if ($29=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp108 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$29 !="NULL" && $33 !="NULL"' $Pntmp107 OFS="\t" > $Pntmp109 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($29==$33)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp109 > $Pntmp110
cat $Pntmp110 $Pntmp108 > $Pntmp111 #56th col is Mz-Nb switch
# Mz-On:col29-35
	Pntmp112=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp112/')
	Pntmp113=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp113/')
	Pntmp114=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp114/')
	Pntmp115=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp115/')
awk '$29=="NULL" || $35=="NULL"' $Pntmp111 | awk '{if ($29=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp112 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$29 !="NULL" && $35 !="NULL"' $Pntmp111 OFS="\t" > $Pntmp113 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($29==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp113 > $Pntmp114
cat $Pntmp114 $Pntmp112 > $Pntmp115 #57th col is Pn-On switch
# Ab-Nb:col31-33
	Pntmp116=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp116/')
	Pntmp117=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp117/')
	Pntmp118=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp118/')
	Pntmp119=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp119/')
awk '$31=="NULL" || $33=="NULL"' $Pntmp115 | awk '{if ($31=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp116 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$31 !="NULL" && $33 !="NULL"' $Pntmp115 OFS="\t" > $Pntmp117 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($31==$33)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp117 > $Pntmp118
cat $Pntmp118 $Pntmp116 > $Pntmp119 #58th col is Ab-Nb switch
# Ab-On:col31-35
	Pntmp120=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp120/')
	Pntmp121=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp121/')
	Pntmp122=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp122/')
	Pntmp123=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp123/')
awk '$31=="NULL" || $35=="NULL"' $Pntmp119 | awk '{if ($31=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp120 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$31 !="NULL" && $35 !="NULL"' $Pntmp119 OFS="\t" > $Pntmp121 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($31==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp121 > $Pntmp122
cat $Pntmp122 $Pntmp120 > $Pntmp123 #59th col is Ab-On switch
# Nb-On:col33-35
	Pntmp124=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp124/')
	Pntmp125=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp125/')
	Pntmp126=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp126/')
	Pntmp127=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp127/')
awk '$33=="NULL" || $35=="NULL"' $Pntmp123 | awk '{if ($33=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Pntmp124 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$33 !="NULL" && $35 !="NULL"' $Pntmp123 OFS="\t" > $Pntmp125 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($33==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Pntmp125 > $Pntmp126
cat $Pntmp126 $Pntmp124 > $Pntmp127 #60th col is Nb-On switch
# final file that includes TF and now TG module switching columns

## Check lowest and highest number of columns in rows of a file to ensure no blank cells or spaces
# | awk '{print NF}' | sort -nu | head -n 1
#awk '{print NF}' $Pntmp127 | sort -nu | head -n 1 # lowest - 62 (correct)
#awk '{print NF}' $Pntmp127 | sort -nu | tail -n 1 # highest - 62 (correct)


## Add column headers
printf 'species\tmotif_pattern\tTF_OGid\tTF_id\tTF_symbol\tTF_presence\tTF_module\tTF_Pn_ortholog\tTF_Pn_module\tTF_Ab_ortholog\tTF_Ab_module\tTF_Nb_ortholog\tTF_Nb_module\tTF_On_ortholog\tTF_On_module\tTF_medaka_ortholog\tTF_tetraodon_ortholog\tTF_stickleback_ortholog\tTF_zebrafish_ortholog\tTF_niloticus_ortholog\tTF_human_ortholog\tTG_OGid\tTG_id\tTG_Dr_symbol\tTG_Ga_symbol\tTG_presence\tTG_module\tTG_Pn_ortholog\tTG_Pn_module\tTG_Ab_ortholog\tTG_Ab_module\tTG_Nb_ortholog\tTG_Nb_module\tTG_On_ortholog\tTG_On_module\tTG_medaka_ortholog\tTG_tetraodon_ortholog\tTG_stickleback_ortholog\tTG_zebrafish_ortholog\tTG_niloticus_ortholog\tTG_human_ortholog\tTF-TG_coexpressed\tTF_Mz-Pn_switch\tTF_Mz-Ab_switch\tTF_Mz-Nb_switch\tTF_Mz-On_switch\tTF_Pn-Ab_switch\tTF_Pn-Nb_switch\tTF_Pn-On_switch\tTF_Ab-Nb_switch\tTF_Ab-On_switch\tTF_Nb-On_switch\tTG_Mz-Pn_switch\tTG_Mz-Ab_switch\tTG_Mz-Nb_switch\tTG_Mz-On_switch\tTG_Pn-Ab_switch\tTG_Pn-Nb_switch\tTG_Pn-On_switch\tTG_Ab-Nb_switch\tTG_Ab-On_switch\tTG_Nb-On_switch\n' > Pn_colheaders

	Pntmp128=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp128/')
cat Pn_colheaders $Pntmp127 > $Pntmp128

## Expand TF_presence(col6) and TG_presence (col26) columns to *_presence_genome (if present in full_orthologs file) and *_presence_module
# Use TF_id (col4) and TG_id (col23)
	Pntmp129=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp129/')
	Pntmp130=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp130/')
cut -f4 $Pntmp128 > $Pntmp129
cut -f23 $Pntmp128 > $Pntmp130

	Pntmp131=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp131/')
	Pntmp132=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp132/')
	Pntmp133=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp133/')
	Pntmp134=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp134/')
	Pntmp135=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp135/')
# use species specific fullorthologs file (needs to be first column)
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $fullorthologspn $Pntmp129 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TF_presence_genome' > $Pntmp131
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $pnmod $Pntmp129 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TF_presence_module' > $Pntmp132
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $fullorthologspn $Pntmp130 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TG_presence_genome' > $Pntmp133
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $pnmod $Pntmp130 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TG_presence_module' > $Pntmp134

paste -d'\t' $Pntmp128 $Pntmp131 $Pntmp132 $Pntmp133 $Pntmp134 > $Pntmp135 # paste to main table - TF(cols 63,64) and TG(cols 65,66)

## Re-arrange column order - remove col6, replace with col 63,64; remove col26, replace with 65,66
	Pntmp136=$WD$(echo $(basename $Pnwholegenome_Regulon) | sed -e 's/.txt/.tmp136/')
awk '{print $1,$2,$3,$4,$5,$63,$64,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$22,$23,$24,$25,$65,$66,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$42}' OFS='\t' $Pntmp135 > $Pntmp136

Pntmp137=(Pn-wholegenome_Regulon_v1.txt)
mv $Pntmp136 $Pntmp137
# remove all tmp files
rm Pn-5kbprom_p1e4q0.05Regulon.tmp*
## FINAL PN FILE IS Pn-wholegenome_Regulon_v1.txt ## Note: no TFBS_presence column yet


#### Ab
# $fullorthologs file, col1 = Ab, col2 = Pn, col3 = Ab, col4 = Nb, col5 = On
	#1. you need to map to orthologs to map to their module number
	Abtmp8=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp8/')
	Abtmp9=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp9/')
	Abtmp10=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp10/')
	Abtmp11=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp11/')
	Abtmp12=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp12/')
	Abtmp13=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp13/')
	Abtmp14=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp14/')
	Abtmp15=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp15/')
	Abtmp16=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp16/')
	Abtmp17=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp17/')
	Abtmp18=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp18/')
	Abtmp19=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp19/')
	Abtmp20=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp20/')
	Abtmp21=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp21/')
	Abtmp22=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp22/')
	Abtmp23=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp23/')
	Abtmp24=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp24/')
	Abtmp25=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp25/')
	Abtmp26=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp26/')
	Abtmp27=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp27/')
	Abtmp28=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp28/')
	Abtmp29=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp29/')
	Abtmp30=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp30/')
	Abtmp31=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp31/')
	Abtmp32=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp32/')
	Abtmp33=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp33/')
	Abtmp34=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp34/')
	Abtmp35=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp35/')
	Abtmp36=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp36/')
	Abtmp37=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp37/')
	Abtmp38=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp38/')
	Abtmp39=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp39/')
	Abtmp40=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp40/')
	Abtmp41=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp41/')
	Abtmp42=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp42/')
	Abtmp43=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp43/')
	Abtmp44=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp44/')
	Abtmp45=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp45/')
	Abtmp46=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp46/')
	Abtmp47=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp47/')
	cut -f4 $Abtmp7 > $Abtmp8
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0;}}' $fullorthologsab $Abtmp8 | awk '{if ($1=="NULL")print "NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL"; else{print $0;}}' OFS="\t" | cut -f2,4-10,12,14-15 > $Abtmp9 # NEED TO CHECK FIRST COLUMN (THOSE THAT SHOULD NOT MAP) AND FILL 15 NULL'S
	cut -f1 $Abtmp9 > $Abtmp10 #Ab
	cut -f2 $Abtmp9 > $Abtmp11 #Mz
	cut -f3 $Abtmp9 > $Abtmp12 #Pn
	cut -f4 $Abtmp9 > $Abtmp13 #Nb
	cut -f5 $Abtmp9 > $Abtmp14 #On
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $abmod $Abtmp10 | cut -f2 > $Abtmp15 ; paste -d'\t' $Abtmp9 $Abtmp15 | awk '{print $1,$12,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11}' OFS='\t' > $Abtmp16
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $mzmod $Abtmp11 | cut -f2 > $Abtmp17 ; paste -d'\t' $Abtmp16 $Abtmp17 | awk '{print $1,$2,$3,$13,$4,$5,$6,$7,$8,$9,$10,$11,$12}' OFS='\t' > $Abtmp18
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $pnmod $Abtmp12 | cut -f2 > $Abtmp19 ; paste -d'\t' $Abtmp18 $Abtmp19 | awk '{print $1,$2,$3,$4,$5,$14,$6,$7,$8,$9,$10,$11,$12,$13}' OFS='\t' > $Abtmp20
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $nbmod $Abtmp13 | cut -f2 > $Abtmp21 ; paste -d'\t' $Abtmp20 $Abtmp21 | awk '{print $1,$2,$3,$4,$5,$6,$7,$15,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' > $Abtmp22
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $onmod $Abtmp14 | cut -f2 > $Abtmp23 ; paste -d'\t' $Abtmp22 $Abtmp23 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$16,$10,$11,$12,$13,$14,$15}' OFS='\t' > $Abtmp24
paste -d'\t' $Abtmp7 $Abtmp24 > $Abtmp25 ; cut -f7 $Abtmp25 > $Abtmp26 # paste the module mapping to main table; cut target gene column to map
# target gene ID means that it is present in the genome, just need to map to module, if maps then 1 = present co-expressed, if NULL the 0 = absent
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $abmod $Abtmp26 | awk '{if ($2=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" > $Abtmp27

# Get orthologs of TG
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $fullorthologsab $Abtmp26 | cut -f2-10,12,14-15 > $Abtmp28 # NEED TO FILL 14 NULL'S FOR NON-MAPPED
	cut -f3 $Abtmp28 > $Abtmp29 #Pn
	cut -f4 $Abtmp28 > $Abtmp30 #Ab
	cut -f5 $Abtmp28 > $Abtmp31 #Nb
	cut -f6 $Abtmp28 > $Abtmp32 #On
	paste -d'\t' $Abtmp27 $Abtmp28 > $Abtmp33
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $mzmod $Abtmp29 | cut -f2 > $Abtmp34 ; paste -d'\t' $Abtmp33 $Abtmp34 | awk '{print $1,$2,$3,$4,$5,$6,$16,$7,$8,$9,$10,$11,$12,$13,$14,$15}' OFS='\t' > $Abtmp35
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $pnmod $Abtmp30 | cut -f2 > $Abtmp36 ; paste -d'\t' $Abtmp35 $Abtmp36 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$17,$9,$10,$11,$12,$13,$14,$15,$16}' OFS='\t' > $Abtmp37
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $nbmod $Abtmp31 | cut -f2 > $Abtmp38 ; paste -d'\t' $Abtmp37 $Abtmp38 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$18,$11,$12,$13,$14,$15,$16,$17}' OFS='\t' > $Abtmp39
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $onmod $Abtmp32 | cut -f2 > $Abtmp40 ; paste -d'\t' $Abtmp39 $Abtmp40 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$19,$13,$14,$15,$16,$17,$18}' OFS='\t' > $Abtmp41
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $fullorthologsab $Abtmp26 | cut -f11,13 > $Abtmp42 # map TG to gene symbol - add 14 NULL's for non mapped

### all of these equal 44 columns - $Abtmp25-22 cols; $Abtmp41-18 cols; $Abtmp42-2 cols;
paste -d'\t' $Abtmp25 $Abtmp41 $Abtmp42 | awk '{print $1,$2,$3,$4,$5,$6,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$28,$24,$43,$44,$26,$25,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42}' OFS='\t' > $Abtmp43 ## Paste all together, this will be the table for Ab to take to co-expression and module switch mapping below - total of 41 columns now

#Ab	MA0138.2	mz.gene.s185.180001	REST	1	NULL	pn.gene.s19.79	2	ab.gene.s61.5	2	nb.gene.s58.59	2	on.gene.LG2.63	2	ENSORLG00000020493	ENSTNIG00000006357	ENSGACG00000016320	ENSDARG00000007222	NULL	ENSG00000084093	mz.gene.s25.52	gria4b	gria4b	1	12	pn.gene.s14.24	12	ab.gene.s12.51	12	nb.gene.s7.174	12	on.gene.UNK17.34	11	ENSORLG00000014865	ENSTNIG00000002369	ENSGACG00000020783	ENSDARG00000059368	ENSONIG00000009523	ENSG00000152578

## NEXT, TO ADD:
# 1. Coexpression of TF and TG - only for the species
# a. pull out rows where col7 (TF module) and col27 (TG module) = NULL, then add 0, for absent coexpression
awk '$7=="NULL" && $27=="NULL"' $Abtmp43 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp44
# b. for the remaining rows where TF and/or TG are in modules, if module matches add 1 for co-expressed, if not, add 0 for not co-expressed
awk '$7 !="NULL" || $27 !="NULL"' $Abtmp43 OFS="\t" > $Abtmp45 # create a file that does not contain NULL for TF and TG modules to run on below
awk '{if ($7==$27)print $0,"1"; else{print $0,"0";}}' OFS="\t" $Abtmp45 > $Abtmp46
cat $Abtmp46 $Abtmp44 > $Abtmp47 # Note: the order of the file is different now - col42 is coexpression

#Ab	MA0138.2	mz.gene.s185.180001	REST	1	NULL	pn.gene.s19.79	2	ab.gene.s61.5	2	nb.gene.s58.59	2	on.gene.LG2.63	2	ENSORLG00000020493	ENSTNIG00000006357	ENSGACG00000016320	ENSDARG00000007222	NULL	ENSG00000084093	mz.gene.s249.19	gabbr1a	GABBR1_(1_of_many)	1	12	pn.gene.s293.16	12	ab.gene.s57.11	12	nb.gene.s83.47	12	on.gene.LG11.915	12	ENSORLG00000016024	NULL	ENSGACG00000013381	ENSDARG00000018967	NULL	ENSG00000204681	0

# 2. Module switching of TF (1=switch; 0=no switch) - NULL>NULL=0, NULL>moduleX=0, moduleX>NULL=0, moduleX>moduleX2=1, moduleX2>moduleX=1

# Ab-Mz:col7-9
	Abtmp48=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp48/')
	Abtmp49=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp49/')
	Abtmp50=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp50/')
	Abtmp51=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp51/')
awk '$7=="NULL" || $9=="NULL"' $Abtmp47 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp48 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $9 !="NULL"' $Abtmp47 OFS="\t" > $Abtmp49 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$9)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp49 > $Abtmp50
cat $Abtmp50 $Abtmp48 > $Abtmp51 #43rd col is Ab-Mz switch

# Ab-Pn:col7-11
	Abtmp52=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp52/')
	Abtmp53=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp53/')
	Abtmp54=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp54/')
	Abtmp55=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp55/')
awk '$7=="NULL" || $11=="NULL"' $Abtmp51 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp52 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $11 !="NULL"' $Abtmp51 OFS="\t" > $Abtmp53 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$11)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp53 > $Abtmp54
cat $Abtmp54 $Abtmp52 > $Abtmp55 #44th col is Ab-Pn switch

# Ab-Nb:col7-13
	Abtmp56=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp56/')
	Abtmp57=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp57/')
	Abtmp58=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp58/')
	Abtmp59=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp59/')
awk '$7=="NULL" || $13=="NULL"' $Abtmp55 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp56 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $13 !="NULL"' $Abtmp55 OFS="\t" > $Abtmp57 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$13)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp57 > $Abtmp58
cat $Abtmp58 $Abtmp56 > $Abtmp59 #45th col is Ab-Nb switch

# Ab-On:col7-15
	Abtmp60=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp60/')
	Abtmp61=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp61/')
	Abtmp62=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp62/')
	Abtmp63=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp63/')
awk '$7=="NULL" || $15=="NULL"' $Abtmp59 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp60 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $15 !="NULL"' $Abtmp59 OFS="\t" > $Abtmp61 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp61 > $Abtmp62
cat $Abtmp62 $Abtmp60 > $Abtmp63 #46th col is Ab-On switch

# Mz-Pn:col9-11
	Abtmp64=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp64/')
	Abtmp65=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp65/')
	Abtmp66=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp66/')
	Abtmp67=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp67/')
awk '$9=="NULL" || $11=="NULL"' $Abtmp63 | awk '{if ($9=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp64 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$9 !="NULL" && $11 !="NULL"' $Abtmp63 OFS="\t" > $Abtmp65 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($9==$11)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp65 > $Abtmp66
cat $Abtmp66 $Abtmp64 > $Abtmp67 #47th col is Mz-Pn switch

# Mz-Nb:col9-13
	Abtmp68=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp68/')
	Abtmp69=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp69/')
	Abtmp70=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp70/')
	Abtmp71=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp71/')
awk '$9=="NULL" || $13=="NULL"' $Abtmp67 | awk '{if ($9=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp68 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$9 !="NULL" && $13 !="NULL"' $Abtmp67 OFS="\t" > $Abtmp69 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($9==$13)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp69 > $Abtmp70
cat $Abtmp70 $Abtmp68 > $Abtmp71 #48th col is Mz-Nb switch

# Mz-On:col9-15
	Abtmp72=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp72/')
	Abtmp73=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp73/')
	Abtmp74=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp74/')
	Abtmp75=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp75/')
awk '$9=="NULL" || $15=="NULL"' $Abtmp71 | awk '{if ($9=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp72 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$9 !="NULL" && $15 !="NULL"' $Abtmp71 OFS="\t" > $Abtmp73 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($9==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp73 > $Abtmp74
cat $Abtmp74 $Abtmp72 > $Abtmp75 #49th col is Mz-On switch

# Pn-Nb:col11-13
	Abtmp76=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp76/')
	Abtmp77=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp77/')
	Abtmp78=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp78/')
	Abtmp79=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp79/')
awk '$11=="NULL" || $13=="NULL"' $Abtmp75 | awk '{if ($11=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp76 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$11 !="NULL" && $13 !="NULL"' $Abtmp75 OFS="\t" > $Abtmp77 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($11==$13)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp77 > $Abtmp78
cat $Abtmp78 $Abtmp76 > $Abtmp79 #50th col is Pn-Nb switch

# Pn-On:col11-15
	Abtmp80=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp80/')
	Abtmp81=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp81/')
	Abtmp82=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp82/')
	Abtmp83=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp83/')
awk '$11=="NULL" || $15=="NULL"' $Abtmp79 | awk '{if ($11=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp80 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$11 !="NULL" && $15 !="NULL"' $Abtmp79 OFS="\t" > $Abtmp81 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($11==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp81 > $Abtmp82
cat $Abtmp82 $Abtmp80 > $Abtmp83 #51st col is Pn-On switch

# Nb-On:col13-15
	Abtmp84=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp84/')
	Abtmp85=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp85/')
	Abtmp86=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp86/')
	Abtmp87=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp87/')
awk '$13=="NULL" || $15=="NULL"' $Abtmp83 | awk '{if ($13=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp84 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$13 !="NULL" && $15 !="NULL"' $Abtmp83 OFS="\t" > $Abtmp85 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($13==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp85 > $Abtmp86
cat $Abtmp86 $Abtmp84 > $Abtmp87 #52nd col is Nb-On switch
# final file that includes TF module switching columns


# 3. Module switching of TG (1=switch; 0=no switch)

# Ab-Mz:col27-29
	Abtmp88=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp88/')
	Abtmp89=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp89/')
	Abtmp90=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp90/')
	Abtmp91=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp91/')
awk '$27=="NULL" || $29=="NULL"' $Abtmp87 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp88 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $29 !="NULL"' $Abtmp87 OFS="\t" > $Abtmp89 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$29)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp89 > $Abtmp90
cat $Abtmp90 $Abtmp88 > $Abtmp91 #51st col is Ab-Mz switch
# Ab-Pn:col27-31
	Abtmp92=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp92/')
	Abtmp93=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp93/')
	Abtmp94=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp94/')
	Abtmp95=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp95/')
awk '$27=="NULL" || $31=="NULL"' $Abtmp91 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp92 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $31 !="NULL"' $Abtmp91 OFS="\t" > $Abtmp93 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$31)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp93 > $Abtmp94
cat $Abtmp94 $Abtmp92 > $Abtmp95 #52nd col is Ab-Pn switch
# Ab-Nb:col27-33
	Abtmp96=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp96/')
	Abtmp97=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp97/')
	Abtmp98=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp98/')
	Abtmp99=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp99/')
awk '$27=="NULL" || $33=="NULL"' $Abtmp95 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp96 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $33 !="NULL"' $Abtmp95 OFS="\t" > $Abtmp97 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$33)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp97 > $Abtmp98
cat $Abtmp98 $Abtmp96 > $Abtmp99 #53rd col is Ab-Nb switch
# Ab-On:col27-35
	Abtmp100=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp100/')
	Abtmp101=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp101/')
	Abtmp102=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp102/')
	Abtmp103=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp103/')
awk '$27=="NULL" || $35=="NULL"' $Abtmp99 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp100 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $35 !="NULL"' $Abtmp99 OFS="\t" > $Abtmp101 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp101 > $Abtmp102
cat $Abtmp102 $Abtmp100 > $Abtmp103 #54th col is Ab-On switch
# Mz-Pn:col29-31
	Abtmp104=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp104/')
	Abtmp105=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp105/')
	Abtmp106=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp106/')
	Abtmp107=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp107/')
awk '$29=="NULL" || $31=="NULL"' $Abtmp103 | awk '{if ($29=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp104 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$29 !="NULL" && $31 !="NULL"' $Abtmp103 OFS="\t" > $Abtmp105 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($29==$31)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp105 > $Abtmp106
cat $Abtmp106 $Abtmp104 > $Abtmp107 #55th col is Mz-Pn switch
# Mz-Nb:col29-33
	Abtmp108=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp108/')
	Abtmp109=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp109/')
	Abtmp110=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp110/')
	Abtmp111=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp111/')
awk '$29=="NULL" || $33=="NULL"' $Abtmp107 | awk '{if ($29=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp108 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$29 !="NULL" && $33 !="NULL"' $Abtmp107 OFS="\t" > $Abtmp109 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($29==$33)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp109 > $Abtmp110
cat $Abtmp110 $Abtmp108 > $Abtmp111 #56th col is Mz-Nb switch
# Mz-On:col29-35
	Abtmp112=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp112/')
	Abtmp113=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp113/')
	Abtmp114=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp114/')
	Abtmp115=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp115/')
awk '$29=="NULL" || $35=="NULL"' $Abtmp111 | awk '{if ($29=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp112 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$29 !="NULL" && $35 !="NULL"' $Abtmp111 OFS="\t" > $Abtmp113 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($29==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp113 > $Abtmp114
cat $Abtmp114 $Abtmp112 > $Abtmp115 #57th col is Mz-On switch
# Pn-Nb:col31-33
	Abtmp116=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp116/')
	Abtmp117=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp117/')
	Abtmp118=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp118/')
	Abtmp119=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp119/')
awk '$31=="NULL" || $33=="NULL"' $Abtmp115 | awk '{if ($31=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp116 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$31 !="NULL" && $33 !="NULL"' $Abtmp115 OFS="\t" > $Abtmp117 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($31==$33)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp117 > $Abtmp118
cat $Abtmp118 $Abtmp116 > $Abtmp119 #58th col is Pn-Nb switch
# Pn-On:col31-35
	Abtmp120=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp120/')
	Abtmp121=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp121/')
	Abtmp122=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp122/')
	Abtmp123=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp123/')
awk '$31=="NULL" || $35=="NULL"' $Abtmp119 | awk '{if ($31=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp120 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$31 !="NULL" && $35 !="NULL"' $Abtmp119 OFS="\t" > $Abtmp121 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($31==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp121 > $Abtmp122
cat $Abtmp122 $Abtmp120 > $Abtmp123 #59th col is Pn-On switch
# Nb-On:col33-35
	Abtmp124=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp124/')
	Abtmp125=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp125/')
	Abtmp126=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp126/')
	Abtmp127=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp127/')
awk '$33=="NULL" || $35=="NULL"' $Abtmp123 | awk '{if ($33=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Abtmp124 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$33 !="NULL" && $35 !="NULL"' $Abtmp123 OFS="\t" > $Abtmp125 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($33==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Abtmp125 > $Abtmp126
cat $Abtmp126 $Abtmp124 > $Abtmp127 #60th col is Nb-On switch
# final file that includes TF and now TG module switching columns

## Check lowest and highest number of columns in rows of a file to ensure no blank cells or spaces
# | awk '{print NF}' | sort -nu | head -n 1
#awk '{print NF}' $Abtmp127 | sort -nu | head -n 1 # lowest - 62 (correct)
#awk '{print NF}' $Abtmp127 | sort -nu | tail -n 1 # highest - 62 (correct)


## Add column headers
printf 'species\tmotif_pattern\tTF_OGid\tTF_id\tTF_symbol\tTF_presence\tTF_module\tTF_Pn_ortholog\tTF_Pn_module\tTF_Ab_ortholog\tTF_Ab_module\tTF_Nb_ortholog\tTF_Nb_module\tTF_On_ortholog\tTF_On_module\tTF_medaka_ortholog\tTF_tetraodon_ortholog\tTF_stickleback_ortholog\tTF_zebrafish_ortholog\tTF_niloticus_ortholog\tTF_human_ortholog\tTG_OGid\tTG_id\tTG_Dr_symbol\tTG_Ga_symbol\tTG_presence\tTG_module\tTG_Pn_ortholog\tTG_Pn_module\tTG_Ab_ortholog\tTG_Ab_module\tTG_Nb_ortholog\tTG_Nb_module\tTG_On_ortholog\tTG_On_module\tTG_medaka_ortholog\tTG_tetraodon_ortholog\tTG_stickleback_ortholog\tTG_zebrafish_ortholog\tTG_niloticus_ortholog\tTG_human_ortholog\tTF-TG_coexpressed\tTF_Mz-Pn_switch\tTF_Mz-Ab_switch\tTF_Mz-Nb_switch\tTF_Mz-On_switch\tTF_Pn-Ab_switch\tTF_Pn-Nb_switch\tTF_Pn-On_switch\tTF_Ab-Nb_switch\tTF_Ab-On_switch\tTF_Nb-On_switch\tTG_Mz-Pn_switch\tTG_Mz-Ab_switch\tTG_Mz-Nb_switch\tTG_Mz-On_switch\tTG_Pn-Ab_switch\tTG_Pn-Nb_switch\tTG_Pn-On_switch\tTG_Ab-Nb_switch\tTG_Ab-On_switch\tTG_Nb-On_switch\n' > Ab_colheaders

	Abtmp128=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp128/')
cat Ab_colheaders $Abtmp127 > $Abtmp128

## Expand TF_presence(col6) and TG_presence (col26) columns to *_presence_genome (if present in full_orthologs file) and *_presence_module
# Use TF_id (col4) and TG_id (col23)
	Abtmp129=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp129/')
	Abtmp130=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp130/')
cut -f4 $Abtmp128 > $Abtmp129
cut -f23 $Abtmp128 > $Abtmp130

	Abtmp131=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp131/')
	Abtmp132=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp132/')
	Abtmp133=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp133/')
	Abtmp134=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp134/')
	Abtmp135=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp135/')
# use species specific fullorthologs file (needs to be first column)
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $fullorthologsab $Abtmp129 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TF_presence_genome' > $Abtmp131
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $abmod $Abtmp129 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TF_presence_module' > $Abtmp132
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $fullorthologsab $Abtmp130 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TG_presence_genome' > $Abtmp133
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $abmod $Abtmp130 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TG_presence_module' > $Abtmp134

paste -d'\t' $Abtmp128 $Abtmp131 $Abtmp132 $Abtmp133 $Abtmp134 > $Abtmp135 # paste to main table - TF(cols 63,64) and TG(cols 65,66)

## Re-arrange column order - remove col6, replace with col 63,64; remove col26, replace with 65,66
	Abtmp136=$WD$(echo $(basename $Abwholegenome_Regulon) | sed -e 's/.txt/.tmp136/')
awk '{print $1,$2,$3,$4,$5,$63,$64,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$22,$23,$24,$25,$65,$66,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$42}' OFS='\t' $Abtmp135 > $Abtmp136

Abtmp137=(Ab-wholegenome_Regulon_v1.txt)
mv $Abtmp136 $Abtmp137
# remove all tmp files
rm Ab-5kbprom_p1e4q0.05Regulon.tmp*
## FINAL AB FILE IS Ab-wholegenome_Regulon_v1.txt ## Note: no TFBS_presence column yet

#### Nb
# $fullorthologs file, col1 = Nb, col2 = Pn, col3 = Ab, col4 = Nb, col5 = On
	#1. you need to map to orthologs to map to their module number
	Nbtmp8=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp8/')
	Nbtmp9=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp9/')
	Nbtmp10=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp10/')
	Nbtmp11=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp11/')
	Nbtmp12=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp12/')
	Nbtmp13=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp13/')
	Nbtmp14=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp14/')
	Nbtmp15=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp15/')
	Nbtmp16=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp16/')
	Nbtmp17=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp17/')
	Nbtmp18=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp18/')
	Nbtmp19=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp19/')
	Nbtmp20=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp20/')
	Nbtmp21=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp21/')
	Nbtmp22=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp22/')
	Nbtmp23=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp23/')
	Nbtmp24=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp24/')
	Nbtmp25=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp25/')
	Nbtmp26=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp26/')
	Nbtmp27=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp27/')
	Nbtmp28=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp28/')
	Nbtmp29=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp29/')
	Nbtmp30=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp30/')
	Nbtmp31=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp31/')
	Nbtmp32=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp32/')
	Nbtmp33=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp33/')
	Nbtmp34=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp34/')
	Nbtmp35=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp35/')
	Nbtmp36=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp36/')
	Nbtmp37=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp37/')
	Nbtmp38=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp38/')
	Nbtmp39=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp39/')
	Nbtmp40=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp40/')
	Nbtmp41=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp41/')
	Nbtmp42=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp42/')
	Nbtmp43=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp43/')
	Nbtmp44=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp44/')
	Nbtmp45=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp45/')
	Nbtmp46=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp46/')
	Nbtmp47=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp47/')
	cut -f4 $Nbtmp7 > $Nbtmp8
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0;}}' $fullorthologsnb $Nbtmp8 | awk '{if ($1=="NULL")print "NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL"; else{print $0;}}' OFS="\t" | cut -f2,4-10,12,14-15 > $Nbtmp9 # NEED TO CHECK FIRST COLUMN (THOSE THAT SHOULD NOT MAP) AND FILL 15 NULL'S
	cut -f1 $Nbtmp9 > $Nbtmp10 #Nb
	cut -f2 $Nbtmp9 > $Nbtmp11 #Mz
	cut -f3 $Nbtmp9 > $Nbtmp12 #Pn
	cut -f4 $Nbtmp9 > $Nbtmp13 #Ab
	cut -f5 $Nbtmp9 > $Nbtmp14 #On
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $nbmod $Nbtmp10 | cut -f2 > $Nbtmp15 ; paste -d'\t' $Nbtmp9 $Nbtmp15 | awk '{print $1,$12,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11}' OFS='\t' > $Nbtmp16
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $mzmod $Nbtmp11 | cut -f2 > $Nbtmp17 ; paste -d'\t' $Nbtmp16 $Nbtmp17 | awk '{print $1,$2,$3,$13,$4,$5,$6,$7,$8,$9,$10,$11,$12}' OFS='\t' > $Nbtmp18
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $pnmod $Nbtmp12 | cut -f2 > $Nbtmp19 ; paste -d'\t' $Nbtmp18 $Nbtmp19 | awk '{print $1,$2,$3,$4,$5,$14,$6,$7,$8,$9,$10,$11,$12,$13}' OFS='\t' > $Nbtmp20
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $abmod $Nbtmp13 | cut -f2 > $Nbtmp21 ; paste -d'\t' $Nbtmp20 $Nbtmp21 | awk '{print $1,$2,$3,$4,$5,$6,$7,$15,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' > $Nbtmp22
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $onmod $Nbtmp14 | cut -f2 > $Nbtmp23 ; paste -d'\t' $Nbtmp22 $Nbtmp23 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$16,$10,$11,$12,$13,$14,$15}' OFS='\t' > $Nbtmp24
paste -d'\t' $Nbtmp7 $Nbtmp24 > $Nbtmp25 ; cut -f7 $Nbtmp25 > $Nbtmp26 # paste the module mapping to main table; cut target gene column to map
# target gene ID means that it is present in the genome, just need to map to module, if maps then 1 = present co-expressed, if NULL the 0 = absent
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $nbmod $Nbtmp26 | awk '{if ($2=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" > $Nbtmp27

# Get orthologs of TG
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $fullorthologsnb $Nbtmp26 | cut -f2-10,12,14-15 > $Nbtmp28 # NEED TO FILL 14 NULL'S FOR NON-MAPPED
	cut -f3 $Nbtmp28 > $Nbtmp29 #Pn
	cut -f4 $Nbtmp28 > $Nbtmp30 #Ab
	cut -f5 $Nbtmp28 > $Nbtmp31 #Nb
	cut -f6 $Nbtmp28 > $Nbtmp32 #On
	paste -d'\t' $Nbtmp27 $Nbtmp28 > $Nbtmp33
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $mzmod $Nbtmp29 | cut -f2 > $Nbtmp34 ; paste -d'\t' $Nbtmp33 $Nbtmp34 | awk '{print $1,$2,$3,$4,$5,$6,$16,$7,$8,$9,$10,$11,$12,$13,$14,$15}' OFS='\t' > $Nbtmp35
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $pnmod $Nbtmp30 | cut -f2 > $Nbtmp36 ; paste -d'\t' $Nbtmp35 $Nbtmp36 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$17,$9,$10,$11,$12,$13,$14,$15,$16}' OFS='\t' > $Nbtmp37
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $abmod $Nbtmp31 | cut -f2 > $Nbtmp38 ; paste -d'\t' $Nbtmp37 $Nbtmp38 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$18,$11,$12,$13,$14,$15,$16,$17}' OFS='\t' > $Nbtmp39
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $onmod $Nbtmp32 | cut -f2 > $Nbtmp40 ; paste -d'\t' $Nbtmp39 $Nbtmp40 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$19,$13,$14,$15,$16,$17,$18}' OFS='\t' > $Nbtmp41
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $fullorthologsnb $Nbtmp26 | cut -f11,13 > $Nbtmp42 # map TG to gene symbol - add 14 NULL's for non mapped

### all of these equal 44 columns - $Nbtmp25-22 cols; $Nbtmp41-18 cols; $Nbtmp42-2 cols;
paste -d'\t' $Nbtmp25 $Nbtmp41 $Nbtmp42 | awk '{print $1,$2,$3,$4,$5,$6,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$28,$24,$43,$44,$26,$25,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42}' OFS='\t' > $Nbtmp43 ## Paste all together, this will be the table for Nb to take to co-expression and module switch mapping below - total of 41 columns now

#Nb	MA0138.2	mz.gene.s185.180001	REST	1	NULL	pn.gene.s19.79	2	ab.gene.s61.5	2	nb.gene.s58.59	2	on.gene.LG2.63	2	ENSORLG00000020493	ENSTNIG00000006357	ENSGACG00000016320	ENSDARG00000007222	NULL	ENSG00000084093	mz.gene.s25.52	gria4b	gria4b	1	12	pn.gene.s14.24	12	ab.gene.s12.51	12	nb.gene.s7.174	12	on.gene.UNK17.34	11	ENSORLG00000014865	ENSTNIG00000002369	ENSGACG00000020783	ENSDARG00000059368	ENSONIG00000009523	ENSG00000152578

## NEXT, TO ADD:
# 1. Coexpression of TF and TG - only for the species
# a. pull out rows where col7 (TF module) and col27 (TG module) = NULL, then add 0, for absent coexpression
awk '$7=="NULL" && $27=="NULL"' $Nbtmp43 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp44
# b. for the remaining rows where TF and/or TG are in modules, if module matches add 1 for co-expressed, if not, add 0 for not co-expressed
awk '$7 !="NULL" || $27 !="NULL"' $Nbtmp43 OFS="\t" > $Nbtmp45 # create a file that does not contain NULL for TF and TG modules to run on below
awk '{if ($7==$27)print $0,"1"; else{print $0,"0";}}' OFS="\t" $Nbtmp45 > $Nbtmp46
cat $Nbtmp46 $Nbtmp44 > $Nbtmp47 # Note: the order of the file is different now - col42 is coexpression

#Nb	MA0138.2	mz.gene.s185.180001	REST	1	NULL	pn.gene.s19.79	2	ab.gene.s61.5	2	nb.gene.s58.59	2	on.gene.LG2.63	2	ENSORLG00000020493	ENSTNIG00000006357	ENSGACG00000016320	ENSDARG00000007222	NULL	ENSG00000084093	mz.gene.s249.19	gabbr1a	GABBR1_(1_of_many)	1	12	pn.gene.s293.16	12	ab.gene.s57.11	12	nb.gene.s83.47	12	on.gene.LG11.915	12	ENSORLG00000016024	NULL	ENSGACG00000013381	ENSDARG00000018967	NULL	ENSG00000204681	0

# 2. Module switching of TF (1=switch; 0=no switch) - NULL>NULL=0, NULL>moduleX=0, moduleX>NULL=0, moduleX>moduleX2=1, moduleX2>moduleX=1

# Nb-Mz:col7-9
	Nbtmp48=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp48/')
	Nbtmp49=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp49/')
	Nbtmp50=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp50/')
	Nbtmp51=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp51/')
awk '$7=="NULL" || $9=="NULL"' $Nbtmp47 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp48 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $9 !="NULL"' $Nbtmp47 OFS="\t" > $Nbtmp49 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$9)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp49 > $Nbtmp50
cat $Nbtmp50 $Nbtmp48 > $Nbtmp51 #43rd col is Nb-Mz switch

# Nb-Pn:col7-11
	Nbtmp52=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp52/')
	Nbtmp53=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp53/')
	Nbtmp54=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp54/')
	Nbtmp55=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp55/')
awk '$7=="NULL" || $11=="NULL"' $Nbtmp51 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp52 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $11 !="NULL"' $Nbtmp51 OFS="\t" > $Nbtmp53 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$11)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp53 > $Nbtmp54
cat $Nbtmp54 $Nbtmp52 > $Nbtmp55 #44th col is Nb-Pn switch

# Nb-Ab:col7-13
	Nbtmp56=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp56/')
	Nbtmp57=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp57/')
	Nbtmp58=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp58/')
	Nbtmp59=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp59/')
awk '$7=="NULL" || $13=="NULL"' $Nbtmp55 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp56 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $13 !="NULL"' $Nbtmp55 OFS="\t" > $Nbtmp57 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$13)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp57 > $Nbtmp58
cat $Nbtmp58 $Nbtmp56 > $Nbtmp59 #45th col is Nb-Ab switch

# Nb-On:col7-15
	Nbtmp60=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp60/')
	Nbtmp61=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp61/')
	Nbtmp62=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp62/')
	Nbtmp63=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp63/')
awk '$7=="NULL" || $15=="NULL"' $Nbtmp59 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp60 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $15 !="NULL"' $Nbtmp59 OFS="\t" > $Nbtmp61 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp61 > $Nbtmp62
cat $Nbtmp62 $Nbtmp60 > $Nbtmp63 #46th col is Nb-On switch

# Mz-Pn:col9-11
	Nbtmp64=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp64/')
	Nbtmp65=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp65/')
	Nbtmp66=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp66/')
	Nbtmp67=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp67/')
awk '$9=="NULL" || $11=="NULL"' $Nbtmp63 | awk '{if ($9=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp64 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$9 !="NULL" && $11 !="NULL"' $Nbtmp63 OFS="\t" > $Nbtmp65 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($9==$11)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp65 > $Nbtmp66
cat $Nbtmp66 $Nbtmp64 > $Nbtmp67 #47th col is Mz-Pn switch

# Mz-Ab:col9-13
	Nbtmp68=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp68/')
	Nbtmp69=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp69/')
	Nbtmp70=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp70/')
	Nbtmp71=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp71/')
awk '$9=="NULL" || $13=="NULL"' $Nbtmp67 | awk '{if ($9=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp68 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$9 !="NULL" && $13 !="NULL"' $Nbtmp67 OFS="\t" > $Nbtmp69 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($9==$13)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp69 > $Nbtmp70
cat $Nbtmp70 $Nbtmp68 > $Nbtmp71 #48th col is Mz-Ab switch

# Mz-On:col9-15
	Nbtmp72=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp72/')
	Nbtmp73=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp73/')
	Nbtmp74=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp74/')
	Nbtmp75=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp75/')
awk '$9=="NULL" || $15=="NULL"' $Nbtmp71 | awk '{if ($9=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp72 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$9 !="NULL" && $15 !="NULL"' $Nbtmp71 OFS="\t" > $Nbtmp73 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($9==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp73 > $Nbtmp74
cat $Nbtmp74 $Nbtmp72 > $Nbtmp75 #49th col is Mz-On switch

# Pn-Ab:col11-13
	Nbtmp76=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp76/')
	Nbtmp77=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp77/')
	Nbtmp78=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp78/')
	Nbtmp79=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp79/')
awk '$11=="NULL" || $13=="NULL"' $Nbtmp75 | awk '{if ($11=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp76 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$11 !="NULL" && $13 !="NULL"' $Nbtmp75 OFS="\t" > $Nbtmp77 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($11==$13)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp77 > $Nbtmp78
cat $Nbtmp78 $Nbtmp76 > $Nbtmp79 #50th col is Pn-Ab switch

# Pn-On:col11-15
	Nbtmp80=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp80/')
	Nbtmp81=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp81/')
	Nbtmp82=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp82/')
	Nbtmp83=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp83/')
awk '$11=="NULL" || $15=="NULL"' $Nbtmp79 | awk '{if ($11=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp80 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$11 !="NULL" && $15 !="NULL"' $Nbtmp79 OFS="\t" > $Nbtmp81 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($11==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp81 > $Nbtmp82
cat $Nbtmp82 $Nbtmp80 > $Nbtmp83 #51st col is Pn-On switch

# Ab-On:col13-15
	Nbtmp84=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp84/')
	Nbtmp85=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp85/')
	Nbtmp86=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp86/')
	Nbtmp87=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp87/')
awk '$13=="NULL" || $15=="NULL"' $Nbtmp83 | awk '{if ($13=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp84 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$13 !="NULL" && $15 !="NULL"' $Nbtmp83 OFS="\t" > $Nbtmp85 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($13==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp85 > $Nbtmp86
cat $Nbtmp86 $Nbtmp84 > $Nbtmp87 #52nd col is Ab-On switch
# final file that includes TF module switching columns


# 3. Module switching of TG (1=switch; 0=no switch)

# Nb-Mz:col27-29
	Nbtmp88=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp88/')
	Nbtmp89=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp89/')
	Nbtmp90=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp90/')
	Nbtmp91=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp91/')
awk '$27=="NULL" || $29=="NULL"' $Nbtmp87 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp88 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $29 !="NULL"' $Nbtmp87 OFS="\t" > $Nbtmp89 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$29)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp89 > $Nbtmp90
cat $Nbtmp90 $Nbtmp88 > $Nbtmp91 #51st col is Nb-Mz switch
# Nb-Pn:col27-31
	Nbtmp92=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp92/')
	Nbtmp93=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp93/')
	Nbtmp94=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp94/')
	Nbtmp95=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp95/')
awk '$27=="NULL" || $31=="NULL"' $Nbtmp91 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp92 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $31 !="NULL"' $Nbtmp91 OFS="\t" > $Nbtmp93 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$31)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp93 > $Nbtmp94
cat $Nbtmp94 $Nbtmp92 > $Nbtmp95 #52nd col is Nb-Pn switch
# Nb-Ab:col27-33
	Nbtmp96=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp96/')
	Nbtmp97=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp97/')
	Nbtmp98=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp98/')
	Nbtmp99=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp99/')
awk '$27=="NULL" || $33=="NULL"' $Nbtmp95 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp96 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $33 !="NULL"' $Nbtmp95 OFS="\t" > $Nbtmp97 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$33)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp97 > $Nbtmp98
cat $Nbtmp98 $Nbtmp96 > $Nbtmp99 #53rd col is Nb-Ab switch
# Nb-On:col27-35
	Nbtmp100=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp100/')
	Nbtmp101=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp101/')
	Nbtmp102=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp102/')
	Nbtmp103=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp103/')
awk '$27=="NULL" || $35=="NULL"' $Nbtmp99 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp100 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $35 !="NULL"' $Nbtmp99 OFS="\t" > $Nbtmp101 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp101 > $Nbtmp102
cat $Nbtmp102 $Nbtmp100 > $Nbtmp103 #54th col is Nb-On switch
# Mz-Pn:col29-31
	Nbtmp104=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp104/')
	Nbtmp105=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp105/')
	Nbtmp106=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp106/')
	Nbtmp107=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp107/')
awk '$29=="NULL" || $31=="NULL"' $Nbtmp103 | awk '{if ($29=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp104 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$29 !="NULL" && $31 !="NULL"' $Nbtmp103 OFS="\t" > $Nbtmp105 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($29==$31)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp105 > $Nbtmp106
cat $Nbtmp106 $Nbtmp104 > $Nbtmp107 #55th col is Mz-Pn switch
# Mz-Ab:col29-33
	Nbtmp108=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp108/')
	Nbtmp109=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp109/')
	Nbtmp110=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp110/')
	Nbtmp111=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp111/')
awk '$29=="NULL" || $33=="NULL"' $Nbtmp107 | awk '{if ($29=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp108 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$29 !="NULL" && $33 !="NULL"' $Nbtmp107 OFS="\t" > $Nbtmp109 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($29==$33)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp109 > $Nbtmp110
cat $Nbtmp110 $Nbtmp108 > $Nbtmp111 #56th col is Mz-Ab switch
# Mz-On:col29-35
	Nbtmp112=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp112/')
	Nbtmp113=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp113/')
	Nbtmp114=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp114/')
	Nbtmp115=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp115/')
awk '$29=="NULL" || $35=="NULL"' $Nbtmp111 | awk '{if ($29=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp112 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$29 !="NULL" && $35 !="NULL"' $Nbtmp111 OFS="\t" > $Nbtmp113 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($29==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp113 > $Nbtmp114
cat $Nbtmp114 $Nbtmp112 > $Nbtmp115 #57th col is Mz-On switch
# Pn-Ab:col31-33
	Nbtmp116=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp116/')
	Nbtmp117=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp117/')
	Nbtmp118=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp118/')
	Nbtmp119=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp119/')
awk '$31=="NULL" || $33=="NULL"' $Nbtmp115 | awk '{if ($31=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp116 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$31 !="NULL" && $33 !="NULL"' $Nbtmp115 OFS="\t" > $Nbtmp117 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($31==$33)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp117 > $Nbtmp118
cat $Nbtmp118 $Nbtmp116 > $Nbtmp119 #58th col is Pn-Ab switch
# Pn-On:col31-35
	Nbtmp120=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp120/')
	Nbtmp121=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp121/')
	Nbtmp122=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp122/')
	Nbtmp123=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp123/')
awk '$31=="NULL" || $35=="NULL"' $Nbtmp119 | awk '{if ($31=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp120 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$31 !="NULL" && $35 !="NULL"' $Nbtmp119 OFS="\t" > $Nbtmp121 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($31==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp121 > $Nbtmp122
cat $Nbtmp122 $Nbtmp120 > $Nbtmp123 #59th col is Pn-On switch
# Ab-On:col33-35
	Nbtmp124=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp124/')
	Nbtmp125=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp125/')
	Nbtmp126=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp126/')
	Nbtmp127=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp127/')
awk '$33=="NULL" || $35=="NULL"' $Nbtmp123 | awk '{if ($33=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Nbtmp124 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$33 !="NULL" && $35 !="NULL"' $Nbtmp123 OFS="\t" > $Nbtmp125 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($33==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Nbtmp125 > $Nbtmp126
cat $Nbtmp126 $Nbtmp124 > $Nbtmp127 #60th col is Ab-On switch
# final file that includes TF and now TG module switching columns

## Check lowest and highest number of columns in rows of a file to ensure no blank cells or spaces
# | awk '{print NF}' | sort -nu | head -n 1
#awk '{print NF}' $Nbtmp127 | sort -nu | head -n 1 # lowest - 62 (correct)
#awk '{print NF}' $Nbtmp127 | sort -nu | tail -n 1 # highest - 62 (correct)


## Add column headers
printf 'species\tmotif_pattern\tTF_OGid\tTF_id\tTF_symbol\tTF_presence\tTF_module\tTF_Pn_ortholog\tTF_Pn_module\tTF_Ab_ortholog\tTF_Ab_module\tTF_Nb_ortholog\tTF_Nb_module\tTF_On_ortholog\tTF_On_module\tTF_medaka_ortholog\tTF_tetraodon_ortholog\tTF_stickleback_ortholog\tTF_zebrafish_ortholog\tTF_niloticus_ortholog\tTF_human_ortholog\tTG_OGid\tTG_id\tTG_Dr_symbol\tTG_Ga_symbol\tTG_presence\tTG_module\tTG_Pn_ortholog\tTG_Pn_module\tTG_Ab_ortholog\tTG_Ab_module\tTG_Nb_ortholog\tTG_Nb_module\tTG_On_ortholog\tTG_On_module\tTG_medaka_ortholog\tTG_tetraodon_ortholog\tTG_stickleback_ortholog\tTG_zebrafish_ortholog\tTG_niloticus_ortholog\tTG_human_ortholog\tTF-TG_coexpressed\tTF_Mz-Pn_switch\tTF_Mz-Ab_switch\tTF_Mz-Nb_switch\tTF_Mz-On_switch\tTF_Pn-Ab_switch\tTF_Pn-Nb_switch\tTF_Pn-On_switch\tTF_Ab-Nb_switch\tTF_Ab-On_switch\tTF_Nb-On_switch\tTG_Mz-Pn_switch\tTG_Mz-Ab_switch\tTG_Mz-Nb_switch\tTG_Mz-On_switch\tTG_Pn-Ab_switch\tTG_Pn-Nb_switch\tTG_Pn-On_switch\tTG_Ab-Nb_switch\tTG_Ab-On_switch\tTG_Nb-On_switch\n' > Nb_colheaders

	Nbtmp128=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp128/')
cat Nb_colheaders $Nbtmp127 > $Nbtmp128

## Expand TF_presence(col6) and TG_presence (col26) columns to *_presence_genome (if present in full_orthologs file) and *_presence_module
# Use TF_id (col4) and TG_id (col23)
	Nbtmp129=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp129/')
	Nbtmp130=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp130/')
cut -f4 $Nbtmp128 > $Nbtmp129
cut -f23 $Nbtmp128 > $Nbtmp130

	Nbtmp131=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp131/')
	Nbtmp132=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp132/')
	Nbtmp133=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp133/')
	Nbtmp134=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp134/')
	Nbtmp135=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp135/')
# use species specific fullorthologs file (needs to be first column)
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $fullorthologsnb $Nbtmp129 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TF_presence_genome' > $Nbtmp131
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $nbmod $Nbtmp129 | cut -f2 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | sed '1d' | sed '1 i\TF_presence_module' > $Nbtmp132
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $fullorthologsnb $Nbtmp130 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TG_presence_genome' > $Nbtmp133
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $nbmod $Nbtmp130 | cut -f2 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | sed '1d' | sed '1 i\TG_presence_module' > $Nbtmp134

paste -d'\t' $Nbtmp128 $Nbtmp131 $Nbtmp132 $Nbtmp133 $Nbtmp134 > $Nbtmp135 # paste to main table - TF(cols 63,64) and TG(cols 65,66)

## Re-arrange column order - remove col6, replace with col 63,64; remove col26, replace with 65,66
	Nbtmp136=$WD$(echo $(basename $Nbwholegenome_Regulon) | sed -e 's/.txt/.tmp136/')
awk '{print $1,$2,$3,$4,$5,$63,$64,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$22,$23,$24,$25,$65,$66,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$42}' OFS='\t' $Nbtmp135 > $Nbtmp136

Nbtmp137=(Nb-wholegenome_Regulon_v1.txt)
mv $Nbtmp136 $Nbtmp137
# remove all tmp files
rm Nb-5kbprom_p1e4q0.05Regulon.tmp*
## FINAL NB FILE IS Nb-wholegenome_Regulon_v1.txt ## Note: no TFBS_presence column yet


#### On
# $fullorthologs file, col1 = On, col2 = Pn, col3 = Ab, col4 = Nb, col5 = On
	#1. you need to map to orthologs to map to their module number
	Ontmp8=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp8/')
	Ontmp9=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp9/')
	Ontmp10=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp10/')
	Ontmp11=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp11/')
	Ontmp12=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp12/')
	Ontmp13=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp13/')
	Ontmp14=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp14/')
	Ontmp15=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp15/')
	Ontmp16=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp16/')
	Ontmp17=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp17/')
	Ontmp18=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp18/')
	Ontmp19=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp19/')
	Ontmp20=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp20/')
	Ontmp21=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp21/')
	Ontmp22=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp22/')
	Ontmp23=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp23/')
	Ontmp24=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp24/')
	Ontmp25=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp25/')
	Ontmp26=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp26/')
	Ontmp27=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp27/')
	Ontmp28=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp28/')
	Ontmp29=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp29/')
	Ontmp30=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp30/')
	Ontmp31=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp31/')
	Ontmp32=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp32/')
	Ontmp33=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp33/')
	Ontmp34=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp34/')
	Ontmp35=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp35/')
	Ontmp36=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp36/')
	Ontmp37=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp37/')
	Ontmp38=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp38/')
	Ontmp39=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp39/')
	Ontmp40=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp40/')
	Ontmp41=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp41/')
	Ontmp42=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp42/')
	Ontmp43=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp43/')
	Ontmp44=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp44/')
	Ontmp45=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp45/')
	Ontmp46=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp46/')
	Ontmp47=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp47/')
	cut -f4 $Ontmp7 > $Ontmp8
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0;}}' $fullorthologson $Ontmp8 | awk '{if ($1=="NULL")print "NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL"; else{print $0;}}' OFS="\t" | cut -f2,4-10,12,14-15 > $Ontmp9 # NEED TO CHECK FIRST COLUMN (THOSE THAT SHOULD NOT MAP) AND FILL 15 NULL'S
	cut -f1 $Ontmp9 > $Ontmp10 #On
	cut -f2 $Ontmp9 > $Ontmp11 #Mz
	cut -f3 $Ontmp9 > $Ontmp12 #Pn
	cut -f4 $Ontmp9 > $Ontmp13 #Ab
	cut -f5 $Ontmp9 > $Ontmp14 #Nb
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $onmod $Ontmp10 | cut -f2 > $Ontmp15 ; paste -d'\t' $Ontmp9 $Ontmp15 | awk '{print $1,$12,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11}' OFS='\t' > $Ontmp16
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $mzmod $Ontmp11 | cut -f2 > $Ontmp17 ; paste -d'\t' $Ontmp16 $Ontmp17 | awk '{print $1,$2,$3,$13,$4,$5,$6,$7,$8,$9,$10,$11,$12}' OFS='\t' > $Ontmp18
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $pnmod $Ontmp12 | cut -f2 > $Ontmp19 ; paste -d'\t' $Ontmp18 $Ontmp19 | awk '{print $1,$2,$3,$4,$5,$14,$6,$7,$8,$9,$10,$11,$12,$13}' OFS='\t' > $Ontmp20
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $abmod $Ontmp13 | cut -f2 > $Ontmp21 ; paste -d'\t' $Ontmp20 $Ontmp21 | awk '{print $1,$2,$3,$4,$5,$6,$7,$15,$8,$9,$10,$11,$12,$13,$14}' OFS='\t' > $Ontmp22
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $nbmod $Ontmp14 | cut -f2 > $Ontmp23 ; paste -d'\t' $Ontmp22 $Ontmp23 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$16,$10,$11,$12,$13,$14,$15}' OFS='\t' > $Ontmp24
paste -d'\t' $Ontmp7 $Ontmp24 > $Ontmp25 ; cut -f7 $Ontmp25 > $Ontmp26 # paste the module mapping to main table; cut target gene column to map
# target gene ID means that it is present in the genome, just need to map to module, if maps then 1 = present co-expressed, if NULL the 0 = absent
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $onmod $Ontmp26 | awk '{if ($2=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" > $Ontmp27

# Get orthologs of TG
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $fullorthologson $Ontmp26 | cut -f2-10,12,14-15 > $Ontmp28 # NEED TO FILL 14 NULL'S FOR NON-MAPPED
	cut -f3 $Ontmp28 > $Ontmp29 #Pn
	cut -f4 $Ontmp28 > $Ontmp30 #Ab
	cut -f5 $Ontmp28 > $Ontmp31 #Nb
	cut -f6 $Ontmp28 > $Ontmp32 #On
	paste -d'\t' $Ontmp27 $Ontmp28 > $Ontmp33
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $mzmod $Ontmp29 | cut -f2 > $Ontmp34 ; paste -d'\t' $Ontmp33 $Ontmp34 | awk '{print $1,$2,$3,$4,$5,$6,$16,$7,$8,$9,$10,$11,$12,$13,$14,$15}' OFS='\t' > $Ontmp35
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $pnmod $Ontmp30 | cut -f2 > $Ontmp36 ; paste -d'\t' $Ontmp35 $Ontmp36 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$17,$9,$10,$11,$12,$13,$14,$15,$16}' OFS='\t' > $Ontmp37
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $abmod $Ontmp31 | cut -f2 > $Ontmp38 ; paste -d'\t' $Ontmp37 $Ontmp38 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$18,$11,$12,$13,$14,$15,$16,$17}' OFS='\t' > $Ontmp39
	awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL";}}' $nbmod $Ontmp32 | cut -f2 > $Ontmp40 ; paste -d'\t' $Ontmp39 $Ontmp40 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$19,$13,$14,$15,$16,$17,$18}' OFS='\t' > $Ontmp41
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $fullorthologson $Ontmp26 | cut -f11,13 > $Ontmp42 # map TG to gene symbol - add 14 NULL's for non mapped

### all of these equal 44 columns - $Ontmp25-22 cols; $Ontmp41-18 cols; $Ontmp42-2 cols;
paste -d'\t' $Ontmp25 $Ontmp41 $Ontmp42 | awk '{print $1,$2,$3,$4,$5,$6,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$28,$24,$43,$44,$26,$25,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42}' OFS='\t' > $Ontmp43 ## Paste all together, this will be the table for On to take to co-expression and module switch mapping below - total of 41 columns now

#On	MA0138.2	mz.gene.s185.180001	REST	1	NULL	pn.gene.s19.79	2	ab.gene.s61.5	2	nb.gene.s58.59	2	on.gene.LG2.63	2	ENSORLG00000020493	ENSTNIG00000006357	ENSGACG00000016320	ENSDARG00000007222	NULL	ENSG00000084093	mz.gene.s25.52	gria4b	gria4b	1	12	pn.gene.s14.24	12	ab.gene.s12.51	12	nb.gene.s7.174	12	on.gene.UNK17.34	11	ENSORLG00000014865	ENSTNIG00000002369	ENSGACG00000020783	ENSDARG00000059368	ENSONIG00000009523	ENSG00000152578

## NEXT, TO ADD:
# 1. Coexpression of TF and TG - only for the species
# a. pull out rows where col7 (TF module) and col27 (TG module) = NULL, then add 0, for absent coexpression
awk '$7=="NULL" && $27=="NULL"' $Ontmp43 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp44
# b. for the remaining rows where TF and/or TG are in modules, if module matches add 1 for co-expressed, if not, add 0 for not co-expressed
awk '$7 !="NULL" || $27 !="NULL"' $Ontmp43 OFS="\t" > $Ontmp45 # create a file that does not contain NULL for TF and TG modules to run on below
awk '{if ($7==$27)print $0,"1"; else{print $0,"0";}}' OFS="\t" $Ontmp45 > $Ontmp46
cat $Ontmp46 $Ontmp44 > $Ontmp47 # Note: the order of the file is different now - col42 is coexpression

#On	MA0138.2	mz.gene.s185.180001	REST	1	NULL	pn.gene.s19.79	2	ab.gene.s61.5	2	nb.gene.s58.59	2	on.gene.LG2.63	2	ENSORLG00000020493	ENSTNIG00000006357	ENSGACG00000016320	ENSDARG00000007222	NULL	ENSG00000084093	mz.gene.s249.19	gabbr1a	GABBR1_(1_of_many)	1	12	pn.gene.s293.16	12	ab.gene.s57.11	12	nb.gene.s83.47	12	on.gene.LG11.915	12	ENSORLG00000016024	NULL	ENSGACG00000013381	ENSDARG00000018967	NULL	ENSG00000204681	0

# 2. Module switching of TF (1=switch; 0=no switch) - NULL>NULL=0, NULL>moduleX=0, moduleX>NULL=0, moduleX>moduleX2=1, moduleX2>moduleX=1

# On-Mz:col7-9
	Ontmp48=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp48/')
	Ontmp49=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp49/')
	Ontmp50=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp50/')
	Ontmp51=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp51/')
awk '$7=="NULL" || $9=="NULL"' $Ontmp47 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp48 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $9 !="NULL"' $Ontmp47 OFS="\t" > $Ontmp49 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$9)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp49 > $Ontmp50
cat $Ontmp50 $Ontmp48 > $Ontmp51 #43rd col is On-Mz switch

# On-Pn:col7-11
	Ontmp52=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp52/')
	Ontmp53=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp53/')
	Ontmp54=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp54/')
	Ontmp55=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp55/')
awk '$7=="NULL" || $11=="NULL"' $Ontmp51 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp52 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $11 !="NULL"' $Ontmp51 OFS="\t" > $Ontmp53 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$11)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp53 > $Ontmp54
cat $Ontmp54 $Ontmp52 > $Ontmp55 #44th col is On-Pn switch

# On-Ab:col7-13
	Ontmp56=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp56/')
	Ontmp57=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp57/')
	Ontmp58=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp58/')
	Ontmp59=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp59/')
awk '$7=="NULL" || $13=="NULL"' $Ontmp55 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp56 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $13 !="NULL"' $Ontmp55 OFS="\t" > $Ontmp57 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$13)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp57 > $Ontmp58
cat $Ontmp58 $Ontmp56 > $Ontmp59 #45th col is On-Ab switch

# On-Nb:col7-15
	Ontmp60=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp60/')
	Ontmp61=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp61/')
	Ontmp62=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp62/')
	Ontmp63=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp63/')
awk '$7=="NULL" || $15=="NULL"' $Ontmp59 | awk '{if ($7=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp60 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$7 !="NULL" && $15 !="NULL"' $Ontmp59 OFS="\t" > $Ontmp61 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($7==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp61 > $Ontmp62
cat $Ontmp62 $Ontmp60 > $Ontmp63 #46th col is On-Nb switch

# Mz-Pn:col9-11
	Ontmp64=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp64/')
	Ontmp65=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp65/')
	Ontmp66=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp66/')
	Ontmp67=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp67/')
awk '$9=="NULL" || $11=="NULL"' $Ontmp63 | awk '{if ($9=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp64 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$9 !="NULL" && $11 !="NULL"' $Ontmp63 OFS="\t" > $Ontmp65 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($9==$11)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp65 > $Ontmp66
cat $Ontmp66 $Ontmp64 > $Ontmp67 #47th col is Mz-Pn switch

# Mz-Ab:col9-13
	Ontmp68=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp68/')
	Ontmp69=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp69/')
	Ontmp70=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp70/')
	Ontmp71=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp71/')
awk '$9=="NULL" || $13=="NULL"' $Ontmp67 | awk '{if ($9=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp68 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$9 !="NULL" && $13 !="NULL"' $Ontmp67 OFS="\t" > $Ontmp69 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($9==$13)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp69 > $Ontmp70
cat $Ontmp70 $Ontmp68 > $Ontmp71 #48th col is Mz-Ab switch

# Mz-Nb:col9-15
	Ontmp72=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp72/')
	Ontmp73=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp73/')
	Ontmp74=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp74/')
	Ontmp75=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp75/')
awk '$9=="NULL" || $15=="NULL"' $Ontmp71 | awk '{if ($9=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp72 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$9 !="NULL" && $15 !="NULL"' $Ontmp71 OFS="\t" > $Ontmp73 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($9==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp73 > $Ontmp74
cat $Ontmp74 $Ontmp72 > $Ontmp75 #49th col is Mz-Nb switch

# Pn-Ab:col11-13
	Ontmp76=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp76/')
	Ontmp77=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp77/')
	Ontmp78=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp78/')
	Ontmp79=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp79/')
awk '$11=="NULL" || $13=="NULL"' $Ontmp75 | awk '{if ($11=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp76 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$11 !="NULL" && $13 !="NULL"' $Ontmp75 OFS="\t" > $Ontmp77 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($11==$13)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp77 > $Ontmp78
cat $Ontmp78 $Ontmp76 > $Ontmp79 #50th col is Pn-Ab switch

# Pn-Nb:col11-15
	Ontmp80=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp80/')
	Ontmp81=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp81/')
	Ontmp82=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp82/')
	Ontmp83=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp83/')
awk '$11=="NULL" || $15=="NULL"' $Ontmp79 | awk '{if ($11=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp80 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$11 !="NULL" && $15 !="NULL"' $Ontmp79 OFS="\t" > $Ontmp81 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($11==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp81 > $Ontmp82
cat $Ontmp82 $Ontmp80 > $Ontmp83 #51st col is Pn-Nb switch

# Ab-Nb:col13-15
	Ontmp84=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp84/')
	Ontmp85=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp85/')
	Ontmp86=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp86/')
	Ontmp87=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp87/')
awk '$13=="NULL" || $15=="NULL"' $Ontmp83 | awk '{if ($13=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp84 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$13 !="NULL" && $15 !="NULL"' $Ontmp83 OFS="\t" > $Ontmp85 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($13==$15)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp85 > $Ontmp86
cat $Ontmp86 $Ontmp84 > $Ontmp87 #52nd col is Ab-Nb switch
# final file that includes TF module switching columns


# 3. Module switching of TG (1=switch; 0=no switch)

# On-Mz:col27-29
	Ontmp88=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp88/')
	Ontmp89=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp89/')
	Ontmp90=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp90/')
	Ontmp91=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp91/')
awk '$27=="NULL" || $29=="NULL"' $Ontmp87 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp88 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $29 !="NULL"' $Ontmp87 OFS="\t" > $Ontmp89 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$29)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp89 > $Ontmp90
cat $Ontmp90 $Ontmp88 > $Ontmp91 #51st col is On-Mz switch
# On-Pn:col27-31
	Ontmp92=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp92/')
	Ontmp93=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp93/')
	Ontmp94=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp94/')
	Ontmp95=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp95/')
awk '$27=="NULL" || $31=="NULL"' $Ontmp91 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp92 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $31 !="NULL"' $Ontmp91 OFS="\t" > $Ontmp93 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$31)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp93 > $Ontmp94
cat $Ontmp94 $Ontmp92 > $Ontmp95 #52nd col is On-Pn switch
# On-Ab:col27-33
	Ontmp96=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp96/')
	Ontmp97=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp97/')
	Ontmp98=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp98/')
	Ontmp99=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp99/')
awk '$27=="NULL" || $33=="NULL"' $Ontmp95 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp96 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $33 !="NULL"' $Ontmp95 OFS="\t" > $Ontmp97 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$33)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp97 > $Ontmp98
cat $Ontmp98 $Ontmp96 > $Ontmp99 #53rd col is On-Ab switch
# On-Nb:col27-35
	Ontmp100=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp100/')
	Ontmp101=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp101/')
	Ontmp102=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp102/')
	Ontmp103=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp103/')
awk '$27=="NULL" || $35=="NULL"' $Ontmp99 | awk '{if ($27=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp100 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$27 !="NULL" && $35 !="NULL"' $Ontmp99 OFS="\t" > $Ontmp101 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($27==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp101 > $Ontmp102
cat $Ontmp102 $Ontmp100 > $Ontmp103 #54th col is On-Nb switch
# Mz-Pn:col29-31
	Ontmp104=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp104/')
	Ontmp105=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp105/')
	Ontmp106=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp106/')
	Ontmp107=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp107/')
awk '$29=="NULL" || $31=="NULL"' $Ontmp103 | awk '{if ($29=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp104 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$29 !="NULL" && $31 !="NULL"' $Ontmp103 OFS="\t" > $Ontmp105 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($29==$31)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp105 > $Ontmp106
cat $Ontmp106 $Ontmp104 > $Ontmp107 #55th col is Mz-Pn switch
# Mz-Ab:col29-33
	Ontmp108=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp108/')
	Ontmp109=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp109/')
	Ontmp110=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp110/')
	Ontmp111=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp111/')
awk '$29=="NULL" || $33=="NULL"' $Ontmp107 | awk '{if ($29=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp108 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$29 !="NULL" && $33 !="NULL"' $Ontmp107 OFS="\t" > $Ontmp109 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($29==$33)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp109 > $Ontmp110
cat $Ontmp110 $Ontmp108 > $Ontmp111 #56th col is Mz-Ab switch
# Mz-Nb:col29-35
	Ontmp112=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp112/')
	Ontmp113=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp113/')
	Ontmp114=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp114/')
	Ontmp115=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp115/')
awk '$29=="NULL" || $35=="NULL"' $Ontmp111 | awk '{if ($29=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp112 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$29 !="NULL" && $35 !="NULL"' $Ontmp111 OFS="\t" > $Ontmp113 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($29==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp113 > $Ontmp114
cat $Ontmp114 $Ontmp112 > $Ontmp115 #57th col is Mz-Nb switch
# Pn-Ab:col31-33
	Ontmp116=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp116/')
	Ontmp117=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp117/')
	Ontmp118=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp118/')
	Ontmp119=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp119/')
awk '$31=="NULL" || $33=="NULL"' $Ontmp115 | awk '{if ($31=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp116 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$31 !="NULL" && $33 !="NULL"' $Ontmp115 OFS="\t" > $Ontmp117 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($31==$33)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp117 > $Ontmp118
cat $Ontmp118 $Ontmp116 > $Ontmp119 #58th col is Pn-Ab switch
# Pn-Nb:col31-35
	Ontmp120=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp120/')
	Ontmp121=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp121/')
	Ontmp122=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp122/')
	Ontmp123=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp123/')
awk '$31=="NULL" || $35=="NULL"' $Ontmp119 | awk '{if ($31=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp120 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$31 !="NULL" && $35 !="NULL"' $Ontmp119 OFS="\t" > $Ontmp121 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($31==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp121 > $Ontmp122
cat $Ontmp122 $Ontmp120 > $Ontmp123 #59th col is Pn-Nb switch
# Ab-Nb:col33-35
	Ontmp124=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp124/')
	Ontmp125=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp125/')
	Ontmp126=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp126/')
	Ontmp127=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp127/')
awk '$33=="NULL" || $35=="NULL"' $Ontmp123 | awk '{if ($33=="NULL")print $0,"0"; else{print $0,"0";}}' OFS="\t" > $Ontmp124 # Seperate rows where any of the TF compare module columns contain NULL, mark as 0 switch (will print 0 regardless of whether NULL present or not)
awk '$33 !="NULL" && $35 !="NULL"' $Ontmp123 OFS="\t" > $Ontmp125 # create a file that does not contain NULL for TF modules of comparison to run on below
awk '{if ($33==$35)print $0,"0"; else{print $0,"1";}}' OFS="\t" $Ontmp125 > $Ontmp126
cat $Ontmp126 $Ontmp124 > $Ontmp127 #60th col is Ab-Nb switch
# final file that includes TF and now TG module switching columns

## Check lowest and highest number of columns in rows of a file to ensure no blank cells or spaces
# | awk '{print NF}' | sort -nu | head -n 1
#awk '{print NF}' $Ontmp127 | sort -nu | head -n 1 # lowest - 62 (correct)
#awk '{print NF}' $Ontmp127 | sort -nu | tail -n 1 # highest - 62 (correct)


## Add column headers
printf 'species\tmotif_pattern\tTF_OGid\tTF_id\tTF_symbol\tTF_presence\tTF_module\tTF_Pn_ortholog\tTF_Pn_module\tTF_Ab_ortholog\tTF_Ab_module\tTF_Nb_ortholog\tTF_Nb_module\tTF_On_ortholog\tTF_On_module\tTF_medaka_ortholog\tTF_tetraodon_ortholog\tTF_stickleback_ortholog\tTF_zebrafish_ortholog\tTF_niloticus_ortholog\tTF_human_ortholog\tTG_OGid\tTG_id\tTG_Dr_symbol\tTG_Ga_symbol\tTG_presence\tTG_module\tTG_Pn_ortholog\tTG_Pn_module\tTG_Ab_ortholog\tTG_Ab_module\tTG_Nb_ortholog\tTG_Nb_module\tTG_On_ortholog\tTG_On_module\tTG_medaka_ortholog\tTG_tetraodon_ortholog\tTG_stickleback_ortholog\tTG_zebrafish_ortholog\tTG_niloticus_ortholog\tTG_human_ortholog\tTF-TG_coexpressed\tTF_Mz-Pn_switch\tTF_Mz-Ab_switch\tTF_Mz-Nb_switch\tTF_Mz-On_switch\tTF_Pn-Ab_switch\tTF_Pn-Nb_switch\tTF_Pn-On_switch\tTF_Ab-Nb_switch\tTF_Ab-On_switch\tTF_Nb-On_switch\tTG_Mz-Pn_switch\tTG_Mz-Ab_switch\tTG_Mz-Nb_switch\tTG_Mz-On_switch\tTG_Pn-Ab_switch\tTG_Pn-Nb_switch\tTG_Pn-On_switch\tTG_Ab-Nb_switch\tTG_Ab-On_switch\tTG_Nb-On_switch\n' > On_colheaders

	Ontmp128=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp128/')
cat On_colheaders $Ontmp127 > $Ontmp128

## Expand TF_presence(col6) and TG_presence (col26) columns to *_presence_genome (if present in full_orthologs file) and *_presence_module
# Use TF_id (col4) and TG_id (col23)
	Ontmp129=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp129/')
	Ontmp130=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp130/')
cut -f4 $Ontmp128 > $Ontmp129
cut -f23 $Ontmp128 > $Ontmp130

	Ontmp131=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp131/')
	Ontmp132=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp132/')
	Ontmp133=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp133/')
	Ontmp134=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp134/')
	Ontmp135=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp135/')
# use species specific fullorthologs file (needs to be first column)
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $fullorthologson $Ontmp129 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TF_presence_genome' > $Ontmp131
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $onmod $Ontmp129 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TF_presence_module' > $Ontmp132
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $fullorthologson $Ontmp130 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TG_presence_genome' > $Ontmp133
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$1;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $onmod $Ontmp130 | awk '{if ($1=="NULL")print $1,"0"; else{print $0;}}' OFS="\t" | cut -f2 | sed '1d' | sed '1 i\TG_presence_module' > $Ontmp134

paste -d'\t' $Ontmp128 $Ontmp131 $Ontmp132 $Ontmp133 $Ontmp134 > $Ontmp135 # paste to main table - TF(cols 63,64) and TG(cols 65,66)

## Re-arrange column order - remove col6, replace with col 63,64; remove col26, replace with 65,66
	Ontmp136=$WD$(echo $(basename $Onwholegenome_Regulon) | sed -e 's/.txt/.tmp136/')
awk '{print $1,$2,$3,$4,$5,$63,$64,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$22,$23,$24,$25,$65,$66,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$42}' OFS='\t' $Ontmp135 > $Ontmp136

Ontmp137=(On-wholegenome_Regulon_v1.txt)
mv $Ontmp136 $Ontmp137
# remove all tmp files
rm On-5kbprom_p1e4q0.05Regulon.tmp*
## FINAL ON FILE IS On-wholegenome_Regulon_v1.txt ## Note: no TFBS_presence column yet

# 1. TFBS presence/absence - this would be based on orthology, if the binding site is present in a TG ortholog - use TF (col3) and TG (col33) OGids column
	Mzregulon_v1=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v1.txt)
	Pnregulon_v1=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v1.txt)
	Abregulon_v1=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v1.txt)
	Nbregulon_v1=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v1.txt)
	Onregulon_v1=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v1.txt)

	#Mzregulon_v1=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v1.txt)
	#Pnregulon_v1=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v1.txt)
	#Abregulon_v1=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v1.txt)
	#Nbregulon_v1=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v1.txt)
	#Onregulon_v1=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v1.txt)

# extract two columns per species file, merge columns, retain TF_OGid and TG_OGid in next columns and then add species column to right: TFOGid-TGOGid
	#WD=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/)
	WD=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/)

	Mzregulon_v1tmp1=$WD$(echo $(basename $Mzregulon_v1) | sed -e 's/.txt/.tmp1/')
	Pnregulon_v1tmp1=$WD$(echo $(basename $Pnregulon_v1) | sed -e 's/.txt/.tmp1/')
	Abregulon_v1tmp1=$WD$(echo $(basename $Abregulon_v1) | sed -e 's/.txt/.tmp1/')
	Nbregulon_v1tmp1=$WD$(echo $(basename $Nbregulon_v1) | sed -e 's/.txt/.tmp1/')
	Onregulon_v1tmp1=$WD$(echo $(basename $Onregulon_v1) | sed -e 's/.txt/.tmp1/')

cut -f3,33 $Mzregulon_v1 | sed 1d | awk '{print $1"-"$2,$1,$2,"Mz"}' OFS='\t' > $Mzregulon_v1tmp1
cut -f3,33 $Pnregulon_v1 | sed 1d | awk '{print $1"-"$2,$1,$2,"Pn"}' OFS='\t' > $Pnregulon_v1tmp1
cut -f3,33 $Abregulon_v1 | sed 1d | awk '{print $1"-"$2,$1,$2,"Ab"}' OFS='\t' > $Abregulon_v1tmp1
cut -f3,33 $Nbregulon_v1 | sed 1d | awk '{print $1"-"$2,$1,$2,"Nb"}' OFS='\t' > $Nbregulon_v1tmp1
cut -f3,33 $Onregulon_v1 | sed 1d | awk '{print $1"-"$2,$1,$2,"On"}' OFS='\t' > $Onregulon_v1tmp1

# cat merge species file to create master table
tfbs_master=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/tfbs_master.txt)
#tfbs_master=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/tfbs_master.txt)
cat $Mzregulon_v1tmp1 $Pnregulon_v1tmp1 $Abregulon_v1tmp1 $Nbregulon_v1tmp1 $Onregulon_v1tmp1 > $tfbs_master

# awk match each species merged files to master list and if present, output 1 (TFBS present), if not, output 0 (absent) - make sure NULL's are not matched incorrectly
# anything that is OGidXX-NULL should be marked as NULL in TFBS presence/absence column - in other words, no ortholog so no knowledge of gain/loss, like follows for others too:
# OGidXX-NULL == NULL
# NULL-OGidXX == NULL
# NULL-NULL == NULL
	Mzregulon_v1tmp2=$WD$(echo $(basename $Mzregulon_v1) | sed -e 's/.txt/.tmp2/')
	Pnregulon_v1tmp2=$WD$(echo $(basename $Pnregulon_v1) | sed -e 's/.txt/.tmp2/')
	Abregulon_v1tmp2=$WD$(echo $(basename $Abregulon_v1) | sed -e 's/.txt/.tmp2/')
	Nbregulon_v1tmp2=$WD$(echo $(basename $Nbregulon_v1) | sed -e 's/.txt/.tmp2/')
	Onregulon_v1tmp2=$WD$(echo $(basename $Onregulon_v1) | sed -e 's/.txt/.tmp2/')
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $Mzregulon_v1tmp1 $tfbs_master | awk '{if ($1~"NULL")print $1,$2,$3,$4,$5="NULL"; else{print $0;}}' OFS="\t" > $Mzregulon_v1tmp2
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $Pnregulon_v1tmp1 $tfbs_master | awk '{if ($1~"NULL")print $1,$2,$3,$4,$5="NULL"; else{print $0;}}' OFS="\t" > $Pnregulon_v1tmp2
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $Abregulon_v1tmp1 $tfbs_master | awk '{if ($1~"NULL")print $1,$2,$3,$4,$5="NULL"; else{print $0;}}' OFS="\t" > $Abregulon_v1tmp2
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $Nbregulon_v1tmp1 $tfbs_master | awk '{if ($1~"NULL")print $1,$2,$3,$4,$5="NULL"; else{print $0;}}' OFS="\t" > $Nbregulon_v1tmp2
awk 'BEGIN{IGNORECASE=1}{OFS="\t"}NR==FNR{a[$1]=$0;};NR>FNR{if($1 in a){print $0,"1";}else{print $0,"0";}}' $Onregulon_v1tmp1 $tfbs_master | awk '{if ($1~"NULL")print $1,$2,$3,$4,$5="NULL"; else{print $0;}}' OFS="\t" > $Onregulon_v1tmp2
	Pnregulon_v1tmp3=$WD$(echo $(basename $Pnregulon_v1) | sed -e 's/.txt/.tmp3/')
	Abregulon_v1tmp3=$WD$(echo $(basename $Abregulon_v1) | sed -e 's/.txt/.tmp3/')
	Nbregulon_v1tmp3=$WD$(echo $(basename $Nbregulon_v1) | sed -e 's/.txt/.tmp3/')
	Onregulon_v1tmp3=$WD$(echo $(basename $Onregulon_v1) | sed -e 's/.txt/.tmp3/')
cut -f5 $Pnregulon_v1tmp2 > $Pnregulon_v1tmp3
cut -f5 $Abregulon_v1tmp2 > $Abregulon_v1tmp3
cut -f5 $Nbregulon_v1tmp2 > $Nbregulon_v1tmp3
cut -f5 $Onregulon_v1tmp2 > $Onregulon_v1tmp3
	tfbs_master2=$WD$(echo $(basename $tfbs_master) | sed -e 's/.txt/.txt2/')
	tfbs_master3=$WD$(echo $(basename $tfbs_master) | sed -e 's/.txt/.txt3/')
paste -d'\t' $Mzregulon_v1tmp2 $Pnregulon_v1tmp3 $Abregulon_v1tmp3 $Nbregulon_v1tmp3 $Onregulon_v1tmp3 > $tfbs_master2
printf 'TFOGid-TGOGid\tTFOGid\tTGOGid\tspecies\tMz_TFBSpresence\tPn_TFBSpresence\tAb_TFBSpresence\tNb_TFBSpresence\tOn_TFBSpresence\n' > tfbs_colheaders
cat tfbs_colheaders $tfbs_master2 > $tfbs_master3
mv $tfbs_master3 TFBS_MasterTable.txt
# FINAL TFBS PRESENCE/ABSENCE FILE IS TFBS_MasterTable.txt

#2. Add the TFBS columns to the main tables
	tfbs_master3Mz=$WD$(echo $(basename $tfbs_master) | sed -e 's/.txt/Mz.txt3/')
	tfbs_master3Pn=$WD$(echo $(basename $tfbs_master) | sed -e 's/.txt/Pn.txt3/')
	tfbs_master3Ab=$WD$(echo $(basename $tfbs_master) | sed -e 's/.txt/Ab.txt3/')
	tfbs_master3Nb=$WD$(echo $(basename $tfbs_master) | sed -e 's/.txt/Nb.txt3/')
	tfbs_master3On=$WD$(echo $(basename $tfbs_master) | sed -e 's/.txt/On.txt3/')
	tfbs_master4Mz=$WD$(echo $(basename $tfbs_master) | sed -e 's/.txt/Mz.txt4/')
	tfbs_master4Pn=$WD$(echo $(basename $tfbs_master) | sed -e 's/.txt/Pn.txt4/')
	tfbs_master4Ab=$WD$(echo $(basename $tfbs_master) | sed -e 's/.txt/Ab.txt4/')
	tfbs_master4Nb=$WD$(echo $(basename $tfbs_master) | sed -e 's/.txt/Nb.txt4/')
	tfbs_master4On=$WD$(echo $(basename $tfbs_master) | sed -e 's/.txt/On.txt4/')
printf 'TFOGid-TGOGid\tMz_TFBSpresence\tPn_TFBSpresence\tAb_TFBSpresence\tNb_TFBSpresence\tOn_TFBSpresence\n' > tfbs_colheaders2
grep -wiF Mz $tfbs_master2 | cut -f1,5,6,7,8,9 > $tfbs_master3Mz ; cat tfbs_colheaders2 $tfbs_master3Mz > $tfbs_master4Mz
grep -wiF Pn $tfbs_master2 | cut -f1,5,6,7,8,9 > $tfbs_master3Pn ; cat tfbs_colheaders2 $tfbs_master3Pn > $tfbs_master4Pn
grep -wiF Ab $tfbs_master2 | cut -f1,5,6,7,8,9 > $tfbs_master3Ab ; cat tfbs_colheaders2 $tfbs_master3Ab > $tfbs_master4Ab
grep -wiF Nb $tfbs_master2 | cut -f1,5,6,7,8,9 > $tfbs_master3Nb ; cat tfbs_colheaders2 $tfbs_master3Nb > $tfbs_master4Nb
grep -wiF On $tfbs_master2 | cut -f1,5,6,7,8,9 > $tfbs_master3On ; cat tfbs_colheaders2 $tfbs_master3On > $tfbs_master4On
	Mzregulon_v2=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v2.txt)
	Pnregulon_v2=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v2.txt)
	Abregulon_v2=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v2.txt)
	Nbregulon_v2=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v2.txt)
	Onregulon_v2=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v2.txt)

	#Mzregulon_v2=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v2.txt)
	#Pnregulon_v2=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v2.txt)
	#Abregulon_v2=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v2.txt)
	#Nbregulon_v2=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v2.txt)
	#Onregulon_v2=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v2.txt)
paste -d'\t' $Mzregulon_v1 $tfbs_master4Mz > $Mzregulon_v2
paste -d'\t' $Pnregulon_v1 $tfbs_master4Pn > $Pnregulon_v2
paste -d'\t' $Abregulon_v1 $tfbs_master4Ab > $Abregulon_v2
paste -d'\t' $Nbregulon_v1 $tfbs_master4Nb > $Nbregulon_v2
paste -d'\t' $Onregulon_v1 $tfbs_master4On > $Onregulon_v2
rm *.tmp1 *.tmp2 *.tmp3 tfbs_master.txt2 tfbs_master*.txt4 tfbs_master*.txt3

###### ####### ###### ####### FINAL REGULON MASTER FILES ARE *-wholegenome_Regulon_v2.txt ###### ####### ###### #######

# run the above
qsub -q Test -l select=1:mem=60GB:ncpus=1 run-regulon_v2-pt1.sh # {DONE}

# create some simpler sub-tables too:

nano run-regulon_v2-pt2.sh

#!/bin/bash

# WD=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/)
WD=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/)
# cd $WD

# Columns to consider for regulon scenarios are
# col1 - species
# col4 - TF_id
# col6 - TF_presence_genome
# col7 - TF_presence_module
# col23-32 - TF_switch
# col34 - TG_id
# col37 - TG_presence_genome
# col38 - TG_presence_module
# col54-63 - TG_switch
# col64 - coexpression
# col65 - TFOGid-TGOGid
# col66 - Mz_TFBSpresence
# col67 - Pn_TFBSpresence
# col68 - Ab_TFBSpresence
# col69 - Nb_TFBSpresence
# col70 - On_TFBSpresence

	Mzregulon_v2=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v2.txt)
	Pnregulon_v2=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v2.txt)
	Abregulon_v2=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v2.txt)
	Nbregulon_v2=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v2.txt)
	Onregulon_v2=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v2.txt)

	# Mzregulon_v2=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v2.txt)
	# Pnregulon_v2=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v2.txt)
	# Abregulon_v2=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v2.txt)
	# Nbregulon_v2=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v2.txt)
	# Onregulon_v2=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v2.txt)

	Mzregulon_v3=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3.txt)
	Pnregulon_v3=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3.txt)
	Abregulon_v3=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3.txt)
	Nbregulon_v3=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3.txt)
	Onregulon_v3=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3.txt)

	# Mzregulon_v3=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3.txt)
	# Pnregulon_v3=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3.txt)
	# Abregulon_v3=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3.txt)
	# Nbregulon_v3=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3.txt)
	# Onregulon_v3=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3.txt)

# Prepare simpler sub-tables to compare the TFBS presence/absence with TF/TG presence, coexpression and switching
cut -f1,4,6,7,23-32,34,37,38,54-64,65-71 $Mzregulon_v2 > $Mzregulon_v3
cut -f1,4,6,7,23-32,34,37,38,54-64,65-71 $Pnregulon_v2 > $Pnregulon_v3
cut -f1,4,6,7,23-32,34,37,38,54-64,65-71 $Abregulon_v2 > $Abregulon_v3
cut -f1,4,6,7,23-32,34,37,38,54-64,65-71 $Nbregulon_v2 > $Nbregulon_v3
cut -f1,4,6,7,23-32,34,37,38,54-64,65-71 $Onregulon_v2 > $Onregulon_v3


#### FINAL TABLES TO USE
# 1. SPECIES REGULON MASTER FILES ARE *-wholegenome_Regulon_v3.txt

# Noticed that the presence columns were incorrect as they had mapped to NULL, indicating presence - amended below and in main script (so no need to run script below if regenerating)
	#Mzregulon_v1=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v1.txt)
	#Pnregulon_v1=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v1.txt)
	#Abregulon_v1=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v1.txt)
	#Nbregulon_v1=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v1.txt)
	#Onregulon_v1=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v1.txt)

#head -1 $Mzregulon_v1 | cut -f1-53,55-65 > Mz_colheaders2
#sed 1d $Mzregulon_v1 | awk '{if ($4=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" | awk '{if ($33=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" | awk '{print $1,$2,$3,$4,$5,$66,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$67,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$55,$56,$57,$58,$59,$60,$61,$62,$63,$64,$65}' OFS='\t' > $Mzregulon_v1.bak
#cat Mz_colheaders2 $Mzregulon_v1.bak > $Mzregulon_v1.bak2
#mv $Mzregulon_v1.bak2 $Mzregulon_v1

#head -1 $Pnregulon_v1 | cut -f1-53,55-65 > Pn_colheaders2
#sed 1d $Pnregulon_v1 | awk '{if ($4=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" | awk '{if ($33=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" | awk '{print $1,$2,$3,$4,$5,$66,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$67,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$55,$56,$57,$58,$59,$60,$61,$62,$63,$64,$65}' OFS='\t' > $Pnregulon_v1.bak
#cat Pn_colheaders2 $Pnregulon_v1.bak > $Pnregulon_v1.bak2
#mv $Pnregulon_v1.bak2 $Pnregulon_v1

#head -1 $Abregulon_v1 | cut -f1-53,55-65 > Ab_colheaders2
#sed 1d $Abregulon_v1 | awk '{if ($4=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" | awk '{if ($33=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" | awk '{print $1,$2,$3,$4,$5,$66,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$67,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$55,$56,$57,$58,$59,$60,$61,$62,$63,$64,$65}' OFS='\t' > $Abregulon_v1.bak
#cat Ab_colheaders2 $Abregulon_v1.bak > $Abregulon_v1.bak2
#mv $Abregulon_v1.bak2 $Abregulon_v1

#head -1 $Nbregulon_v1 | cut -f1-53,55-65 > Nb_colheaders2
#sed 1d $Nbregulon_v1 | awk '{if ($4=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" | awk '{if ($33=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" | awk '{print $1,$2,$3,$4,$5,$66,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$67,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$55,$56,$57,$58,$59,$60,$61,$62,$63,$64,$65}' OFS='\t' > $Nbregulon_v1.bak
#cat Nb_colheaders2 $Nbregulon_v1.bak > $Nbregulon_v1.bak2
#mv $Nbregulon_v1.bak2 $Nbregulon_v1

#head -1 $Onregulon_v1 | cut -f1-53,55-65 > On_colheaders2
#sed 1d $Onregulon_v1 | awk '{if ($4=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" | awk '{if ($33=="NULL")print $0,"0"; else{print $0,"1";}}' OFS="\t" | awk '{print $1,$2,$3,$4,$5,$66,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$67,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$55,$56,$57,$58,$59,$60,$61,$62,$63,$64,$65}' OFS='\t' > $Onregulon_v1.bak
#cat On_colheaders2 $Onregulon_v1.bak > $Onregulon_v1.bak2
#mv $Onregulon_v1.bak2 $Onregulon_v1

#rm *-wholegenome_Regulon_v1.txt.bak
#rm *_colheaders2

# run the above
qsub -q Test -l select=1:mem=20GB:ncpus=1 run-regulon_v2-pt2.sh # {DONE}

############################### Analyses on regulon tables below

# a)	Gain and loss rates of targets for each TF? Is regulatory network evolution driven by losses of edges or gain of edges vs common ancestor e.g. sws2a implies loss of edges. What are the TFs and their function (for edge gain and loss)?

# a.i) Separating TF's by class (similar to Human TFs review, based on Interpro/Pfam domain annotations) and plot the number of predicted TFBSs of those particular classes of TFs to compare across species.

cd /tgac/workarea/Research-Groups/RG-cichlids/domain_scan

# a.ia) - get all Pfam annotations for DNA-binding ##{DONE}##
# ftp://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-C.gz # contains the information about clans and the Pfam-A membership
# ftp://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.hmm.dat.gz # A data file that contains information about each Pfam-A family

# search for 'DNA binding' and 'DNA-binding' by splitting each family/domain and searching
awk '/# STOCKHOLM 1.0/{n++}{print >"out" n ".txt" }' Pfam-C

egrep -lir --include=out*.txt "DNA binding|DNA-binding" . > dnabindingfiles

# for each of the DNA binding containing files, add #=GF DE column to each #=GF MB line, tab delimited and create a two column file for mapping
while read i ; do
  sed 's/ /_/g' $i | sed $'s/___/\t/g' > $i.2 # change spaces to underscore and create two columns first
  mycol=$(awk 'NR==4 {print $2}' $i.2) # this will select the field you require and it to the variable mycol
  awk -v mycol="$mycol" '{print $0,mycol}' $i.2 > $i.3 # add the string in mycol variable as a new column
  grep '#=GF_MB' $i.3 | cut -f2,3 | sed 's/;//g' | sed $'s/ /\t/g' > $i.4 # create a tab-delimited two column file for PFAM mapping
done < dnabindingfiles

for i in out*.txt; do
  rm $i $i.2 $i.3 # remove intermediate files
done

cat out*.txt.4 > Pfam-C_annot # collate all the pfam family annotations into one file


## Asked Will to prep the "OGIDS.txt5-*_interproscanComp.out" files so that they have the following format (one line for each):
# ENSG00000132646	on.gene.LG12.673	1	2	0.5	PF02747	PF00705	1.4E-67	4.4E-61
# ENSG00000132646	on.gene.LG12.673	1	2	0.5	PF02747 PF02747 1.4E-67 1.1E-65
## next steps are to then grep as per below, then add the column for TF-family
## then map each TF-family to the counts of TFBSs in each species
# As of 23/03/18, Will has prepped these files and found in /tgac/workarea/Research-Groups/RG-cichlids/domain_scan


# a.ib) - filter cichlid domain scan files for Pfam DNA-binding domain containing ##{DONE}##
for i in Mz Pn Ab Nb On ; do
  cut -f1 Pfam-C_annot | xargs -i grep -wiF {} OGIDS.txt5-${i}Hs_interproscanComp.out > OGIDS.txt5-${i}Hs_interproscanComp-DNAbinding.out
done

for i in Mz Pn Ab Nb On ; do
  cut -f1 Pfam-C_annot | xargs -i grep -wiF {} OGIDS.txt5-${i}Mm_interproscanComp.out > OGIDS.txt5-${i}Mm_interproscanComp-DNAbinding.out
done

# a.ic) - add a column for TF-family (in both Hs and Mm files), then remove intermediates, cat the Hs and Mm files and then rearrange so that TF cichlid ID first
for i in Mz Pn Ab Nb On ; do
   awk '{print $6,$1,$2,$3,$4,$5,$7,$8,$9}' OFS='\t' OGIDS.txt5-${i}Hs_interproscanComp-DNAbinding.out > OGIDS.txt5-${i}Hs_interproscanComp-DNAbinding.out1
   awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Pfam-C_annot OGIDS.txt5-${i}Hs_interproscanComp-DNAbinding.out1 | awk '{print $7,$2,$3,$4,$5,$6,$1,$8,$9,$10}' OFS='\t' > OGIDS.txt5-${i}Hs_interproscanComp-DNAbinding.out2
   awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Pfam-C_annot OGIDS.txt5-${i}Hs_interproscanComp-DNAbinding.out2 | awk '{print $2,$3,$4,$5,$6,$7,$10,$1,$11,$8,$9}' OFS='\t' > OGIDS.txt5-${i}Hs_interproscanComp-DNAbinding.out3
   awk '{print $6,$1,$2,$3,$4,$5,$7,$8,$9}' OFS='\t' OGIDS.txt5-${i}Mm_interproscanComp-DNAbinding.out > OGIDS.txt5-${i}Mm_interproscanComp-DNAbinding.out1
   awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Pfam-C_annot OGIDS.txt5-${i}Mm_interproscanComp-DNAbinding.out1 | awk '{print $7,$2,$3,$4,$5,$6,$1,$8,$9,$10}' OFS='\t' > OGIDS.txt5-${i}Mm_interproscanComp-DNAbinding.out2
   awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Pfam-C_annot OGIDS.txt5-${i}Mm_interproscanComp-DNAbinding.out2 | awk '{print $2,$3,$4,$5,$6,$7,$10,$1,$11,$8,$9}' OFS='\t' > OGIDS.txt5-${i}Mm_interproscanComp-DNAbinding.out3
 done
rm *.out1 *.out2 # remove intermediates

cat OGIDS.txt5-Mz*_interproscanComp-DNAbinding.out3 | awk '{print $2,$1,$3,$4,$5,$6,$7,$8,$9,$10,$11}' OFS='\t' > OGIDS.txt5-MzHsMm_interproscanComp-DNAbinding.FINAL.out
cat OGIDS.txt5-Pn*_interproscanComp-DNAbinding.out3 | awk '{print $2,$1,$3,$4,$5,$6,$7,$8,$9,$10,$11}' OFS='\t' > OGIDS.txt5-PnHsMm_interproscanComp-DNAbinding.FINAL.out
cat OGIDS.txt5-Ab*_interproscanComp-DNAbinding.out3 | awk '{print $2,$1,$3,$4,$5,$6,$7,$8,$9,$10,$11}' OFS='\t' > OGIDS.txt5-AbHsMm_interproscanComp-DNAbinding.FINAL.out
cat OGIDS.txt5-Nb*_interproscanComp-DNAbinding.out3 | awk '{print $2,$1,$3,$4,$5,$6,$7,$8,$9,$10,$11}' OFS='\t' > OGIDS.txt5-NbHsMm_interproscanComp-DNAbinding.FINAL.out
cat OGIDS.txt5-On*_interproscanComp-DNAbinding.out3 | awk '{print $2,$1,$3,$4,$5,$6,$7,$8,$9,$10,$11}' OFS='\t' > OGIDS.txt5-OnHsMm_interproscanComp-DNAbinding.FINAL.out

# a.id) - finally, you should add TF families to the large regulon tables (add as DNA-binding for TFs and DNA-binding in TGs too) # {DONE}

cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/

Mzregulon_v2=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v2.txt)
Pnregulon_v2=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v2.txt)
Abregulon_v2=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v2.txt)
Nbregulon_v2=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v2.txt)
Onregulon_v2=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v2.txt)

Mzregulon_v3=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3.txt)
Pnregulon_v3=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3.txt)
Abregulon_v3=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3.txt)
Nbregulon_v3=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3.txt)
Onregulon_v3=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3.txt)

# Mzregulon_v2=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v2.txt)
# Pnregulon_v2=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v2.txt)
# Abregulon_v2=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v2.txt)
# Nbregulon_v2=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v2.txt)
# Onregulon_v2=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v2.txt)
#
# Mzregulon_v3=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3.txt)
# Pnregulon_v3=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3.txt)
# Abregulon_v3=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3.txt)
# Nbregulon_v3=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3.txt)
# Onregulon_v3=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3.txt)

for i in /tgac/workarea/Research-Groups/RG-cichlids/domain_scan/*.FINAL.out ; do ln -s $i ; done
MzTFannot=(OGIDS.txt5-MzHsMm_interproscanComp-DNAbinding.FINAL.out)
PnTFannot=(OGIDS.txt5-PnHsMm_interproscanComp-DNAbinding.FINAL.out)
AbTFannot=(OGIDS.txt5-AbHsMm_interproscanComp-DNAbinding.FINAL.out)
NbTFannot=(OGIDS.txt5-NbHsMm_interproscanComp-DNAbinding.FINAL.out)
OnTFannot=(OGIDS.txt5-OnHsMm_interproscanComp-DNAbinding.FINAL.out)

# first, map DNA-binding annotations to the TFs (in that, the TFs DNA bind) # {DONE}

nano v3gen.sh

#!/bin/sh

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$4]){print $0,a[$4];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $MzTFannot $Mzregulon_v2 |
sed '0,/NULL/{s/NULL/TF_ID/}' |
sed '0,/NULL/{s/NULL/TF_HsMm_ID/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FunctoMatchSitesScore/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSites_evaluescore/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSites_evaluescore/}' |
sed 's/NA/NULL/g' > $Mzregulon_v2.temp

# then, map DNA-binding annotations to the TGs (in that, the TGs contain a DNA binding domain), then, use sed to add colheaders by replacig first line NULLs
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$34]){print $0,a[$34];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $MzTFannot $Mzregulon_v2.temp |
sed '0,/NULL/{s/NULL/TG_ID/}' |
sed '0,/NULL/{s/NULL/TG_HsMm_ID/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FunctoMatchSitesScore/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSites_evaluescore/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSites_evaluescore/}' |
sed 's/NA/NULL/g' > $Mzregulon_v3

rm $Mzregulon_v2.temp #remove intermediate files

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$4]){print $0,a[$4];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $PnTFannot $Pnregulon_v2 |
sed '0,/NULL/{s/NULL/TF_ID/}' |
sed '0,/NULL/{s/NULL/TF_HsMm_ID/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FunctoMatchSitesScore/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSites_evaluescore/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSites_evaluescore/}' |
sed 's/NA/NULL/g' > $Pnregulon_v2.temp

# then, map DNA-binding annotations to the TGs (in that, the TGs contain a DNA binding domain), then, use sed to add colheaders by replacig first line NULLs
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$34]){print $0,a[$34];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $PnTFannot $Pnregulon_v2.temp |
sed '0,/NULL/{s/NULL/TG_ID/}' |
sed '0,/NULL/{s/NULL/TG_HsMm_ID/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FunctoMatchSitesScore/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSites_evaluescore/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSites_evaluescore/}' |
sed 's/NA/NULL/g' > $Pnregulon_v3

rm $Pnregulon_v2.temp #remove intermediate files

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$4]){print $0,a[$4];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $AbTFannot $Abregulon_v2 |
sed '0,/NULL/{s/NULL/TF_ID/}' |
sed '0,/NULL/{s/NULL/TF_HsMm_ID/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FunctoMatchSitesScore/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSites_evaluescore/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSites_evaluescore/}' |
sed 's/NA/NULL/g' > $Abregulon_v2.temp

# then, map DNA-binding annotations to the TGs (in that, the TGs contain a DNA binding domain), then, use sed to add colheaders by replacig first line NULLs
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$34]){print $0,a[$34];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $AbTFannot $Abregulon_v2.temp |
sed '0,/NULL/{s/NULL/TG_ID/}' |
sed '0,/NULL/{s/NULL/TG_HsMm_ID/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FunctoMatchSitesScore/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSites_evaluescore/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSites_evaluescore/}' |
sed 's/NA/NULL/g' > $Abregulon_v3

rm $Abregulon_v2.temp #remove intermediate files

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$4]){print $0,a[$4];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $NbTFannot $Nbregulon_v2 |
sed '0,/NULL/{s/NULL/TF_ID/}' |
sed '0,/NULL/{s/NULL/TF_HsMm_ID/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FunctoMatchSitesScore/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSites_evaluescore/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSites_evaluescore/}' |
sed 's/NA/NULL/g' > $Nbregulon_v2.temp

# then, map DNA-binding annotations to the TGs (in that, the TGs contain a DNA binding domain), then, use sed to add colheaders by replacig first line NULLs
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$34]){print $0,a[$34];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $NbTFannot $Nbregulon_v2.temp |
sed '0,/NULL/{s/NULL/TG_ID/}' |
sed '0,/NULL/{s/NULL/TG_HsMm_ID/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FunctoMatchSitesScore/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSites_evaluescore/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSites_evaluescore/}' |
sed 's/NA/NULL/g' > $Nbregulon_v3

rm $Nbregulon_v2.temp #remove intermediate files

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$4]){print $0,a[$4];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $OnTFannot $Onregulon_v2 |
sed '0,/NULL/{s/NULL/TF_ID/}' |
sed '0,/NULL/{s/NULL/TF_HsMm_ID/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FunctoMatchSitesScore/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_MatchedSites_evaluescore/}' |
sed '0,/NULL/{s/NULL/TF_Cich-HsMm_FuncMatchedSites_evaluescore/}' |
sed 's/NA/NULL/g' > $Onregulon_v2.temp

# then, map DNA-binding annotations to the TGs (in that, the TGs contain a DNA binding domain), then, use sed to add colheaders by replacig first line NULLs
awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$0;next}{if(a[$34]){print $0,a[$34];}else{print $0,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL";}}' $OnTFannot $Onregulon_v2.temp |
sed '0,/NULL/{s/NULL/TG_ID/}' |
sed '0,/NULL/{s/NULL/TG_HsMm_ID/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSite0,/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FunctoMatchSitesScore/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSitesPFAMID/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSitesPFAMFamily/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_MatchedSites_evaluescore/}' |
sed '0,/NULL/{s/NULL/TG_Cich-HsMm_FuncMatchedSites_evaluescore/}' |
sed 's/NA/NULL/g' > $Onregulon_v3

rm $Onregulon_v2.temp #remove intermediate files

# run above on interactive
sh v3gen.sh # {DONE}


# a.ii) TFBS PRESENCE/ABSENCE (INTEGRATED INTO REGULON MASTERS ABOVE BUT THIS IS ONLY A SINGLE TABLE FOR ALL SPECIES) - TFBS_MasterTable.txt

### Part 1. Regulon Scenarios - pull out tables of each

nano regulonscenarios_GO.sh

#!/bin/sh
cd $PBS_O_WORKDIR;

# Use the large regulon tables created above

	Mzregulon_v3=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3.txt)
	Pnregulon_v3=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3.txt)
	Abregulon_v3=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3.txt)
	Nbregulon_v3=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3.txt)
	Onregulon_v3=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3.txt)

	# Mzregulon_v3=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3.txt)
	# Pnregulon_v3=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3.txt)
	# Abregulon_v3=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3.txt)
	# Nbregulon_v3=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3.txt)
	# Onregulon_v3=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3.txt)

# 0. TF-TG coexpressed only

#$4 !="NULL" # TF_id
#$34 !="NULL" # TG_id
#$64=="1" # coexpressed

	Mzregulon_coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_coexpressed.txt)
	Pnregulon_coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_coexpressed.txt)
	Abregulon_coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_coexpressed.txt)
	Nbregulon_coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_coexpressed.txt)
	Onregulon_coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_coexpressed.txt)

	# Mzregulon_coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_coexpressed.txt)
	# Pnregulon_coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_coexpressed.txt)
	# Abregulon_coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_coexpressed.txt)
	# Nbregulon_coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_coexpressed.txt)
	# Onregulon_coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_coexpressed.txt)

awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' OFS="\t" $Mzregulon_v3 > $Mzregulon_coexpressed #

awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' OFS="\t" $Pnregulon_v3 > $Pnregulon_coexpressed #

awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' OFS="\t" $Abregulon_v3 > $Abregulon_coexpressed #

awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' OFS="\t" $Nbregulon_v3 > $Nbregulon_coexpressed #

awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' OFS="\t" $Onregulon_v3 > $Onregulon_coexpressed #


# 1. Module switching - TF=1, TG=1, Co-expressed=1/0, TF SW=1/0 and TG SW=1/0 (both cannot be 0), TFBS=1/0

#$4 !="NULL" # TF_id
#$34 !="NULL" # TG_id
#$64=="1" # coexpressed
#$9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" # TF 1:1 orthology
#$40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL" # TG 1:1 orthology
#$23=="1" || $24=="1" || $25=="1" || $26=="1" # TF switch
#$54=="1" || $55=="1" || $56=="1" || $57=="1" # TG switch
# 67-71 # TFBS

# 1:1 orthologs; co expressed only, at least one module switch (of TF or TG)

	Mzregulon_anySwitch1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed.txt)
	Pnregulon_anySwitch1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed.txt)
	Abregulon_anySwitch1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed.txt)
	Nbregulon_anySwitch1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed.txt)
	Onregulon_anySwitch1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed.txt)

	# Mzregulon_anySwitch1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed.txt)
	# Pnregulon_anySwitch1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed.txt)
	# Abregulon_anySwitch1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed.txt)
	# Nbregulon_anySwitch1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed.txt)
	# Onregulon_anySwitch1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed.txt)

awk '$4 !="NULL" && $34 !="NULL" && $64=="1" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Mzregulon_v3 OFS="\t" | awk '$23=="1" || $24=="1" || $25=="1" || $26=="1" || $54=="1" || $55=="1" || $56=="1" || $57=="1"' OFS="\t" > $Mzregulon_anySwitch1to1coexpressed #151

awk '$4 !="NULL" && $34 !="NULL" && $64=="1" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Pnregulon_v3 OFS="\t" | awk '$23=="1" || $24=="1" || $25=="1" || $26=="1" || $54=="1" || $55=="1" || $56=="1" || $57=="1"' OFS="\t" > $Pnregulon_anySwitch1to1coexpressed #188

awk '$4 !="NULL" && $34 !="NULL" && $64=="1" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Abregulon_v3 OFS="\t" | awk '$23=="1" || $24=="1" || $25=="1" || $26=="1" || $54=="1" || $55=="1" || $56=="1" || $57=="1"' OFS="\t" > $Abregulon_anySwitch1to1coexpressed #162

awk '$4 !="NULL" && $34 !="NULL" && $64=="1" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Nbregulon_v3 OFS="\t" | awk '$23=="1" || $24=="1" || $25=="1" || $26=="1" || $54=="1" || $55=="1" || $56=="1" || $57=="1"' OFS="\t" > $Nbregulon_anySwitch1to1coexpressed #159

awk '$4 !="NULL" && $34 !="NULL" && $64=="1" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Onregulon_v3 OFS="\t" | awk '$23=="1" || $24=="1" || $25=="1" || $26=="1" || $54=="1" || $55=="1" || $56=="1" || $57=="1"' OFS="\t" > $Onregulon_anySwitch1to1coexpressed #61

# no 1:1 orthologs; co expressed only, at least one module switch (of TF or TG)

	Mzregulon_anySwitchno1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed.txt)
	Pnregulon_anySwitchno1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed.txt)
	Abregulon_anySwitchno1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed.txt)
	Nbregulon_anySwitchno1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed.txt)
	Onregulon_anySwitchno1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed.txt)

	# Mzregulon_anySwitchno1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed.txt)
	# Pnregulon_anySwitchno1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed.txt)
	# Abregulon_anySwitchno1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed.txt)
	# Nbregulon_anySwitchno1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed.txt)
	# Onregulon_anySwitchno1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed.txt)

awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' $Mzregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="1" || $24=="1" || $25=="1" || $26=="1" || $54=="1" || $55=="1" || $56=="1" || $57=="1"' OFS="\t" > $Mzregulon_anySwitchno1to1coexpressed #280
awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' $Pnregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="1" || $24=="1" || $25=="1" || $26=="1" || $54=="1" || $55=="1" || $56=="1" || $57=="1"' OFS="\t" > $Pnregulon_anySwitchno1to1coexpressed #331
awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' $Abregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="1" || $24=="1" || $25=="1" || $26=="1" || $54=="1" || $55=="1" || $56=="1" || $57=="1"' OFS="\t" > $Abregulon_anySwitchno1to1coexpressed #297
awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' $Nbregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="1" || $24=="1" || $25=="1" || $26=="1" || $54=="1" || $55=="1" || $56=="1" || $57=="1"' OFS="\t" > $Nbregulon_anySwitchno1to1coexpressed #133
awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' $Onregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="1" || $24=="1" || $25=="1" || $26=="1" || $54=="1" || $55=="1" || $56=="1" || $57=="1"' OFS="\t" > $Onregulon_anySwitchno1to1coexpressed #530

## TFBS presence/absence in TG orthologs for each of the above
# presence absence Mz-On - col66-70, for each test species, needs to be 1 e.g. Mz==1 && Pn==0 || Ab==0 || Nb==0 || On==0 for absent, all 1's for present
# both TF and TG present - none of the pre-requisites required as will be using the output files from above

# 1:1 orthologs; co expressed only, at least one module switch (of TF or TG), LOSS OF BINDING SITE IN ANY OTHER SPECIES

	Mzregulon_anySwitch1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss.txt)
	Pnregulon_anySwitch1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss.txt)
	Abregulon_anySwitch1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss.txt)
	Nbregulon_anySwitch1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss.txt)
	Onregulon_anySwitch1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss.txt)

	# Mzregulon_anySwitch1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss.txt)
	# Pnregulon_anySwitch1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss.txt)
	# Abregulon_anySwitch1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss.txt)
	# Nbregulon_anySwitch1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss.txt)
	# Onregulon_anySwitch1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss.txt)

awk '$66=="1" && $67=="0" || $68=="0" || $69=="0" || $70=="0"' $Mzregulon_anySwitch1to1coexpressed OFS="\t" > $Mzregulon_anySwitch1to1coexpressed_TFBSloss #146
awk '$67=="1" && $66=="0" || $68=="0" || $69=="0" || $70=="0"' $Pnregulon_anySwitch1to1coexpressed OFS="\t" > $Pnregulon_anySwitch1to1coexpressed_TFBSloss #183
awk '$68=="1" && $66=="0" || $67=="0" || $69=="0" || $70=="0"' $Abregulon_anySwitch1to1coexpressed OFS="\t" > $Abregulon_anySwitch1to1coexpressed_TFBSloss #157
awk '$69=="1" && $66=="0" || $67=="0" || $68=="0" || $70=="0"' $Nbregulon_anySwitch1to1coexpressed OFS="\t" > $Nbregulon_anySwitch1to1coexpressed_TFBSloss #155
awk '$70=="1" && $66=="0" || $67=="0" || $68=="0" || $69=="0"' $Onregulon_anySwitch1to1coexpressed OFS="\t" > $Onregulon_anySwitch1to1coexpressed_TFBSloss #60

# 1:1 orthologs; co expressed only, at least one module switch (of TF or TG), NO LOSS OF BINDING SITE IN ANY SPECIES

	Mzregulon_anySwitch1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss.txt)
	Pnregulon_anySwitch1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss.txt)
	Abregulon_anySwitch1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss.txt)
	Nbregulon_anySwitch1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss.txt)
	Onregulon_anySwitch1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss.txt)

	# Mzregulon_anySwitch1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss.txt)
	# Pnregulon_anySwitch1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss.txt)
	# Abregulon_anySwitch1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss.txt)
	# Nbregulon_anySwitch1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss.txt)
	# Onregulon_anySwitch1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss.txt)

awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Mzregulon_anySwitch1to1coexpressed OFS="\t" > $Mzregulon_anySwitch1to1coexpressed_noTFBSloss #5
awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Pnregulon_anySwitch1to1coexpressed OFS="\t" > $Pnregulon_anySwitch1to1coexpressed_noTFBSloss #5
awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Abregulon_anySwitch1to1coexpressed OFS="\t" > $Abregulon_anySwitch1to1coexpressed_noTFBSloss #5
awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Nbregulon_anySwitch1to1coexpressed OFS="\t" > $Nbregulon_anySwitch1to1coexpressed_noTFBSloss #4
awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Onregulon_anySwitch1to1coexpressed OFS="\t" > $Onregulon_anySwitch1to1coexpressed_noTFBSloss #1

# no 1:1 orthologs; co expressed only, at least one module switch (of TF or TG), LOSS OF BINDING SITE IN ANY OTHER SPECIES

	Mzregulon_anySwitchno1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss.txt)
	Pnregulon_anySwitchno1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss.txt)
	Abregulon_anySwitchno1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss.txt)
	Nbregulon_anySwitchno1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss.txt)
	Onregulon_anySwitchno1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss.txt)

	# Mzregulon_anySwitchno1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss.txt)
	# Pnregulon_anySwitchno1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss.txt)
	# Abregulon_anySwitchno1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss.txt)
	# Nbregulon_anySwitchno1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss.txt)
	# Onregulon_anySwitchno1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss.txt)

awk '$66=="1" && $67=="0" || $68=="0" || $69=="0" || $70=="0"' $Mzregulon_anySwitchno1to1coexpressed OFS="\t" > $Mzregulon_anySwitchno1to1coexpressed_TFBSloss #280
awk '$67=="1" && $66=="0" || $68=="0" || $69=="0" || $70=="0"' $Pnregulon_anySwitchno1to1coexpressed OFS="\t" > $Pnregulon_anySwitchno1to1coexpressed_TFBSloss #315
awk '$68=="1" && $66=="0" || $67=="0" || $69=="0" || $70=="0"' $Abregulon_anySwitchno1to1coexpressed OFS="\t" > $Abregulon_anySwitchno1to1coexpressed_TFBSloss #297
awk '$69=="1" && $66=="0" || $67=="0" || $68=="0" || $70=="0"' $Nbregulon_anySwitchno1to1coexpressed OFS="\t" > $Nbregulon_anySwitchno1to1coexpressed_TFBSloss #133
awk '$70=="1" && $66=="0" || $67=="0" || $68=="0" || $69=="0"' $Onregulon_anySwitchno1to1coexpressed OFS="\t" > $Onregulon_anySwitchno1to1coexpressed_TFBSloss #485

# no 1:1 orthologs; co expressed only, at least one module switch (of TF or TG), NO LOSS OF BINDING SITE IN ANY SPECIES

	Mzregulon_anySwitchno1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss.txt)
	Pnregulon_anySwitchno1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss.txt)
	Abregulon_anySwitchno1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss.txt)
	Nbregulon_anySwitchno1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss.txt)
	Onregulon_anySwitchno1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss.txt)

	# Mzregulon_anySwitchno1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss.txt)
	# Pnregulon_anySwitchno1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss.txt)
	# Abregulon_anySwitchno1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss.txt)
	# Nbregulon_anySwitchno1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss.txt)
	# Onregulon_anySwitchno1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss.txt)

awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Mzregulon_anySwitchno1to1coexpressed OFS="\t" > $Mzregulon_anySwitchno1to1coexpressed_noTFBSloss #0
awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Pnregulon_anySwitchno1to1coexpressed OFS="\t" > $Pnregulon_anySwitchno1to1coexpressed_noTFBSloss #16
awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Abregulon_anySwitchno1to1coexpressed OFS="\t" > $Abregulon_anySwitchno1to1coexpressed_noTFBSloss #0
awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Nbregulon_anySwitchno1to1coexpressed OFS="\t" > $Nbregulon_anySwitchno1to1coexpressed_noTFBSloss #0
awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Onregulon_anySwitchno1to1coexpressed OFS="\t" > $Onregulon_anySwitchno1to1coexpressed_noTFBSloss #45

# Pull out numbers within
# a. TF-TG coexpressed but both switched with any species (potential regulon rewiring)
	# aa. 1:1 orthologs

	Mzregulon_TFTGSwitch1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_TFTGSwitch1to1coexpressed.txt)
	Pnregulon_TFTGSwitch1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_TFTGSwitch1to1coexpressed.txt)
	Abregulon_TFTGSwitch1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_TFTGSwitch1to1coexpressed.txt)
	Nbregulon_TFTGSwitch1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_TFTGSwitch1to1coexpressed.txt)
	Onregulon_TFTGSwitch1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_TFTGSwitch1to1coexpressed.txt)

	# Mzregulon_TFTGSwitch1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_TFTGSwitch1to1coexpressed.txt)
	# Pnregulon_TFTGSwitch1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_TFTGSwitch1to1coexpressed.txt)
	# Abregulon_TFTGSwitch1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_TFTGSwitch1to1coexpressed.txt)
	# Nbregulon_TFTGSwitch1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_TFTGSwitch1to1coexpressed.txt)
	# Onregulon_TFTGSwitch1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_TFTGSwitch1to1coexpressed.txt)

	awk '$4 !="NULL" && $34 !="NULL" && $64=="1" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Mzregulon_v3 OFS="\t" | awk '$23=="1" && $54=="1" || $24=="1" && $55=="1" || $25=="1" && $56=="1" || $26=="1" && $57=="1"' OFS="\t" > $Mzregulon_TFTGSwitch1to1coexpressed #66
	awk '$4 !="NULL" && $34 !="NULL" && $64=="1" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Pnregulon_v3 OFS="\t" | awk '$23=="1" && $54=="1" || $24=="1" && $55=="1" || $25=="1" && $56=="1" || $26=="1" && $57=="1"' OFS="\t" > $Pnregulon_TFTGSwitch1to1coexpressed #70
	awk '$4 !="NULL" && $34 !="NULL" && $64=="1" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Abregulon_v3 OFS="\t" | awk '$23=="1" && $54=="1" || $24=="1" && $55=="1" || $25=="1" && $56=="1" || $26=="1" && $57=="1"' OFS="\t" > $Abregulon_TFTGSwitch1to1coexpressed #70
	awk '$4 !="NULL" && $34 !="NULL" && $64=="1" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Nbregulon_v3 OFS="\t" | awk '$23=="1" && $54=="1" || $24=="1" && $55=="1" || $25=="1" && $56=="1" || $26=="1" && $57=="1"' OFS="\t" > $Nbregulon_TFTGSwitch1to1coexpressed #59
	awk '$4 !="NULL" && $34 !="NULL" && $64=="1" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Onregulon_v3 OFS="\t" | awk '$23=="1" && $54=="1" || $24=="1" && $55=="1" || $25=="1" && $56=="1" || $26=="1" && $57=="1"' OFS="\t" > $Onregulon_TFTGSwitch1to1coexpressed #40


	# ab. no 1:1 orthologs

	Mzregulon_TFTGSwitchno1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_TFTGSwitchno1to1coexpressed.txt)
	Pnregulon_TFTGSwitchno1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_TFTGSwitchno1to1coexpressed.txt)
	Abregulon_TFTGSwitchno1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_TFTGSwitchno1to1coexpressed.txt)
	Nbregulon_TFTGSwitchno1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_TFTGSwitchno1to1coexpressed.txt)
	Onregulon_TFTGSwitchno1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_TFTGSwitchno1to1coexpressed.txt)

	# Mzregulon_TFTGSwitchno1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_TFTGSwitchno1to1coexpressed.txt)
	# Pnregulon_TFTGSwitchno1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_TFTGSwitchno1to1coexpressed.txt)
	# Abregulon_TFTGSwitchno1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_TFTGSwitchno1to1coexpressed.txt)
	# Nbregulon_TFTGSwitchno1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_TFTGSwitchno1to1coexpressed.txt)
	# Onregulon_TFTGSwitchno1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_TFTGSwitchno1to1coexpressed.txt)

	awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' $Mzregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="1" && $54=="1" || $24=="1" && $55=="1" || $25=="1" && $56=="1" || $26=="1" && $57=="1"' OFS="\t" > $Mzregulon_TFTGSwitchno1to1coexpressed #69
	awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' $Pnregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="1" && $54=="1" || $24=="1" && $55=="1" || $25=="1" && $56=="1" || $26=="1" && $57=="1"' OFS="\t" > $Pnregulon_TFTGSwitchno1to1coexpressed #35
	awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' $Abregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="1" && $54=="1" || $24=="1" && $55=="1" || $25=="1" && $56=="1" || $26=="1" && $57=="1"' OFS="\t" > $Abregulon_TFTGSwitchno1to1coexpressed #26
	awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' $Nbregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="1" && $54=="1" || $24=="1" && $55=="1" || $25=="1" && $56=="1" || $26=="1" && $57=="1"' OFS="\t" > $Nbregulon_TFTGSwitchno1to1coexpressed #38
	awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' $Onregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="1" && $54=="1" || $24=="1" && $55=="1" || $25=="1" && $56=="1" || $26=="1" && $57=="1"' OFS="\t" > $Onregulon_TFTGSwitchno1to1coexpressed #49

# b. TF-TG not coexpressed and TF switched with any species (potential master regulator rewiring)

	# ba. 1:1 orthologs
	Mzregulon_TFSwitch1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_TFSwitch1to1nocoexpressed.txt)
	Pnregulon_TFSwitch1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_TFSwitch1to1nocoexpressed.txt)
	Abregulon_TFSwitch1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_TFSwitch1to1nocoexpressed.txt)
	Nbregulon_TFSwitch1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_TFSwitch1to1nocoexpressed.txt)
	Onregulon_TFSwitch1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_TFSwitch1to1nocoexpressed.txt)

	# Mzregulon_TFSwitch1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_TFSwitch1to1nocoexpressed.txt)
	# Pnregulon_TFSwitch1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_TFSwitch1to1nocoexpressed.txt)
	# Abregulon_TFSwitch1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_TFSwitch1to1nocoexpressed.txt)
	# Nbregulon_TFSwitch1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_TFSwitch1to1nocoexpressed.txt)
	# Onregulon_TFSwitch1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_TFSwitch1to1nocoexpressed.txt)

	awk '$4 !="NULL" && $34 !="NULL" && $64=="0" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Mzregulon_v3 OFS="\t" | awk '$23=="1" && $54=="0" || $24=="1" && $55=="0" || $25=="1" && $56=="0" || $26=="1" && $57=="0"' OFS="\t" > $Mzregulon_TFSwitch1to1nocoexpressed #421
	awk '$4 !="NULL" && $34 !="NULL" && $64=="0" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Pnregulon_v3 OFS="\t" | awk '$23=="1" && $54=="0" || $24=="1" && $55=="0" || $25=="1" && $56=="0" || $26=="1" && $57=="0"' OFS="\t" > $Pnregulon_TFSwitch1to1nocoexpressed #418
	awk '$4 !="NULL" && $34 !="NULL" && $64=="0" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Abregulon_v3 OFS="\t" | awk '$23=="1" && $54=="0" || $24=="1" && $55=="0" || $25=="1" && $56=="0" || $26=="1" && $57=="0"' OFS="\t" > $Abregulon_TFSwitch1to1nocoexpressed #413
	awk '$4 !="NULL" && $34 !="NULL" && $64=="0" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Nbregulon_v3 OFS="\t" | awk '$23=="1" && $54=="0" || $24=="1" && $55=="0" || $25=="1" && $56=="0" || $26=="1" && $57=="0"' OFS="\t" > $Nbregulon_TFSwitch1to1nocoexpressed #381
	awk '$4 !="NULL" && $34 !="NULL" && $64=="0" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Onregulon_v3 OFS="\t" | awk '$23=="1" && $54=="0" || $24=="1" && $55=="0" || $25=="1" && $56=="0" || $26=="1" && $57=="0"' OFS="\t" > $Onregulon_TFSwitch1to1nocoexpressed #644

	# bb. no 1:1 orthologs
	Mzregulon_TFSwitchno1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_TFSwitchno1to1nocoexpressed.txt)
	Pnregulon_TFSwitchno1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_TFSwitchno1to1nocoexpressed.txt)
	Abregulon_TFSwitchno1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_TFSwitchno1to1nocoexpressed.txt)
	Nbregulon_TFSwitchno1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_TFSwitchno1to1nocoexpressed.txt)
	Onregulon_TFSwitchno1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_TFSwitchno1to1nocoexpressed.txt)

	# Mzregulon_TFSwitchno1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_TFSwitchno1to1nocoexpressed.txt)
	# Pnregulon_TFSwitchno1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_TFSwitchno1to1nocoexpressed.txt)
	# Abregulon_TFSwitchno1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_TFSwitchno1to1nocoexpressed.txt)
	# Nbregulon_TFSwitchno1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_TFSwitchno1to1nocoexpressed.txt)
	# Onregulon_TFSwitchno1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_TFSwitchno1to1nocoexpressed.txt)

	awk '$4 !="NULL" && $34 !="NULL" && $64=="0"' $Mzregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="1" && $54=="0" || $24=="1" && $55=="0" || $25=="1" && $56=="0" || $26=="1" && $57=="0"' OFS="\t" > $Mzregulon_TFSwitchno1to1nocoexpressed #2091
	awk '$4 !="NULL" && $34 !="NULL" && $64=="0"' $Pnregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="1" && $54=="0" || $24=="1" && $55=="0" || $25=="1" && $56=="0" || $26=="1" && $57=="0"' OFS="\t" > $Pnregulon_TFSwitchno1to1nocoexpressed #1509
	awk '$4 !="NULL" && $34 !="NULL" && $64=="0"' $Abregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="1" && $54=="0" || $24=="1" && $55=="0" || $25=="1" && $56=="0" || $26=="1" && $57=="0"' OFS="\t" > $Abregulon_TFSwitchno1to1nocoexpressed #2265
	awk '$4 !="NULL" && $34 !="NULL" && $64=="0"' $Nbregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="1" && $54=="0" || $24=="1" && $55=="0" || $25=="1" && $56=="0" || $26=="1" && $57=="0"' OFS="\t" > $Nbregulon_TFSwitchno1to1nocoexpressed #1688
	awk '$4 !="NULL" && $34 !="NULL" && $64=="0"' $Onregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="1" && $54=="0" || $24=="1" && $55=="0" || $25=="1" && $56=="0" || $26=="1" && $57=="0"' OFS="\t" > $Onregulon_TFSwitchno1to1nocoexpressed #2666

# c. TF-TG not coexpressed and TG switched with any species (potential functional target rewiring)

	# ca. 1:1 orthologs
	Mzregulon_TGSwitch1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_TGSwitch1to1nocoexpressed.txt)
	Pnregulon_TGSwitch1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_TGSwitch1to1nocoexpressed.txt)
	Abregulon_TGSwitch1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_TGSwitch1to1nocoexpressed.txt)
	Nbregulon_TGSwitch1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_TGSwitch1to1nocoexpressed.txt)
	Onregulon_TGSwitch1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_TGSwitch1to1nocoexpressed.txt)

	# Mzregulon_TGSwitch1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_TGSwitch1to1nocoexpressed.txt)
	# Pnregulon_TGSwitch1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_TGSwitch1to1nocoexpressed.txt)
	# Abregulon_TGSwitch1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_TGSwitch1to1nocoexpressed.txt)
	# Nbregulon_TGSwitch1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_TGSwitch1to1nocoexpressed.txt)
	# Onregulon_TGSwitch1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_TGSwitch1to1nocoexpressed.txt)

	awk '$4 !="NULL" && $34 !="NULL" && $64=="0" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Mzregulon_v3 OFS="\t" | awk '$23=="0" && $54=="1" || $24=="1=0" && $55=="1" || $25=="0" && $56=="1" || $26=="0" && $57=="1"' OFS="\t" > $Mzregulon_TGSwitch1to1nocoexpressed #265
	awk '$4 !="NULL" && $34 !="NULL" && $64=="0" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Pnregulon_v3 OFS="\t" | awk '$23=="0" && $54=="1" || $24=="1=0" && $55=="1" || $25=="0" && $56=="1" || $26=="0" && $57=="1"' OFS="\t" > $Pnregulon_TGSwitch1to1nocoexpressed #273
	awk '$4 !="NULL" && $34 !="NULL" && $64=="0" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Abregulon_v3 OFS="\t" | awk '$23=="0" && $54=="1" || $24=="1=0" && $55=="1" || $25=="0" && $56=="1" || $26=="0" && $57=="1"' OFS="\t" > $Abregulon_TGSwitch1to1nocoexpressed #291
	awk '$4 !="NULL" && $34 !="NULL" && $64=="0" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Nbregulon_v3 OFS="\t" | awk '$23=="0" && $54=="1" || $24=="1=0" && $55=="1" || $25=="0" && $56=="1" || $26=="0" && $57=="1"' OFS="\t" > $Nbregulon_TGSwitch1to1nocoexpressed #233
	awk '$4 !="NULL" && $34 !="NULL" && $64=="0" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Onregulon_v3 OFS="\t" | awk '$23=="0" && $54=="1" || $24=="1=0" && $55=="1" || $25=="0" && $56=="1" || $26=="0" && $57=="1"' OFS="\t" > $Onregulon_TGSwitch1to1nocoexpressed #127

	# cb. no 1:1 orthologs
	Mzregulon_TGSwitchno1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_TGSwitchno1to1nocoexpressed.txt)
	Pnregulon_TGSwitchno1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_TGSwitchno1to1nocoexpressed.txt)
	Abregulon_TGSwitchno1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_TGSwitchno1to1nocoexpressed.txt)
	Nbregulon_TGSwitchno1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_TGSwitchno1to1nocoexpressed.txt)
	Onregulon_TGSwitchno1to1nocoexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_TGSwitchno1to1nocoexpressed.txt)

	# Mzregulon_TGSwitchno1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_TGSwitchno1to1nocoexpressed.txt)
	# Pnregulon_TGSwitchno1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_TGSwitchno1to1nocoexpressed.txt)
	# Abregulon_TGSwitchno1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_TGSwitchno1to1nocoexpressed.txt)
	# Nbregulon_TGSwitchno1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_TGSwitchno1to1nocoexpressed.txt)
	# Onregulon_TGSwitchno1to1nocoexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_TGSwitchno1to1nocoexpressed.txt)

	awk '$4 !="NULL" && $34 !="NULL" && $64=="0"' $Mzregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="0" && $54=="1" || $24=="0" && $55=="1" || $25=="0" && $56=="1" || $26=="0" && $57=="1"' OFS="\t" > $Mzregulon_TGSwitchno1to1nocoexpressed #1114
	awk '$4 !="NULL" && $34 !="NULL" && $64=="0"' $Pnregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="0" && $54=="1" || $24=="0" && $55=="1" || $25=="0" && $56=="1" || $26=="0" && $57=="1"' OFS="\t" > $Pnregulon_TGSwitchno1to1nocoexpressed #2039
	awk '$4 !="NULL" && $34 !="NULL" && $64=="0"' $Abregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="0" && $54=="1" || $24=="0" && $55=="1" || $25=="0" && $56=="1" || $26=="0" && $57=="1"' OFS="\t" > $Abregulon_TGSwitchno1to1nocoexpressed #1007
	awk '$4 !="NULL" && $34 !="NULL" && $64=="0"' $Nbregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="0" && $54=="1" || $24=="0" && $55=="1" || $25=="0" && $56=="1" || $26=="0" && $57=="1"' OFS="\t" > $Nbregulon_TGSwitchno1to1nocoexpressed #403
	awk '$4 !="NULL" && $34 !="NULL" && $64=="0"' $Onregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="0" && $54=="1" || $24=="0" && $55=="1" || $25=="0" && $56=="1" || $26=="0" && $57=="1"' OFS="\t" > $Onregulon_TGSwitchno1to1nocoexpressed #1741

# 2. Module conserved - TF=1, TG=1, Co-expressed=1, TF SW=0 and TG SW=0

# 1:1 orthologs; co expressed only
	Mzregulon_Conserved1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed.txt)
	Pnregulon_Conserved1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed.txt)
	Abregulon_Conserved1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed.txt)
	Nbregulon_Conserved1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed.txt)
	Onregulon_Conserved1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conserved1to1coexpressed.txt)

	# Mzregulon_Conserved1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed.txt)
	# Pnregulon_Conserved1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed.txt)
	# Abregulon_Conserved1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed.txt)
	# Nbregulon_Conserved1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed.txt)
	# Onregulon_Conserved1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conserved1to1coexpressed.txt)

awk '$4 !="NULL" && $34 !="NULL" && $64=="1" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Mzregulon_v3 OFS="\t" | awk '$23=="0" && $24=="0" && $25=="0" && $26=="0" && $54=="0" && $55=="0" && $56=="0" && $57=="0"' OFS="\t" > $Mzregulon_Conserved1to1coexpressed #9

awk '$4 !="NULL" && $34 !="NULL" && $64=="1" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Pnregulon_v3 OFS="\t" | awk '$23=="0" && $24=="0" && $25=="0" && $26=="0" && $54=="0" && $55=="0" && $56=="0" && $57=="0"' OFS="\t" > $Pnregulon_Conserved1to1coexpressed #9

awk '$4 !="NULL" && $34 !="NULL" && $64=="1" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Abregulon_v3 OFS="\t" | awk '$23=="0" && $24=="0" && $25=="0" && $26=="0" && $54=="0" && $55=="0" && $56=="0" && $57=="0"' OFS="\t" > $Abregulon_Conserved1to1coexpressed #10

awk '$4 !="NULL" && $34 !="NULL" && $64=="1" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Nbregulon_v3 OFS="\t" | awk '$23=="0" && $24=="0" && $25=="0" && $26=="0" && $54=="0" && $55=="0" && $56=="0" && $57=="0"' OFS="\t" > $Nbregulon_Conserved1to1coexpressed #4

awk '$4 !="NULL" && $34 !="NULL" && $64=="1" && $9 !="NULL" && $11 !="NULL" && $13 !="NULL" && $15 !="NULL" && $40 !="NULL" && $42 !="NULL" && $44 !="NULL" && $46 !="NULL"' $Onregulon_v3 OFS="\t" | awk '$23=="0" && $24=="0" && $25=="0" && $26=="0" && $54=="0" && $55=="0" && $56=="0" && $57=="0"' OFS="\t" > $Onregulon_Conserved1to1coexpressed #11


# no 1:1 orthologs; co expressed only
	Mzregulon_Conservedno1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed.txt)
	Pnregulon_Conservedno1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed.txt)
	Abregulon_Conservedno1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed.txt)
	Nbregulon_Conservedno1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed.txt)
	Onregulon_Conservedno1to1coexpressed=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed.txt)

	# Mzregulon_Conservedno1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed.txt)
	# Pnregulon_Conservedno1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed.txt)
	# Abregulon_Conservedno1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed.txt)
	# Nbregulon_Conservedno1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed.txt)
	# Onregulon_Conservedno1to1coexpressed=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed.txt)

	awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' $Mzregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="0" && $24=="0" && $25=="0" && $26=="0" && $54=="0" && $55=="0" && $56=="0" && $57=="0"' OFS="\t" > $Mzregulon_Conservedno1to1coexpressed #114
	awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' $Pnregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="0" && $24=="0" && $25=="0" && $26=="0" && $54=="0" && $55=="0" && $56=="0" && $57=="0"' OFS="\t" > $Pnregulon_Conservedno1to1coexpressed #166
	awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' $Abregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="0" && $24=="0" && $25=="0" && $26=="0" && $54=="0" && $55=="0" && $56=="0" && $57=="0"' OFS="\t" > $Abregulon_Conservedno1to1coexpressed #103
	awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' $Nbregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="0" && $24=="0" && $25=="0" && $26=="0" && $54=="0" && $55=="0" && $56=="0" && $57=="0"' OFS="\t" > $Nbregulon_Conservedno1to1coexpressed #19
	awk '$4 !="NULL" && $34 !="NULL" && $64=="1"' $Onregulon_v3 OFS="\t" | awk '$9=="NULL" || $11=="NULL" || $13=="NULL" || $15=="NULL" || $40=="NULL" || $42=="NULL" || $44=="NULL" || $46=="NULL"' OFS="\t" | awk '$23=="0" && $24=="0" && $25=="0" && $26=="0" && $54=="0" && $55=="0" && $56=="0" && $57=="0"' OFS="\t" > $Onregulon_Conservedno1to1coexpressed #154


## TFBS presence/absence in TG orthologs of Module conserved - TF=1, TG=1, Co-expressed=1, TF SW=0 and TG SW=0
# presence absence Mz-On - col66-70, for each test species, needs to be 1 e.g. Mz==1 && Pn==0 || Ab==0 || Nb==0 || On==0 for absent, all 1's for present
# both TF and TG present - none of the pre-requisites required as will be using the output files from above

# 1:1 orthologs; LOSS OF BINDING SITE IN ANY OTHER SPECIES

	Mzregulon_Conserved1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss.txt)
	Pnregulon_Conserved1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss.txt)
	Abregulon_Conserved1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss.txt)
	Nbregulon_Conserved1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss.txt)
	Onregulon_Conserved1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss.txt)

	# Mzregulon_Conserved1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss.txt)
	# Pnregulon_Conserved1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss.txt)
	# Abregulon_Conserved1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss.txt)
	# Nbregulon_Conserved1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss.txt)
	# Onregulon_Conserved1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss.txt)

awk '$66=="1" && $67=="0" || $68=="0" || $69=="0" || $70=="0"' $Mzregulon_Conserved1to1coexpressed OFS="\t" > $Mzregulon_Conserved1to1coexpressed_TFBSloss #9
awk '$67=="1" && $66=="0" || $68=="0" || $69=="0" || $70=="0"' $Pnregulon_Conserved1to1coexpressed OFS="\t" > $Pnregulon_Conserved1to1coexpressed_TFBSloss #9
awk '$68=="1" && $66=="0" || $67=="0" || $69=="0" || $70=="0"' $Abregulon_Conserved1to1coexpressed OFS="\t" > $Abregulon_Conserved1to1coexpressed_TFBSloss #10
awk '$69=="1" && $66=="0" || $67=="0" || $68=="0" || $70=="0"' $Nbregulon_Conserved1to1coexpressed OFS="\t" > $Nbregulon_Conserved1to1coexpressed_TFBSloss #4
awk '$70=="1" && $66=="0" || $67=="0" || $68=="0" || $69=="0"' $Onregulon_Conserved1to1coexpressed OFS="\t" > $Onregulon_Conserved1to1coexpressed_TFBSloss #11

# 1:1 orthologs; NO LOSS OF BINDING SITE IN ANY SPECIES

	Mzregulon_Conserved1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss.txt)
	Pnregulon_Conserved1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss.txt)
	Abregulon_Conserved1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss.txt)
	Nbregulon_Conserved1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss.txt)
	Onregulon_Conserved1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss.txt)

	# Mzregulon_Conserved1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss.txt)
	# Pnregulon_Conserved1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss.txt)
	# Abregulon_Conserved1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss.txt)
	# Nbregulon_Conserved1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss.txt)
	# Onregulon_Conserved1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss.txt)

awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Mzregulon_Conserved1to1coexpressed OFS="\t" > $Mzregulon_Conserved1to1coexpressed_noTFBSloss #0
awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Pnregulon_Conserved1to1coexpressed OFS="\t" > $Pnregulon_Conserved1to1coexpressed_noTFBSloss #0
awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Abregulon_Conserved1to1coexpressed OFS="\t" > $Abregulon_Conserved1to1coexpressed_noTFBSloss #0
awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Nbregulon_Conserved1to1coexpressed OFS="\t" > $Nbregulon_Conserved1to1coexpressed_noTFBSloss #0
awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Onregulon_Conserved1to1coexpressed OFS="\t" > $Onregulon_Conserved1to1coexpressed_noTFBSloss #0

# no 1:1 orthologs; LOSS OF BINDING SITE IN ANY OTHER SPECIES

	Mzregulon_Conservedno1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss.txt)
	Pnregulon_Conservedno1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss.txt)
	Abregulon_Conservedno1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss.txt)
	Nbregulon_Conservedno1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss.txt)
	Onregulon_Conservedno1to1coexpressed_TFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss.txt)

	# Mzregulon_Conservedno1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss.txt)
	# Pnregulon_Conservedno1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss.txt)
	# Abregulon_Conservedno1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss.txt)
	# Nbregulon_Conservedno1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss.txt)
	# Onregulon_Conservedno1to1coexpressed_TFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss.txt)

awk '$66=="1" && $67=="0" || $68=="0" || $69=="0" || $70=="0"' $Mzregulon_Conservedno1to1coexpressed OFS="\t" > $Mzregulon_Conservedno1to1coexpressed_TFBSloss #113
awk '$67=="1" && $66=="0" || $68=="0" || $69=="0" || $70=="0"' $Pnregulon_Conservedno1to1coexpressed OFS="\t" > $Pnregulon_Conservedno1to1coexpressed_TFBSloss #163
awk '$68=="1" && $66=="0" || $67=="0" || $69=="0" || $70=="0"' $Abregulon_Conservedno1to1coexpressed OFS="\t" > $Abregulon_Conservedno1to1coexpressed_TFBSloss #102
awk '$69=="1" && $66=="0" || $67=="0" || $68=="0" || $70=="0"' $Nbregulon_Conservedno1to1coexpressed OFS="\t" > $Nbregulon_Conservedno1to1coexpressed_TFBSloss #18
awk '$70=="1" && $66=="0" || $67=="0" || $68=="0" || $69=="0"' $Onregulon_Conservedno1to1coexpressed OFS="\t" > $Onregulon_Conservedno1to1coexpressed_TFBSloss #152

# no 1:1 orthologs; NO LOSS OF BINDING SITE IN ANY SPECIES

	Mzregulon_Conservedno1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss.txt)
	Pnregulon_Conservedno1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss.txt)
	Abregulon_Conservedno1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss.txt)
	Nbregulon_Conservedno1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss.txt)
	Onregulon_Conservedno1to1coexpressed_noTFBSloss=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss.txt)

	# Mzregulon_Conservedno1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss.txt)
	# Pnregulon_Conservedno1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss.txt)
	# Abregulon_Conservedno1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss.txt)
	# Nbregulon_Conservedno1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss.txt)
	# Onregulon_Conservedno1to1coexpressed_noTFBSloss=(/Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss.txt)

awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Mzregulon_Conservedno1to1coexpressed OFS="\t" > $Mzregulon_Conservedno1to1coexpressed_noTFBSloss #1
awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Pnregulon_Conservedno1to1coexpressed OFS="\t" > $Pnregulon_Conservedno1to1coexpressed_noTFBSloss #3
awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Abregulon_Conservedno1to1coexpressed OFS="\t" > $Abregulon_Conservedno1to1coexpressed_noTFBSloss #1
awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Nbregulon_Conservedno1to1coexpressed OFS="\t" > $Nbregulon_Conservedno1to1coexpressed_noTFBSloss #1
awk '$66=="1" && $67=="1" && $68=="1" && $69=="1" && $70=="1"' $Onregulon_Conservedno1to1coexpressed OFS="\t" > $Onregulon_Conservedno1to1coexpressed_noTFBSloss #2


### Part 2. Functional landscape of co-expressed Regulons that switch modules or remain conserved between species


# 1. Pull out per species and per module regulons using large regulon tables (*-wholegenome_Regulon_v3.txt)

### First layer

# A. TF-TG coexpressed only
	Mzregulon_coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_coexpressed_genes.txt)
	Pnregulon_coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_coexpressed_genes.txt)
	Abregulon_coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_coexpressed_genes.txt)
	Nbregulon_coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_coexpressed_genes.txt)
	Onregulon_coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_coexpressed_genes.txt)

cut -f4,8,34,39 $Mzregulon_coexpressed > $Mzregulon_coexpressed_genes
cut -f4,8,34,39 $Pnregulon_coexpressed > $Pnregulon_coexpressed_genes
cut -f4,8,34,39 $Abregulon_coexpressed > $Abregulon_coexpressed_genes
cut -f4,8,34,39 $Nbregulon_coexpressed > $Nbregulon_coexpressed_genes
cut -f4,8,34,39 $Onregulon_coexpressed > $Onregulon_coexpressed_genes

### Second layer

# A. Module switched (either TF/TG switched), co-expressed, 1:1 orthologs
	Mzregulon_anySwitch1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_genes.txt)
	Pnregulon_anySwitch1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_genes.txt)
	Abregulon_anySwitch1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_genes.txt)
	Nbregulon_anySwitch1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_genes.txt)
	Onregulon_anySwitch1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_genes.txt)

cut -f4,8,34,39 $Mzregulon_anySwitch1to1coexpressed > $Mzregulon_anySwitch1to1coexpressed_genes
cut -f4,8,34,39 $Pnregulon_anySwitch1to1coexpressed > $Pnregulon_anySwitch1to1coexpressed_genes
cut -f4,8,34,39 $Abregulon_anySwitch1to1coexpressed > $Abregulon_anySwitch1to1coexpressed_genes
cut -f4,8,34,39 $Nbregulon_anySwitch1to1coexpressed > $Nbregulon_anySwitch1to1coexpressed_genes
cut -f4,8,34,39 $Onregulon_anySwitch1to1coexpressed > $Onregulon_anySwitch1to1coexpressed_genes

# B. Module switched (either TF/TG switched), co-expressed, no 1:1 orthologs

	Mzregulon_anySwitchno1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_genes.txt)
	Pnregulon_anySwitchno1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_genes.txt)
	Abregulon_anySwitchno1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_genes.txt)
	Nbregulon_anySwitchno1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_genes.txt)
	Onregulon_anySwitchno1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_genes.txt)

cut -f4,8,34,39 $Mzregulon_anySwitchno1to1coexpressed > $Mzregulon_anySwitchno1to1coexpressed_genes
cut -f4,8,34,39 $Pnregulon_anySwitchno1to1coexpressed > $Pnregulon_anySwitchno1to1coexpressed_genes
cut -f4,8,34,39 $Abregulon_anySwitchno1to1coexpressed > $Abregulon_anySwitchno1to1coexpressed_genes
cut -f4,8,34,39 $Nbregulon_anySwitchno1to1coexpressed > $Nbregulon_anySwitchno1to1coexpressed_genes
cut -f4,8,34,39 $Onregulon_anySwitchno1to1coexpressed > $Onregulon_anySwitchno1to1coexpressed_genes

# C. Module conserved, co-expressed, 1:1 orthologs
	Mzregulon_Conserved1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_genes.txt)
	Pnregulon_Conserved1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_genes.txt)
	Abregulon_Conserved1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_genes.txt)
	Nbregulon_Conserved1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_genes.txt)
	Onregulon_Conserved1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_genes.txt)

cut -f4,8,34,39 $Mzregulon_Conserved1to1coexpressed > $Mzregulon_Conserved1to1coexpressed_genes
cut -f4,8,34,39 $Pnregulon_Conserved1to1coexpressed > $Pnregulon_Conserved1to1coexpressed_genes
cut -f4,8,34,39 $Abregulon_Conserved1to1coexpressed > $Abregulon_Conserved1to1coexpressed_genes
cut -f4,8,34,39 $Nbregulon_Conserved1to1coexpressed > $Nbregulon_Conserved1to1coexpressed_genes
cut -f4,8,34,39 $Onregulon_Conserved1to1coexpressed > $Onregulon_Conserved1to1coexpressed_genes

# D. Module conserved, co-expressed, no 1:1 orthologs

	Mzregulon_Conservedno1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_genes.txt)
	Pnregulon_Conservedno1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_genes.txt)
	Abregulon_Conservedno1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_genes.txt)
	Nbregulon_Conservedno1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_genes.txt)
	Onregulon_Conservedno1to1coexpressed_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_genes.txt)

cut -f4,8,34,39 $Mzregulon_Conservedno1to1coexpressed > $Mzregulon_Conservedno1to1coexpressed_genes
cut -f4,8,34,39 $Pnregulon_Conservedno1to1coexpressed > $Pnregulon_Conservedno1to1coexpressed_genes
cut -f4,8,34,39 $Abregulon_Conservedno1to1coexpressed > $Abregulon_Conservedno1to1coexpressed_genes
cut -f4,8,34,39 $Nbregulon_Conservedno1to1coexpressed > $Nbregulon_Conservedno1to1coexpressed_genes
cut -f4,8,34,39 $Onregulon_Conservedno1to1coexpressed > $Onregulon_Conservedno1to1coexpressed_genes

# E. Within above Switched groups; 1:1/no1:1; CE) pull out the TFBS presence/absence genes (not filtering based on FunSeq/Indels)

	Mzregulon_anySwitch1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt)
	Pnregulon_anySwitch1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt)
	Abregulon_anySwitch1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt)
	Nbregulon_anySwitch1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt)
	Onregulon_anySwitch1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt)

cut -f4,8,34,39 $Mzregulon_anySwitch1to1coexpressed_TFBSloss > $Mzregulon_anySwitch1to1coexpressed_TFBSloss_genes
cut -f4,8,34,39 $Pnregulon_anySwitch1to1coexpressed_TFBSloss > $Pnregulon_anySwitch1to1coexpressed_TFBSloss_genes
cut -f4,8,34,39 $Abregulon_anySwitch1to1coexpressed_TFBSloss > $Abregulon_anySwitch1to1coexpressed_TFBSloss_genes
cut -f4,8,34,39 $Nbregulon_anySwitch1to1coexpressed_TFBSloss > $Nbregulon_anySwitch1to1coexpressed_TFBSloss_genes
cut -f4,8,34,39 $Onregulon_anySwitch1to1coexpressed_TFBSloss > $Onregulon_anySwitch1to1coexpressed_TFBSloss_genes

	Mzregulon_anySwitch1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt)
	Pnregulon_anySwitch1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt)
	Abregulon_anySwitch1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt)
	Nbregulon_anySwitch1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt)
	Onregulon_anySwitch1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt)

cut -f4,8,34,39 $Mzregulon_anySwitch1to1coexpressed_noTFBSloss > $Mzregulon_anySwitch1to1coexpressed_noTFBSloss_genes
cut -f4,8,34,39 $Pnregulon_anySwitch1to1coexpressed_noTFBSloss > $Pnregulon_anySwitch1to1coexpressed_noTFBSloss_genes
cut -f4,8,34,39 $Abregulon_anySwitch1to1coexpressed_noTFBSloss > $Abregulon_anySwitch1to1coexpressed_noTFBSloss_genes
cut -f4,8,34,39 $Nbregulon_anySwitch1to1coexpressed_noTFBSloss > $Nbregulon_anySwitch1to1coexpressed_noTFBSloss_genes
cut -f4,8,34,39 $Onregulon_anySwitch1to1coexpressed_noTFBSloss > $Onregulon_anySwitch1to1coexpressed_noTFBSloss_genes

	Mzregulon_anySwitchno1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt)
	Pnregulon_anySwitchno1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt)
	Abregulon_anySwitchno1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt)
	Nbregulon_anySwitchno1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt)
	Onregulon_anySwitchno1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt)

cut -f4,8,34,39 $Mzregulon_anySwitchno1to1coexpressed_TFBSloss > $Mzregulon_anySwitchno1to1coexpressed_TFBSloss_genes
cut -f4,8,34,39 $Pnregulon_anySwitchno1to1coexpressed_TFBSloss > $Pnregulon_anySwitchno1to1coexpressed_TFBSloss_genes
cut -f4,8,34,39 $Abregulon_anySwitchno1to1coexpressed_TFBSloss > $Abregulon_anySwitchno1to1coexpressed_TFBSloss_genes
cut -f4,8,34,39 $Nbregulon_anySwitchno1to1coexpressed_TFBSloss > $Nbregulon_anySwitchno1to1coexpressed_TFBSloss_genes
cut -f4,8,34,39 $Onregulon_anySwitchno1to1coexpressed_TFBSloss > $Onregulon_anySwitchno1to1coexpressed_TFBSloss_genes

	Mzregulon_anySwitchno1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt)
	Pnregulon_anySwitchno1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt)
	Abregulon_anySwitchno1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt)
	Nbregulon_anySwitchno1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt)
	Onregulon_anySwitchno1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt)

cut -f4,8,34,39 $Mzregulon_anySwitchno1to1coexpressed_noTFBSloss > $Mzregulon_anySwitchno1to1coexpressed_noTFBSloss_genes
cut -f4,8,34,39 $Pnregulon_anySwitchno1to1coexpressed_noTFBSloss > $Pnregulon_anySwitchno1to1coexpressed_noTFBSloss_genes
cut -f4,8,34,39 $Abregulon_anySwitchno1to1coexpressed_noTFBSloss > $Abregulon_anySwitchno1to1coexpressed_noTFBSloss_genes
cut -f4,8,34,39 $Nbregulon_anySwitchno1to1coexpressed_noTFBSloss > $Nbregulon_anySwitchno1to1coexpressed_noTFBSloss_genes
cut -f4,8,34,39 $Onregulon_anySwitchno1to1coexpressed_noTFBSloss > $Onregulon_anySwitchno1to1coexpressed_noTFBSloss_genes

# F. Within above Conserved groups; 1:1/no1:1; CE/noCE) pull out the TFBS presence/absence genes (not filtering based on FunSeq/Indels)

	Mzregulon_Conserved1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt)
	Pnregulon_Conserved1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt)
	Abregulon_Conserved1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt)
	Nbregulon_Conserved1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt)
	Onregulon_Conserved1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt)

cut -f4,8,34,39 $Mzregulon_Conserved1to1coexpressed_TFBSloss > $Mzregulon_Conserved1to1coexpressed_TFBSloss_genes
cut -f4,8,34,39 $Pnregulon_Conserved1to1coexpressed_TFBSloss > $Pnregulon_Conserved1to1coexpressed_TFBSloss_genes
cut -f4,8,34,39 $Abregulon_Conserved1to1coexpressed_TFBSloss > $Abregulon_Conserved1to1coexpressed_TFBSloss_genes
cut -f4,8,34,39 $Nbregulon_Conserved1to1coexpressed_TFBSloss > $Nbregulon_Conserved1to1coexpressed_TFBSloss_genes
cut -f4,8,34,39 $Onregulon_Conserved1to1coexpressed_TFBSloss > $Onregulon_Conserved1to1coexpressed_TFBSloss_genes

	Mzregulon_Conserved1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt)
	Pnregulon_Conserved1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt)
	Abregulon_Conserved1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt)
	Nbregulon_Conserved1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt)
	Onregulon_Conserved1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt)

cut -f4,8,34,39 $Mzregulon_Conserved1to1coexpressed_noTFBSloss > $Mzregulon_Conserved1to1coexpressed_noTFBSloss_genes
cut -f4,8,34,39 $Pnregulon_Conserved1to1coexpressed_noTFBSloss > $Pnregulon_Conserved1to1coexpressed_noTFBSloss_genes
cut -f4,8,34,39 $Abregulon_Conserved1to1coexpressed_noTFBSloss > $Abregulon_Conserved1to1coexpressed_noTFBSloss_genes
cut -f4,8,34,39 $Nbregulon_Conserved1to1coexpressed_noTFBSloss > $Nbregulon_Conserved1to1coexpressed_noTFBSloss_genes
cut -f4,8,34,39 $Onregulon_Conserved1to1coexpressed_noTFBSloss > $Onregulon_Conserved1to1coexpressed_noTFBSloss_genes

	Mzregulon_Conservedno1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt)
	Pnregulon_Conservedno1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt)
	Abregulon_Conservedno1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt)
	Nbregulon_Conservedno1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt)
	Onregulon_Conservedno1to1coexpressed_TFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt)

cut -f4,8,34,39 $Mzregulon_Conservedno1to1coexpressed_TFBSloss > $Mzregulon_Conservedno1to1coexpressed_TFBSloss_genes
cut -f4,8,34,39 $Pnregulon_Conservedno1to1coexpressed_TFBSloss > $Pnregulon_Conservedno1to1coexpressed_TFBSloss_genes
cut -f4,8,34,39 $Abregulon_Conservedno1to1coexpressed_TFBSloss > $Abregulon_Conservedno1to1coexpressed_TFBSloss_genes
cut -f4,8,34,39 $Nbregulon_Conservedno1to1coexpressed_TFBSloss > $Nbregulon_Conservedno1to1coexpressed_TFBSloss_genes
cut -f4,8,34,39 $Onregulon_Conservedno1to1coexpressed_TFBSloss > $Onregulon_Conservedno1to1coexpressed_TFBSloss_genes

	Mzregulon_Conservedno1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt)
	Pnregulon_Conservedno1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt)
	Abregulon_Conservedno1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt)
	Nbregulon_Conservedno1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt)
	Onregulon_Conservedno1to1coexpressed_noTFBSloss_genes=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt)

cut -f4,8,34,39 $Mzregulon_Conservedno1to1coexpressed_noTFBSloss > $Mzregulon_Conservedno1to1coexpressed_noTFBSloss_genes
cut -f4,8,34,39 $Pnregulon_Conservedno1to1coexpressed_noTFBSloss > $Pnregulon_Conservedno1to1coexpressed_noTFBSloss_genes
cut -f4,8,34,39 $Abregulon_Conservedno1to1coexpressed_noTFBSloss > $Abregulon_Conservedno1to1coexpressed_noTFBSloss_genes
cut -f4,8,34,39 $Nbregulon_Conservedno1to1coexpressed_noTFBSloss > $Nbregulon_Conservedno1to1coexpressed_noTFBSloss_genes
cut -f4,8,34,39 $Onregulon_Conservedno1to1coexpressed_noTFBSloss > $Onregulon_Conservedno1to1coexpressed_noTFBSloss_genes


# Prepare gene names INPUT files of global scenarios (switch/conserved and 1:1/no1:1) - the format needs to be TF<tab>#geneA#geneB..#geneC, this needs to be for each TF on seperate lines
for i in *-wholegenome_Regulon_v3*coexpressed*genes.txt ; do
  cut -f1,3 $i | # cut the required columns
  awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > "$(basename "$i" .txt)_GOINPUT.txt" ;
done
# create a hash table, using the first column as a key and the second column of the line as the value
# to get the whole rest of the line, starting with column 2, collect all columns


# 2. Per species and tissue co-expression modules GO enrichment analysis of regulons to compare co-expressed module switched/conserved genes (1:1 and non 1:1 orthologs) between species and tissues

# Prepare gene names INPUT files

# Seperate each species file into modules

# create a list to while loop
echo 0 > list1
echo 1 >> list1
echo 2 >> list1
echo 3 >> list1
echo 4 >> list1
echo 5 >> list1
echo 6 >> list1
echo 7 >> list1
echo 8 >> list1
echo 9 >> list1

#while read F ; do awk -v mod=$F '$2==mod' $Mzregulon_anySwitch1to1coexpressed_genes > $Mzregulon_anySwitch1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Pnregulon_anySwitch1to1coexpressed_genes > $Pnregulon_anySwitch1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Abregulon_anySwitch1to1coexpressed_genes > $Abregulon_anySwitch1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Nbregulon_anySwitch1to1coexpressed_genes > $Nbregulon_anySwitch1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Onregulon_anySwitch1to1coexpressed_genes > $Onregulon_anySwitch1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Mzregulon_anySwitchno1to1coexpressed_genes > $Mzregulon_anySwitchno1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Pnregulon_anySwitchno1to1coexpressed_genes > $Pnregulon_anySwitchno1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Abregulon_anySwitchno1to1coexpressed_genes > $Abregulon_anySwitchno1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Nbregulon_anySwitchno1to1coexpressed_genes > $Nbregulon_anySwitchno1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Onregulon_anySwitchno1to1coexpressed_genes > $Onregulon_anySwitchno1to1coexpressed_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Mzregulon_anySwitch1to1coexpressed_TFBSloss_genes > $Mzregulon_anySwitch1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Pnregulon_anySwitch1to1coexpressed_TFBSloss_genes > $Pnregulon_anySwitch1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Abregulon_anySwitch1to1coexpressed_TFBSloss_genes > $Abregulon_anySwitch1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Nbregulon_anySwitch1to1coexpressed_TFBSloss_genes > $Nbregulon_anySwitch1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Onregulon_anySwitch1to1coexpressed_TFBSloss_genes > $Onregulon_anySwitch1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Mzregulon_anySwitchno1to1coexpressed_TFBSloss_genes > $Mzregulon_anySwitchno1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Pnregulon_anySwitchno1to1coexpressed_TFBSloss_genes > $Pnregulon_anySwitchno1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Abregulon_anySwitchno1to1coexpressed_TFBSloss_genes > $Abregulon_anySwitchno1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Nbregulon_anySwitchno1to1coexpressed_TFBSloss_genes > $Nbregulon_anySwitchno1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Onregulon_anySwitchno1to1coexpressed_TFBSloss_genes > $Onregulon_anySwitchno1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Mzregulon_anySwitch1to1coexpressed_noTFBSloss_genes > $Mzregulon_anySwitch1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Pnregulon_anySwitch1to1coexpressed_noTFBSloss_genes > $Pnregulon_anySwitch1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Abregulon_anySwitch1to1coexpressed_noTFBSloss_genes > $Abregulon_anySwitch1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Nbregulon_anySwitch1to1coexpressed_noTFBSloss_genes > $Nbregulon_anySwitch1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Onregulon_anySwitch1to1coexpressed_noTFBSloss_genes > $Onregulon_anySwitch1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Mzregulon_anySwitchno1to1coexpressed_noTFBSloss_genes > $Mzregulon_anySwitchno1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Pnregulon_anySwitchno1to1coexpressed_noTFBSloss_genes > $Pnregulon_anySwitchno1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Abregulon_anySwitchno1to1coexpressed_noTFBSloss_genes > $Abregulon_anySwitchno1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Nbregulon_anySwitchno1to1coexpressed_noTFBSloss_genes > $Nbregulon_anySwitchno1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Onregulon_anySwitchno1to1coexpressed_noTFBSloss_genes > $Onregulon_anySwitchno1to1coexpressed_noTFBSloss_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Mzregulon_Conserved1to1coexpressed_genes > $Mzregulon_Conserved1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Pnregulon_Conserved1to1coexpressed_genes > $Pnregulon_Conserved1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Abregulon_Conserved1to1coexpressed_genes > $Abregulon_Conserved1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Nbregulon_Conserved1to1coexpressed_genes > $Nbregulon_Conserved1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Onregulon_Conserved1to1coexpressed_genes > $Onregulon_Conserved1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Mzregulon_Conservedno1to1coexpressed_genes > $Mzregulon_Conservedno1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Pnregulon_Conservedno1to1coexpressed_genes > $Pnregulon_Conservedno1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Abregulon_Conservedno1to1coexpressed_genes > $Abregulon_Conservedno1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Nbregulon_Conservedno1to1coexpressed_genes > $Nbregulon_Conservedno1to1coexpressed_genes-$F ; done < list1
#while read F ; do awk -v mod=$F '$2==mod' $Onregulon_Conservedno1to1coexpressed_genes > $Onregulon_Conservedno1to1coexpressed_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Mzregulon_Conserved1to1coexpressed_TFBSloss_genes > $Mzregulon_Conserved1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Pnregulon_Conserved1to1coexpressed_TFBSloss_genes > $Pnregulon_Conserved1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Abregulon_Conserved1to1coexpressed_TFBSloss_genes > $Abregulon_Conserved1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Nbregulon_Conserved1to1coexpressed_TFBSloss_genes > $Nbregulon_Conserved1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Onregulon_Conserved1to1coexpressed_TFBSloss_genes > $Onregulon_Conserved1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Mzregulon_Conservedno1to1coexpressed_TFBSloss_genes > $Mzregulon_Conservedno1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Pnregulon_Conservedno1to1coexpressed_TFBSloss_genes > $Pnregulon_Conservedno1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Abregulon_Conservedno1to1coexpressed_TFBSloss_genes > $Abregulon_Conservedno1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Nbregulon_Conservedno1to1coexpressed_TFBSloss_genes > $Nbregulon_Conservedno1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Onregulon_Conservedno1to1coexpressed_TFBSloss_genes > $Onregulon_Conservedno1to1coexpressed_TFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Mzregulon_Conserved1to1coexpressed_noTFBSloss_genes > $Mzregulon_Conserved1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Pnregulon_Conserved1to1coexpressed_noTFBSloss_genes > $Pnregulon_Conserved1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Abregulon_Conserved1to1coexpressed_noTFBSloss_genes > $Abregulon_Conserved1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Nbregulon_Conserved1to1coexpressed_noTFBSloss_genes > $Nbregulon_Conserved1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Onregulon_Conserved1to1coexpressed_noTFBSloss_genes > $Onregulon_Conserved1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Mzregulon_Conservedno1to1coexpressed_noTFBSloss_genes > $Mzregulon_Conservedno1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Pnregulon_Conservedno1to1coexpressed_noTFBSloss_genes > $Pnregulon_Conservedno1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Abregulon_Conservedno1to1coexpressed_noTFBSloss_genes > $Abregulon_Conservedno1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Nbregulon_Conservedno1to1coexpressed_noTFBSloss_genes > $Nbregulon_Conservedno1to1coexpressed_noTFBSloss_genes-$F ; done < list1
while read F ; do awk -v mod=$F '$2==mod' $Onregulon_Conservedno1to1coexpressed_noTFBSloss_genes > $Onregulon_Conservedno1to1coexpressed_noTFBSloss_genes-$F ; done < list1

for i in *-wholegenome_Regulon_v3_*_genes.txt-* ; do
	cut -f1,3 $i | awk '{line="";for (i = 2; i <= NF; i++) line = line $i "#"; table[$1]=table[$1] line;} END {for (key in table) print key,"\t",table[key];}' > "$(basename "$i" .txt)_GOINPUT.txt" ;
done

# Need to prepare new genelist files as we have new modules
for i in /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/*-speciesspecnames_clusterassign.txt ; do
	cut -f1 $i > /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/"$(basename "$i" -speciesspecnames_clusterassign.txt)-genelist.txt";
done

# These are the new genelist files
# /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Ab-genelist.txt
# /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Mz-genelist.txt
# /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Pn-genelist.txt
# /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Nb-genelist.txt
# /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/On-genelist.txt

#### Already Ran this in previous scripts - no need to re-run, just put here for you to know that GO terms have been filtered
# Filtering of GO mapping - remove cases where only one gene (second column in each file is number of genes) is associated with a term
# Need to take all terms from _genecnt file that have 1 in second column and remove lines where the term is completely present (be careful as some may be picked up where, for example, ATP_ is before the term e.g. ATP_3'-5'_DNA_helicase_activity and 3'-5'_DNA_helicase_activity).
for i in /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/*_genecnt.txt ; do awk '(NR==0) || ($2!=1)' $i | cut -f1 > /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/"$(basename "$i" .txt)_filter1.txt" ; done #these are the files where genecnt is not 1, use these

genecnt_filter1=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/*_filter1.txt)

# change column order of *_gotermap.txt files to do awk matching
for i in /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/*_gotermap.txt ; do awk '{print $2, $1, $3}' OFS='\t' $i > /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/"$(basename "$i" .txt)1.txt" ; done

# match first column from each file, output matched column and NA if not present (these will be those with only a genecnt of 1), remove the lines with NA and reorder columns back to original
gotermap1=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/*_gotermap1.txt)
for ((i = 0; i < ${#genecnt_filter1[@]} && i < ${#gotermap1[@]}; i++)); do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' "${genecnt_filter1[i]}" "${gotermap1[i]}" | grep -v NA | awk '{print $2, $1, $3}' OFS='\t' > /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/"$(basename "${gotermap1[i]}" .txt)_filtered1.txt" ; done

# add the count numbers back to the filtered genecnt files
genecnt=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/*_genecnt.txt)
for ((i = 0; i < ${#genecnt[@]} && i < ${#genecnt_filter1[@]}; i++)); do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' "${genecnt_filter1[i]}" "${genecnt[i]}" | grep -v NA > /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/"$(basename "${genecnt_filter1[i]}" .txt)a.txt" ; done

# Then move the files you need to a new folder so that the prefix can be recognised - USE THESE FILTERED FILES THAT HAVE NO TERMS WITH A GENECNT OF ONLY 1
mkdir /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered
mv /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/*1_filtered1.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/
mv /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/*filter1a.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/
rm /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/*_gotermap1.txt # remove original reordered files
rm /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/*_genecnt_filter1.txt
# change the filenames as they need to have a certain naming for enrichment analysis
cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/
# rename 's/_filter1a.txt/.txt/' *_genecnt_filter1a.txt
# rename 's/1_filtered1.txt/.txt/' *_gotermap1_filtered1.txt
rename _filter1a.txt .txt *_genecnt_filter1a.txt
rename 1_filtered1.txt .txt *_gotermap1_filtered1.txt


# Extract only the biological processes from d/l file - downloaded from cichlid genome paper resources and moved to scratch area
# cp -r /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/cichlidGOterms . #ALREADY RAN THIS
# cd /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/cichlidGOterms/
# grep biological_process GOterms.txt | cut -f4 | sed 's/ /_/g' > GOterms-biologicalprocess.txt # create a bp file only and replace all spaces with underscore
GOterms_bp=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/cichlidGOterms/GOterms-biologicalprocess.txt) # add new file to variable

cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/ # change to where the actual files for GO mapping are
mkdir biological_process_only # make a new directory for the bp files to use

for i in *_gotermap.txt ; do
	awk '{print $2,$1,$3}' OFS='\t' $i > biological_process_only/"$(basename "$i" .txt)-rearrange.txt";
done # rarrange the files for awk mapping

for i in *_genecnt.txt ; do
	awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $GOterms_bp $i | grep -v NA > biological_process_only/$i;
done # awk match and create new genecnt files

for i in biological_process_only/*-rearrange.txt ; do
	awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $GOterms_bp $i | grep -v NA | awk '{print $2,$1,$3}' OFS='\t' > biological_process_only/"$(basename "$i" -rearrange.txt).txt";
done ; rm biological_process_only/*-rearrange.txt # awk match, create new gotermap files and remove the rearrange files

# Association files mapping GO term to gene names file here (these have been filtered for GO terms with 1 count and only have biological processes):
# /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Asbu_
# /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Meze_
# /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Nebr_
# /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Orni_
# /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Puny_

cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis

# Run enrichment using a for loop with variables
GOINPUT_Ab=(Ab-wholegenome_Regulon_v3_*_genes*GOINPUT.txt)
GOINPUT_Mz=(Mz-wholegenome_Regulon_v3_*_genes*GOINPUT.txt)
GOINPUT_Pn=(Pn-wholegenome_Regulon_v3_*_genes*GOINPUT.txt)
GOINPUT_Nb=(Nb-wholegenome_Regulon_v3_*_genes*GOINPUT.txt)
GOINPUT_On=(On-wholegenome_Regulon_v3_*_genes*GOINPUT.txt)

mkdir GOOUTPUT_BPonly

ml gcc
ml zlib
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/tgac/software/testing/enrichAnalyzer/0.1/x86_64/lib:/tgac/software/testing/enrichAnalyzer/0.1/x86_64/lib2/

for ((i = 0; i < ${#GOINPUT_Ab[@]}; i++)); do /tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer "${GOINPUT_Ab[i]}" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Ab-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Asbu_ 1 GOOUTPUT_BPonly/"$(basename "${GOINPUT_Ab[i]}" _GOINPUT.txt)_GOOUTPUT" persg ; done

for ((i = 0; i < ${#GOINPUT_Mz[@]}; i++)); do /tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer "${GOINPUT_Mz[i]}" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Mz-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Meze_ 1 GOOUTPUT_BPonly/"$(basename "${GOINPUT_Mz[i]}" _GOINPUT.txt)_GOOUTPUT" persg ; done

for ((i = 0; i < ${#GOINPUT_Pn[@]}; i++)); do /tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer "${GOINPUT_Pn[i]}" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Pn-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Puny_ 1 GOOUTPUT_BPonly/"$(basename "${GOINPUT_Pn[i]}" _GOINPUT.txt)_GOOUTPUT" persg ; done

for ((i = 0; i < ${#GOINPUT_Nb[@]}; i++)); do /tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer "${GOINPUT_Nb[i]}" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/Nb-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Nebr_ 1 GOOUTPUT_BPonly/"$(basename "${GOINPUT_Nb[i]}" _GOINPUT.txt)_GOOUTPUT" persg ; done

for ((i = 0; i < ${#GOINPUT_On[@]}; i++)); do /tgac/software/testing/enrichAnalyzer/0.1/src/enrichAnalyzer "${GOINPUT_On[i]}" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Module_genesandexpr/On-genelist.txt /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/1.EdgeGOenrichment/GO_Analysis/GO_terms/filtered/biological_process_only/Orni_ 1 GOOUTPUT_BPonly/"$(basename "${GOINPUT_On[i]}" _GOINPUT.txt)_GOOUTPUT" persg ; done

# tar up the enrichment files

# First layer - global (coexpressed only)
tar -zcvf GOOUTPUT_BPonly/All-Regulon_GOenrichmentBPonly-first.tar.gz GOOUTPUT_BPonly/*-wholegenome_Regulon_v3_coexpressed_genes_GOOUTPUT_details.txt

# Second layer - switched/conserved, 1:1 and no1:1, TFBS presence/absence
tar -zcvf GOOUTPUT_BPonly/Ab-Regulon_GOenrichmentBPonly-second.tar.gz GOOUTPUT_BPonly/Ab*TFBSloss_genes_GOOUTPUT_details.txt
tar -zcvf GOOUTPUT_BPonly/Pn-Regulon_GOenrichmentBPonly-second.tar.gz GOOUTPUT_BPonly/Pn*TFBSloss_genes_GOOUTPUT_details.txt
tar -zcvf GOOUTPUT_BPonly/On-Regulon_GOenrichmentBPonly-second.tar.gz GOOUTPUT_BPonly/On*TFBSloss_genes_GOOUTPUT_details.txt
tar -zcvf GOOUTPUT_BPonly/Nb-Regulon_GOenrichmentBPonly-second.tar.gz GOOUTPUT_BPonly/Nb*TFBSloss_genes_GOOUTPUT_details.txt
tar -zcvf GOOUTPUT_BPonly/Mz-Regulon_GOenrichmentBPonly-second.tar.gz GOOUTPUT_BPonly/Mz*TFBSloss_genes_GOOUTPUT_details.txt

# Third layer - all above but modules
tar -zcvf GOOUTPUT_BPonly/Ab-Regulon_GOenrichmentBPonly-third.tar.gz GOOUTPUT_BPonly/Ab*coexpressed*txt*_GOOUTPUT_details.txt
tar -zcvf GOOUTPUT_BPonly/Pn-Regulon_GOenrichmentBPonly-third.tar.gz GOOUTPUT_BPonly/Pn*coexpressed*txt*_GOOUTPUT_details.txt
tar -zcvf GOOUTPUT_BPonly/On-Regulon_GOenrichmentBPonly-third.tar.gz GOOUTPUT_BPonly/On*coexpressed*txt*_GOOUTPUT_details.txt
tar -zcvf GOOUTPUT_BPonly/Nb-Regulon_GOenrichmentBPonly-third.tar.gz GOOUTPUT_BPonly/Nb*coexpressed*txt*_GOOUTPUT_details.txt
tar -zcvf GOOUTPUT_BPonly/Mz-Regulon_GOenrichmentBPonly-third.tar.gz GOOUTPUT_BPonly/Mz*coexpressed*txt*_GOOUTPUT_details.txt


# run the above
qsub -q Test -l select=1:mem=60GB:ncpus=1 regulonscenarios_GO.sh


nano regulonscenarios_GO-part2.sh

#!/bin/bash
cd $PBS_O_WORKDIR;

## Create tables of significance score and common TF-GO edges of each GO enrichment from above to create GO maps

# Enrichment Colheaders are:
#1. TF
#2. GO enrichment term in the TF denoted in col 1
#3. Hypergeometric test p-value
#4. Corrected p-value (Benjamini-Hochberg procedure)
#5. Total number of genes with any term that intersect the total numbers associated with the TF
#6. Total number of genes with the term in column 2
#7. Total number of target genes for enrichment
#8. Total number of target genes that have the term in col2
#9. Fold enrichment (must be >1, otherwise things wouldn't be significant). But it is essentially the ratio of observed over expected fraction of motif hits.
#10. Target genes that have enrichment for the term in col 2

# Map the TF gene ID in each file to the TF name
# 1. Species-specific TFBS files for mapping created in NetworkReconstruction_v5_simplified.sh
for i in /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/merged_mat_qual_pvals_ALL.out1.TF.* ; do ln -s $i ; done
# merged_mat_qual_pvals_ALL.out1.TF.ab
# merged_mat_qual_pvals_ALL.out1.TF.mz
# merged_mat_qual_pvals_ALL.out1.TF.nb
# merged_mat_qual_pvals_ALL.out1.TF.on
# merged_mat_qual_pvals_ALL.out1.TF.pn

# 2. Map the TF gene ID to the species specific TFBS file and output the TF gene name, then create a column that is TF-GO, then calculate the -log(10) of the adjusted p-value (col4) and output that as next column, then filter for signficance score > 0 (multiple test correction)
mkdir GOOUTPUT_BPonly/significancescores
cd GOOUTPUT_BPonly/
for i in Mz-*.txt ; do
	awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$6;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' ../merged_mat_qual_pvals_ALL.out1.TF.mz $i | awk '{print $11"-"$2,log($4)/-log(10)}' OFS='\t' | grep -v 'NA-' | awk '($2 > 0 )' > significancescores/"$(basename "$i" .txt)-SS.txt";
done

for i in Pn-*.txt ; do
	awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$6;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' ../merged_mat_qual_pvals_ALL.out1.TF.pn $i | awk '{print $11"-"$2,log($4)/-log(10)}' OFS='\t' | grep -v 'NA-' | awk '($2 > 0 )' > significancescores/"$(basename "$i" .txt)-SS.txt";
done

for i in Ab-*.txt ; do
	awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$6;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' ../merged_mat_qual_pvals_ALL.out1.TF.ab $i | awk '{print $11"-"$2,log($4)/-log(10)}' OFS='\t' | grep -v 'NA-' | awk '($2 > 0 )' > significancescores/"$(basename "$i" .txt)-SS.txt";
done

for i in Nb-*.txt ; do
	awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$6;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' ../merged_mat_qual_pvals_ALL.out1.TF.nb $i | awk '{print $11"-"$2,log($4)/-log(10)}' OFS='\t' | grep -v 'NA-' | awk '($2 > 0 )' > significancescores/"$(basename "$i" .txt)-SS.txt";
done

for i in On-*.txt ; do
	awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$6;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' ../merged_mat_qual_pvals_ALL.out1.TF.on $i | awk '{print $11"-"$2,log($4)/-log(10)}' OFS='\t' | grep -v 'NA-' | awk '($2 > 0 )' > significancescores/"$(basename "$i" .txt)-SS.txt";
done

# 3. Create files for each scenario that has each TF-GO and a significance score for each species
cd significancescores/

# a. create a union of each TF-GO by merging and then sorting for each scenario sets

cat *-wholegenome_Regulon_v3_coexpressed_genes_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > coexpressed_genes_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_genes_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_genes_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_genes_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_genes_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_genes_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_genes_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_genes_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_genes_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_TFBSloss_genes_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_TFBSloss_genes_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_TFBSloss_genes_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_TFBSloss_genes_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_noTFBSloss_genes_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_noTFBSloss_genes_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_noTFBSloss_genes_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_noTFBSloss_genes_TFGO.txt

cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_TFBSloss_genes-0_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_TFBSloss_genes-0_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_noTFBSloss_genes-0_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_noTFBSloss_genes-0_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_TFBSloss_genes-0_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_TFBSloss_genes-0_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_noTFBSloss_genes-0_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_noTFBSloss_genes-0_TFGO.txt

cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_TFBSloss_genes-1_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_TFBSloss_genes-1_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_noTFBSloss_genes-1_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_noTFBSloss_genes-1_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_TFBSloss_genes-1_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_TFBSloss_genes-1_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_noTFBSloss_genes-1_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_noTFBSloss_genes-1_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_TFBSloss_genes-2_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_TFBSloss_genes-2_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_noTFBSloss_genes-2_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_noTFBSloss_genes-2_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_TFBSloss_genes-2_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_TFBSloss_genes-2_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_noTFBSloss_genes-2_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_noTFBSloss_genes-2_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_TFBSloss_genes-3_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_TFBSloss_genes-3_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_noTFBSloss_genes-3_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_noTFBSloss_genes-3_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_TFBSloss_genes-3_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_TFBSloss_genes-3_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_noTFBSloss_genes-3_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_noTFBSloss_genes-3_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_TFBSloss_genes-4_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_TFBSloss_genes-4_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_noTFBSloss_genes-4_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_noTFBSloss_genes-4_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_TFBSloss_genes-4_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_TFBSloss_genes-4_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_noTFBSloss_genes-4_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_noTFBSloss_genes-4_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_TFBSloss_genes-5_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_TFBSloss_genes-5_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_noTFBSloss_genes-5_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_noTFBSloss_genes-5_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_TFBSloss_genes-5_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_TFBSloss_genes-5_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_noTFBSloss_genes-5_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_noTFBSloss_genes-5_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_TFBSloss_genes-6_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_TFBSloss_genes-6_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_noTFBSloss_genes-6_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_noTFBSloss_genes-6_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_TFBSloss_genes-6_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_TFBSloss_genes-6_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_noTFBSloss_genes-6_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_noTFBSloss_genes-6_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_TFBSloss_genes-7_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_TFBSloss_genes-7_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_noTFBSloss_genes-7_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_noTFBSloss_genes-7_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_TFBSloss_genes-7_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_TFBSloss_genes-7_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_noTFBSloss_genes-7_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_noTFBSloss_genes-7_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_TFBSloss_genes-8_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_TFBSloss_genes-8_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_noTFBSloss_genes-8_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_noTFBSloss_genes-8_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_TFBSloss_genes-8_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_TFBSloss_genes-8_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_noTFBSloss_genes-8_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_noTFBSloss_genes-8_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_TFBSloss_genes-9_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_TFBSloss_genes-9_TFGO.txt
cat *-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conserved1to1coexpressed_noTFBSloss_genes-9_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitch1to1coexpressed_noTFBSloss_genes-9_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_TFBSloss_genes-9_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_TFBSloss_genes-9_TFGO.txt
cat *-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > anySwitchno1to1coexpressed_noTFBSloss_genes-9_TFGO.txt
cat *-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt | cut -f1 | sort -u > Conservedno1to1coexpressed_noTFBSloss_genes-9_TFGO.txt

# b. add a single NA to each and every empty file - this ensures matching can occur (make sure to run after above otherwise you will have NA as a TF-GO)
# i. first, create an array of all the empty files
array=() # create an empty array
find . -empty -print0 >tmpfile # find all empty files and add them to a tmpfile
while IFS=  read -r -d $'\0'; do
    array+=("$REPLY")
done <tmpfile # create the array of empty files using the tmpfile
rm tmpfile # remove the tmpfile
# ii. add NA to each empty file by iterating over the array
for ((i = 0; i < ${#array[@]}; i++)); do echo "NA" >> "${array[i]}" ; done

# c. awk match each file to the union files, cut the significance score, dump each file into 'merging/' folder, then paste to create final files for each scenario
mkdir merging

# don't add Mz to list as this is the first to be added to file
echo Pn > list1
echo Ab >> list1
echo Nb >> list1
echo On >> list1


# run the above
qsub -q Test -l select=1:mem=60GB:ncpus=1 regulonscenarios_GO-part2.sh


cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/GOOUTPUT_BPonly/significancescores

# added all awk matching scripts to this internal shell script > awkunion.sh

nano awkunion.sh

#!/bin/bash
cd $PBS_O_WORKDIR;

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_coexpressed_genes_GOOUTPUT_details-SS.txt coexpressed_genes_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_coexpressed_genes_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_coexpressed_genes_GOOUTPUT_details-SS.txt coexpressed_genes_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_coexpressed_genes_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_coexpressed_genes_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_coexpressed_genes_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_coexpressed_genes_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_coexpressed_genes_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_coexpressed_genes_GOOUTPUT_details-SScut.txt > merging/coexpressed_genes_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_genes_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_genes_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_genes_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_genes_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_genes_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_genes_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_genes_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_genes_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_genes_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_genes_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_genes_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_genes_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_genes_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_genes_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_genes_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_genes_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_genes_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_genes_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_genes_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_genes_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_genes_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_genes_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_genes_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_genes_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_genes_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_genes_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_genes_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_genes_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_genes_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_genes_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_genes_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_genes_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_genes_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_genes_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_genes_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_genes_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_genes_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_genes_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_genes_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_genes_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_genes_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_genes_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_genes_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_genes_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_genes_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_genes_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_genes_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_genes_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_TFBSloss_genes_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_TFBSloss_genes_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_TFBSloss_genes_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_TFBSloss_genes_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_noTFBSloss_genes_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_noTFBSloss_genes_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_noTFBSloss_genes_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_noTFBSloss_genes_mergedTF-GO.txt


awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-0_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-0_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_TFBSloss_genes.txt-0_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-0_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-0_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_TFBSloss_genes.txt-0_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-0_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-0_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_noTFBSloss_genes.txt-0_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-0_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-0_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_noTFBSloss_genes.txt-0_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-0_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-0_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_TFBSloss_genes.txt-0_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-0_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-0_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_TFBSloss_genes.txt-0_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-0_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-0_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_noTFBSloss_genes.txt-0_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-0_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-0_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-0_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_noTFBSloss_genes.txt-0_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-1_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-1_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_TFBSloss_genes.txt-1_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-1_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-1_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_TFBSloss_genes.txt-1_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-1_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-1_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_noTFBSloss_genes.txt-1_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-1_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-1_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_noTFBSloss_genes.txt-1_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-1_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-1_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_TFBSloss_genes.txt-1_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-1_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-1_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_TFBSloss_genes.txt-1_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-1_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-1_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_noTFBSloss_genes.txt-1_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-1_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-1_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-1_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_noTFBSloss_genes.txt-1_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-2_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-2_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_TFBSloss_genes.txt-2_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-2_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-2_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_TFBSloss_genes.txt-2_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-2_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-2_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_noTFBSloss_genes.txt-2_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-2_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-2_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_noTFBSloss_genes.txt-2_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-2_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-2_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_TFBSloss_genes.txt-2_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-2_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-2_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_TFBSloss_genes.txt-2_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-2_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-2_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_noTFBSloss_genes.txt-2_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-2_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-2_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-2_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_noTFBSloss_genes.txt-2_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-3_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-3_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_TFBSloss_genes.txt-3_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-3_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-3_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_TFBSloss_genes.txt-3_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-3_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-3_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_noTFBSloss_genes.txt-3_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-3_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-3_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_noTFBSloss_genes.txt-3_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-3_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-3_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_TFBSloss_genes.txt-3_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-3_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-3_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_TFBSloss_genes.txt-3_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-3_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-3_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_noTFBSloss_genes.txt-3_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-3_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-3_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-3_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_noTFBSloss_genes.txt-3_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-4_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-4_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_TFBSloss_genes.txt-4_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-4_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-4_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_TFBSloss_genes.txt-4_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-4_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-4_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_noTFBSloss_genes.txt-4_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-4_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-4_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_noTFBSloss_genes.txt-4_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-4_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-4_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_TFBSloss_genes.txt-4_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-4_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-4_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_TFBSloss_genes.txt-4_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-4_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-4_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_noTFBSloss_genes.txt-4_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-4_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-4_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-4_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_noTFBSloss_genes.txt-4_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-5_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-5_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_TFBSloss_genes.txt-5_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-5_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-5_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_TFBSloss_genes.txt-5_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-5_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-5_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_noTFBSloss_genes.txt-5_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-5_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-5_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_noTFBSloss_genes.txt-5_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-5_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-5_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_TFBSloss_genes.txt-5_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-5_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-5_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_TFBSloss_genes.txt-5_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-5_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-5_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_noTFBSloss_genes.txt-5_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-5_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-5_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-5_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_noTFBSloss_genes.txt-5_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-6_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-6_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_TFBSloss_genes.txt-6_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-6_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-6_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_TFBSloss_genes.txt-6_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-6_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-6_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_noTFBSloss_genes.txt-6_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-6_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-6_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_noTFBSloss_genes.txt-6_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-6_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-6_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_TFBSloss_genes.txt-6_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-6_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-6_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_TFBSloss_genes.txt-6_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-6_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-6_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_noTFBSloss_genes.txt-6_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-6_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-6_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-6_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_noTFBSloss_genes.txt-6_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-7_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-7_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_TFBSloss_genes.txt-7_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-7_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-7_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_TFBSloss_genes.txt-7_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-7_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-7_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_noTFBSloss_genes.txt-7_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-7_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-7_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_noTFBSloss_genes.txt-7_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-7_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-7_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_TFBSloss_genes.txt-7_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-7_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-7_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_TFBSloss_genes.txt-7_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-7_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-7_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_noTFBSloss_genes.txt-7_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-7_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-7_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-7_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_noTFBSloss_genes.txt-7_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-8_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-8_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_TFBSloss_genes.txt-8_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-8_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-8_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_TFBSloss_genes.txt-8_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-8_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-8_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_noTFBSloss_genes.txt-8_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-8_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-8_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_noTFBSloss_genes.txt-8_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-8_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-8_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_TFBSloss_genes.txt-8_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-8_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-8_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_TFBSloss_genes.txt-8_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-8_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-8_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_noTFBSloss_genes.txt-8_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-8_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-8_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-8_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_noTFBSloss_genes.txt-8_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-9_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_TFBSloss_genes-9_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_TFBSloss_genes.txt-9_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-9_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_TFBSloss_genes-9_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_TFBSloss_genes.txt-9_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-9_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt Conserved1to1coexpressed_noTFBSloss_genes-9_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conserved1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt > merging/Conserved1to1coexpressed_noTFBSloss_genes.txt-9_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-9_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt anySwitch1to1coexpressed_noTFBSloss_genes-9_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitch1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt > merging/anySwitch1to1coexpressed_noTFBSloss_genes.txt-9_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-9_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_TFBSloss_genes-9_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_TFBSloss_genes.txt-9_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-9_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_TFBSloss_genes-9_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_TFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_TFBSloss_genes.txt-9_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-9_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt anySwitchno1to1coexpressed_noTFBSloss_genes-9_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_anySwitchno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt > merging/anySwitchno1to1coexpressed_noTFBSloss_genes.txt-9_mergedTF-GO.txt

awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-9_TFGO.txt > merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt
while read F ; do awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' $F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SS.txt Conservedno1to1coexpressed_noTFBSloss_genes-9_TFGO.txt | cut -f2 > merging/$F-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt ; done < list1
paste -d'\t' merging/Mz-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Pn-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Ab-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/Nb-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt merging/On-wholegenome_Regulon_v3_Conservedno1to1coexpressed_noTFBSloss_genes.txt-9_GOOUTPUT_details-SScut.txt > merging/Conservedno1to1coexpressed_noTFBSloss_genes.txt-9_mergedTF-GO.txt

# final files have following order
	# TF-GO
	# Mz
	# Pn
	# Ab
	# Nb
	# On

# d. tar up the final files
# First layer - global (coexpressed only)
tar -zcvf merging/FirstLayer_TF-GO-sorted.tar.gz merging/coexpressed_genes_mergedTF-GO.txt
# Second layer - switched/conserved, 1:1 and no1:1, TFBS presence/absence
tar -zcvf merging/SecondLayer_TF-GO-sorted.tar.gz merging/*TFBSloss_genes_mergedTF-GO.txt
# Third layer - all above but seperated by modules
tar -zcvf merging/ThirdLayer_TF-GO-sorted.tar.gz merging/*.txt-*_mergedTF-GO.txt


# run the above
qsub -q Test -l select=1:mem=60GB:ncpus=1 awkunion.sh


# e. highlight some TF-GO's of interest to focus
# Module expression
	# 0 - Testis (activated)
	# 1 - Eye (activated)
	# 2 - Kidney (activated); heart and kidney (activated, Mz, Pn, Ab, Nb), testis (half activated), repression rest
	# 3 - brain (activated); eye (half activated); heart, kidney, muscle (repressed)
	# 4 - mix - heart, muscle, kidney (activated) + eye (On)
	# 5 - no change
	# 6 - mixed (activated)
	# 7 - brain and eye (activated)
	# 8 - Testis (activated)
	# 9 - brain (activated); eye (half activated)

# best to see which files have at least more than one significance score for a TF-GO
cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/GOOUTPUT_BPonly/significancescores/merging/

for i in *TF-GO.txt ; do
  awk '{for (i=1;i<=NF;i++) if ($i=="NA") A++ } {if (A <="3") print $0} A=0' $i OFS="\t" > "$(basename "$i" .txt)filtered.txt";
done # contains NA less than or equal to three times in each row


# Have a look at total number of TFs
cat *filtered* | cut -d- -f1 | sort -u | grep -v NA | wc -l # 189 unique TFs across all files (not all are listed below)
# EGR1 - regulating the response to growth factors, DNA damage, and ischemia; also regulation of cell survival, proliferation and cell death
# IRF1 - Host response to viral and bacterial infections, regulation of many genes expressed during hematopoiesis, inflammation, immune responses and cell proliferation and differentiation, regulation of the cell cycle and induction of growth arrest and programmed cell death following DNA damage.
# NR2C2 - An important repressor of nuclear receptor signaling pathways such as retinoic acid receptor, retinoid X, vitamin D3 receptor, thyroid hormone receptor and estrogen receptor pathways. May regulate gene expression during the late phase of spermatogenesis. Plays a fundamental role in early embryonic development and embryonic stem cells. Required for normal spermatogenesis and cerebellum development.
# RXRB - regulate gene expression in various biological processes
# RXRG - regulate gene expression in various biological processes. cone development in teleost fish may also involve the activity of RXRγ
# SP2 - localizes primarily within subnuclear foci associated with the nuclear matrix, and can activate or in some cases repress expression from different promoters

# Cichlid specific roles
# EGR1 - laboratory analysis confirmed that there was twice as much egr-1 gene expression in the brain cells of ascending cichlids than in either dominant or subordinate males, suggesting that the egr-1 gene plays a crucial role in jumpstarting the whole physical transformation: http://news.stanford.edu/news/2005/october19/domgene-101905.html
# IRF1 - dorso-ventral expression difference of irf1 with pmel & igsf11;  likely components of the genetic mechanism controlling distinct dorso-ventral color patterns in N. meeli fins (https://peerj.com/articles/2843.pdf)
# RXRA, B and G - www.biomedcentral.com/content/pdf/1471-2148-11-120.pdf

# Some relatively interesting examples

# Have a look at all the GO terms available
cat *filtered* | cut -f1 | cut -d- -f2 | sort -u | grep -v NA | less # 313 GO Terms

# Have a look if any of your candidate genes are targets in these regulons (especially the opsins). If so, then focus on them in TF-GO maps.
cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/v1_regulonanalysis/GOOUTPUT_BPonly/

# Use /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/9.Candidates/Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt
ln -s /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/9.Candidates/Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt
awk '{print $2,$10,$17}' OFS='\t' Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt > Candidates_IDs_Fast_Opsins_Hahn_SNPs-Mzcut
awk '{print $3,$10,$17}' OFS='\t' Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt > Candidates_IDs_Fast_Opsins_Hahn_SNPs-Pncut
awk '{print $4,$10,$17}' OFS='\t' Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt > Candidates_IDs_Fast_Opsins_Hahn_SNPs-Abcut
awk '{print $5,$10,$17}' OFS='\t' Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt > Candidates_IDs_Fast_Opsins_Hahn_SNPs-Nbcut
awk '{print $6,$10,$17}' OFS='\t' Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt > Candidates_IDs_Fast_Opsins_Hahn_SNPs-Oncut

# grep on the following files [species]*_GOOUTPUT_details.txt


### THIS NEEDS AMENDING ACCORDING TO NEW MOTIF SCANS

# a.iii) Test if any pairwise SNPs are overlapping TFBSs to study evolutionary gain and loss of target sites
## > already in script Cichlid_GRNs/Arboretum_GT_v3/SNP_overlap.sh


# b)	If TFs are duplicated (significant contribution to regulatory network divergence), then do they have higher edge gain or loss vs non-duplicated TFs.
# Here, it might make sense to use the Brawand duplication data – scan for duplicated TFs (using TF's in the TFTGco set). See Cell Systems paper (Kolmogorov-Smirnov [KS] test).

# Use file 1.dupList_FINAL.txt
mkdir /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/10.Duplicated_Genes
dupdir=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/10.Duplicated_Genes)
cd $dupdir

# Instead, use the duplicated genes as inferred by gene trees - details below
# Dup_pairs_common_used.txt - The 4 pairs in common with Brawand that we're actually using
# Dup_pairs_common.txt - The 278 pairs in common with Brawand, regardless of whether we end up using them in Arboretum (includes the above 4)
# Dup_pairs_novel_used.txt - 130 duplication pairs that we are using, not found by Brawand
# Dup_pairs_novel_all.txt - 2,597 duplication pairs that we found, not found by Brawand, regardless of whether we end up using them in Arboretum

# Use the Dup_pairs_common_used.txt and Dup_pairs_novel_used.txt files
cp /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/10.Duplicated_Genes/Chris_Dup-pairs/* .

# transpose the two files into a single column and cat
cat Dup_pairs_common_used.txt | awk '{print $1}' > Dup_pairs_common_used1.txt
cat Dup_pairs_common_used.txt | awk '{print $2}' >> Dup_pairs_common_used1.txt
cat Dup_pairs_novel_used.txt | awk '{print $1}' > Dup_pairs_novel_used1.txt
cat Dup_pairs_novel_used.txt | awk '{print $2}' >> Dup_pairs_novel_used1.txt
cat Dup_pairs_common_used1.txt Dup_pairs_novel_used1.txt > Dup_pairs_combined.txt ; rm *_used1.txt # create a combined file and remove intermediates

for i in /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/*-Edge_Attributes_Collated4d.txt ; do ln -s $i ; done # create symbolic links to the edge attributes files
ln -s /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/list2 # Ab,Nb,Pn,Mz,On

  # b.1 - how many nodes and edges are associated with duplicated genes in general
    # grep duplicate genes list file on final edge attributes file to pull out all interactions of gene duplicates in each species, then pull out number of nodes and edges (by interaction) outputting a table

    while read F ; do
      grep -wiFf Dup_pairs_combined.txt $F-Edge_Attributes_Collated4d.txt > $F-DuplicateGenes_Edge_Attributes_Collated4d.txt
      wc -l $F-DuplicateGenes_Edge_Attributes_Collated4d.txt | sed 's/^/edges\t/g' | sed "s|^|${F}\t|g" # number of edges
      awk '$18=="targetscan7"' $F-DuplicateGenes_Edge_Attributes_Collated4d.txt | wc -l | sed 's/^/miRNA_edges\t/g' | sed "s|^|${F}\t|g" # miRNA edges
      awk '$18=="co-expression_TF-TG"' $F-DuplicateGenes_Edge_Attributes_Collated4d.txt | wc -l | sed 's/^/coTFTG_edges\t/g' | sed "s|^|${F}\t|g" # co-expressed TF-TG edges
      awk '$18=="promoter_motif"' $F-DuplicateGenes_Edge_Attributes_Collated4d.txt | wc -l | sed 's/^/prom-TFBS_edges\t/g' | sed "s|^|${F}\t|g" # Promoter TFBS
      awk '$18=="CNE_motif" || $18=="aCNE_motif"' $F-DuplicateGenes_Edge_Attributes_Collated4d.txt | wc -l | sed 's/^/CNE-TFBS_edges\t/g' | sed "s|^|${F}\t|g" # CNE TFBS
      awk '$18=="CNE_Proximal" || $18=="aCNE_Proximal"' $F-DuplicateGenes_Edge_Attributes_Collated4d.txt | wc -l | sed 's/^/CNE-proximal_edges\t/g' | sed "s|^|${F}\t|g" # CNE proximal
      cut -f1,5 $F-DuplicateGenes_Edge_Attributes_Collated4d.txt | awk '{OFS=RS;$1=$1}1' | sort -u | wc -l | sed 's/^/nodes\t/g' | sed "s|^|${F}\t|g" # number of nodes
    done < list2

  # b.2 - how many nodes and edges include TFs associated with duplicated genes

  ln -s /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/8.TFTGco/tftgco_merged.txt
  cut -f1 tftgco_merged.txt | grep -v 'GeneA' | sort -u > tftgco_merged-TFs.txt
  for i in ab.gene nb.gene pn.gene mz.gene on.gene ; do
    grep $i tftgco_merged-TFs.txt > $i-tftgco_merged-TFs.txt
  done

  for i in ab.gene nb.gene pn.gene mz.gene on.gene ; do
    for j in Ab Nb Pn Mz On ; do
      grep -wiFf $i-tftgco_merged-TFs.txt $j-Edge_Attributes_Collated4d.txt > $j-DuplicateGenes_Edge_Attributes_Collated4d.txt
      wc -l $j-DuplicateGenes_Edge_Attributes_Collated4d.txt | sed 's/^/TFedges\t/g' | sed "s|^|${j}\t|g" # number of edges
      awk '$18=="targetscan7"' $j-DuplicateGenes_Edge_Attributes_Collated4d.txt | wc -l | sed 's/^/miRNA_TFedges\t/g' | sed "s|^|${j}\t|g" # miRNA edges
      awk '$18=="co-expression_TF-TG"' $j-DuplicateGenes_Edge_Attributes_Collated4d.txt | wc -l | sed 's/^/coTFTG_TFedges\t/g' | sed "s|^|${j}\t|g" # co-expressed TF-TG edges
      awk '$18=="promoter_motif"' $j-DuplicateGenes_Edge_Attributes_Collated4d.txt | wc -l | sed 's/^/prom-TFBS_TFedges\t/g' | sed "s|^|${j}\t|g" # Promoter TFBS
      awk '$18=="CNE_motif" || $18=="aCNE_motif"' $j-DuplicateGenes_Edge_Attributes_Collated4d.txt | wc -l | sed 's/^/CNE-TFBS_TFedges\t/g' | sed "s|^|${j}\t|g" # CNE TFBS
      awk '$18=="CNE_Proximal" || $18=="aCNE_Proximal"' $j-DuplicateGenes_Edge_Attributes_Collated4d.txt | wc -l | sed 's/^/CNE-proximal_TFedges\t/g' | sed "s|^|${j}\t|g" # CNE proximal
      cut -f1,5 $j-DuplicateGenes_Edge_Attributes_Collated4d.txt | awk '{OFS=RS;$1=$1}1' | sort -u | wc -l | sed 's/^/TFnodes\t/g' | sed "s|^|${j}\t|g" # number of nodes
    done
  done


# c)	Assess regulators role as a repressor or activator by calculating significance of overlap with transcriptional module (see Cell systems paper)



# d)	Modular regulatory rewiring – any variant-associated regulons that are module rewired and conserved, linking to expression and functional divergence







##########################################################################################################################
#
############# Section Four of Results Section
############# Regulatory network rewiring in genes associated with traits under selection may have shaped cichlid adaptation to a variety of ecological niches
# In the networks, then focus on selected genes (based on evolutionary rate and promoter variation) as target genes in regulons overlaying larger co-expression regulatory network for species comparisons. Cichlid adaptations facilitated by
#
##########################################################################################################################

mkdir /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/candidates #DONE
edgecand=(/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/candidates)
cd $edgecand

########################################################################################
# ~~~~~~~ #  a)	Fast evolving/variant-associated cis-regulatory regions as identified by analyses in section above. {DONE - need to copy local}
########################################################################################

mkdir a.fast-evolving-cis
cd a.fast-evolving-cis

#focus on the ones you mention in manuscript
grep SNP_related ../Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt > SNP_related.txt # pull out gene IDs from main candidates table
cut -f1 SNP_related.txt > SNP_related2.txt

# created a script that reads each orthogroup line by line then outputs separate files for each species and orthogroup from the species-specific files and PPI files.
# you then need to use 'SNP_related.txt' file to see what each OG corresponds to (in terms of a gene)

nano 1.extractnetworks.sh

#!/bin/sh

for i in Mz Pn Ab Pn Nb On ; do
  while read F ; do
    filename=`echo 1.$i$F-Transcriptionnetwork`
    grep -wiF "$F" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/${i}-Edge_Attributes_Collated4d.txt > $filename
  done < SNP_related2.txt
done

awk '{print $2,$1}' OFS='\t' SNP_related.txt > Mz-SNP_related.txt
awk '{print $3,$1}' OFS='\t' SNP_related.txt > Pn-SNP_related.txt
awk '{print $4,$1}' OFS='\t' SNP_related.txt > Ab-SNP_related.txt
awk '{print $5,$1}' OFS='\t' SNP_related.txt > Nb-SNP_related.txt
awk '{print $6,$1}' OFS='\t' SNP_related.txt > On-SNP_related.txt

for i in Mz Pn Ab Nb On ; do
  while read -r gene OG ; do
    filename=`echo 1.$i$OG-PPI`
    grep -wiF "$gene" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/$i-PPIEdge_Attributes_Collated4d.txt > $filename
  done < $i-SNP_related.txt
done

# Now, find a way to extract networks from modules of main gene only
# 1. Pull out modules for each orthogroup
# 2. Separate the above by each species - col1: OG; col2 - module
# 2. Assign col1 to variable and use to grep, then assign col2 to variable and use to select Species-module file to grep

for i in Mz Pn Ab Nb On ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' ../../../Module_genesandexpr/$i-speciesspecnames_clusterassign.txt $i-SNP_related.txt |
  awk '{print $2,$3}' OFS='\t' | grep -v NA > $i-SNP_related2.txt
done

for i in Mz Pn Ab Nb On ; do
  while read -r OG Module ; do
    filename=`echo 1.$i$OG-ModuleTranscriptionnetwork`
    grep -wiF "$OG" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/$i-Edge_Attributes_Collated4d-Module$Module.txt > $filename
  done < $i-SNP_related2.txt
done

# since the PPI files do not have OGIDs, use gene IDs
for i in Mz Pn Ab Nb On ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' ../../../Module_genesandexpr/$i-speciesspecnames_clusterassign.txt $i-SNP_related.txt |
  awk '{print $1,$3}' OFS='\t' | grep -v NA > $i-SNP_related3.txt
done

for i in Mz Pn Ab Nb On ; do
  while read -r OG Module ; do
    filename=`echo 1.$i$OG-ModulePPI`
    grep -wiF "$OG" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/$i-PPIEdge_Attributes_Collated4d-Module$Module.txt > $filename
  done < $i-SNP_related3.txt
done

# run the above
sh 1.extractnetworks.sh

########################################################################################
# ~~~~~~~ #  b)	Regulatory network divergence in fast-evolving cichlid genes involved in morphogenesis, vision or pigmentation
########################################################################################

mkdir b.fast-evolving-morph
cd b.fast-evolving-morph

nano 1.fast-evolving-morph-primary.sh

#!/bin/bash
cd $PBS_O_WORKDIR;

# Prioritisation based on: (1) Whether the gene function relates to a tissue for which we have modules of co-expressed genes (brain, eye, heart, kidney, muscle and testis) - not looking at dentition or pigmentation related genes; and (2) If above is yes then look at the module assignment to pick cases of module conservation and divergence and also needs to be present as a TG in regulons - below (in no specific order, just working down the list of genes dN/dS table from paper)
# irx1b - forebrain patterning
grep -wiF pn.gene.s158.15 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Pn-Edge_Attributes_Collated4d.txt > 1.PnIRX1B-Transcriptionnetwork
grep -wiF pn.gene.s158.15 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Pn-Edge_Attributes_Collated4d-Module9.txt > 2.PnIRX1B-ModuleTranscriptionnetwork
grep -wiF pn.gene.s158.15 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Pn-PPIEdge_Attributes_Collated4d.txt > 3.PnIRX1B-PPI
grep -wiF pn.gene.s158.15 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Pn-PPIEdge_Attributes_Collated4d-Module9.txt > 4.PnIRX1B-ModulePPI

grep -wiF ab.gene.s221.8 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d.txt > 1.AbIRX1B-Transcriptionnetwork
grep -wiF ab.gene.s221.8 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d-Module9.txt > 2.AbIRX1B-ModuleTranscriptionnetwork
grep -wiF ab.gene.s221.8 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d.txt > 3.AbIRX1B-PPI
grep -wiF ab.gene.s221.8 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d-Module9.txt > 4.AbIRX1B-ModulePPI

grep -wiF nb.gene.s167.12 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Nb-Edge_Attributes_Collated4d.txt > 1.NbIRX1B-Transcriptionnetwork
grep -wiF nb.gene.s167.12 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Nb-Edge_Attributes_Collated4d-Module9.txt > 2.NbIRX1B-ModuleTranscriptionnetwork
grep -wiF nb.gene.s167.12 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Nb-PPIEdge_Attributes_Collated4d.txt > 3.NbIRX1B-PPI
grep -wiF nb.gene.s167.12 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Nb-PPIEdge_Attributes_Collated4d-Module9.txt > 4.NbIRX1B-ModulePPI

grep -wiF on.gene.LG22.514 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d.txt > 1.OnIRX1B-Transcriptionnetwork
grep -wiF on.gene.LG22.514 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d-Module9.txt > 2.OnIRX1B-ModuleTranscriptionnetwork
grep -wiF on.gene.LG22.514 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d.txt > 3.OnIRX1B-PPI
grep -wiF on.gene.LG22.514 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d-Module9.txt > 4.OnIRX1B-ModulePPI

# cntn4 - neural system and plasticity
grep -wiF mz.gene.s36.117 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Mz-Edge_Attributes_Collated4d.txt > 1.MzCNTN4-Transcriptionnetwork
grep -wiF mz.gene.s36.117 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Mz-Edge_Attributes_Collated4d-Module3.txt > 2.MzCNTN4-ModuleTranscriptionnetwork
grep -wiF mz.gene.s36.117 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Mz-PPIEdge_Attributes_Collated4d.txt > 3.MzCNTN4-PPI
grep -wiF mz.gene.s36.117 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Mz-PPIEdge_Attributes_Collated4d-Module3.txt > 4.MzCNTN4-ModulePPI

grep -wiF pn.gene.s48.53 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Pn-Edge_Attributes_Collated4d.txt > 1.PnCNTN4-Transcriptionnetwork
grep -wiF pn.gene.s48.53 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Pn-Edge_Attributes_Collated4d-Module3.txt > 2.PnCNTN4-ModuleTranscriptionnetwork
grep -wiF pn.gene.s48.53 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Pn-PPIEdge_Attributes_Collated4d.txt > 3.PnCNTN4-PPI
grep -wiF pn.gene.s48.53 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Pn-PPIEdge_Attributes_Collated4d-Module3.txt > 4.PnCNTN4-ModulePPI

grep -wiF ab.gene.s607.12 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d.txt > 1.AbCNTN4-Transcriptionnetwork
grep -wiF ab.gene.s607.12 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d-Module3.txt > 2.AbCNTN4-ModuleTranscriptionnetwork
grep -wiF ab.gene.s607.12 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d.txt > 3.AbCNTN4-PPI
grep -wiF ab.gene.s607.12 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d-Module3.txt > 4.AbCNTN4-ModulePPI

grep -wiF nb.gene.s8.206 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Nb-Edge_Attributes_Collated4d.txt > 1.NbCNTN4-Transcriptionnetwork
grep -wiF nb.gene.s8.206 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Nb-Edge_Attributes_Collated4d-Module7.txt > 2.NbCNTN4-ModuleTranscriptionnetwork
grep -wiF nb.gene.s8.206 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Nb-PPIEdge_Attributes_Collated4d.txt > 3.NbCNTN4-PPI
grep -wiF nb.gene.s8.206 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Nb-PPIEdge_Attributes_Collated4d-Module7.txt > 4.NbCNTN4-ModulePPI

grep -wiF on.gene.LG20.843 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d.txt > 1.OnCNTN4-Transcriptionnetwork
grep -wiF on.gene.LG20.843 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d-Module3.txt > 2.OnCNTN4-ModuleTranscriptionnetwork
grep -wiF on.gene.LG20.843 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d.txt > 3.OnCNTN4-PPI
grep -wiF on.gene.LG20.843 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d-Module3.txt > 4.OnCNTN4-ModulePPI

# foxp2 - TF; developing neural, gastrointestinal and cardiovascular tissues
grep -wiF mz.gene.s69.29 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Mz-Edge_Attributes_Collated4d.txt > 1.MzFoxP2-Transcriptionnetwork
grep -wiF mz.gene.s69.29 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Mz-Edge_Attributes_Collated4d-Module7.txt > 2.MzFoxP2-ModuleTranscriptionnetwork
grep -wiF mz.gene.s69.29 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Mz-PPIEdge_Attributes_Collated4d.txt > 3.MzFoxP2-PPI
grep -wiF mz.gene.s69.29 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Mz-PPIEdge_Attributes_Collated4d-Module7.txt > 4.MzFoxP2-ModulePPI

grep -wiF pn.gene.s13.57 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Pn-Edge_Attributes_Collated4d.txt > 1.PnFoxP2-Transcriptionnetwork
grep -wiF pn.gene.s13.57 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Pn-Edge_Attributes_Collated4d-Module7.txt > 2.PnFoxP2-ModuleTranscriptionnetwork
grep -wiF pn.gene.s13.57 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Pn-PPIEdge_Attributes_Collated4d.txt > 3.PnFoxP2-PPI
grep -wiF pn.gene.s13.57 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Pn-PPIEdge_Attributes_Collated4d-Module7.txt > 4.PnFoxP2-ModulePPI

grep -wiF ab.gene.s10.20 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d.txt > 1.AbFoxP2-Transcriptionnetwork
grep -wiF ab.gene.s10.20 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d-Module7.txt > 2.AbFoxP2-ModuleTranscriptionnetwork
grep -wiF ab.gene.s10.20 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d.txt > 3.AbFoxP2-PPI
grep -wiF ab.gene.s10.20 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d-Module7.txt > 4.AbFoxP2-ModulePPI

grep -wiF nb.gene.s1.62 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Nb-Edge_Attributes_Collated4d.txt > 1.NbFoxP2-Transcriptionnetwork
grep -wiF nb.gene.s1.62 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Nb-Edge_Attributes_Collated4d-Module9.txt > 2.NbFoxP2-ModuleTranscriptionnetwork
grep -wiF nb.gene.s1.62 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Nb-PPIEdge_Attributes_Collated4d.txt > 3.NbFoxP2-PPI
grep -wiF nb.gene.s1.62 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Nb-PPIEdge_Attributes_Collated4d-Module9.txt > 4.NbFoxP2-ModulePPI

grep -wiF on.gene.LG17.648 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d.txt > 1.OnFoxP2-Transcriptionnetwork
grep -wiF on.gene.LG17.648 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d-Module7.txt > 2.OnFoxP2-ModuleTranscriptionnetwork
grep -wiF on.gene.LG17.648 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d.txt > 3.OnFoxP2-PPI
grep -wiF on.gene.LG17.648 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d-Module7.txt > 4.OnFoxP2-ModulePPI

# bmpr1a - morphogen important for neural development, forebrain specification, left-right asymmetry
grep -wiF mz.gene.s378.5 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Mz-Edge_Attributes_Collated4d.txt > 1.MzBmpr1a-Transcriptionnetwork
grep -wiF mz.gene.s378.5 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Mz-Edge_Attributes_Collated4d-Module2.txt > 2.MzBmpr1a-ModuleTranscriptionnetwork
grep -wiF mz.gene.s378.5 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Mz-PPIEdge_Attributes_Collated4d.txt > 3.MzBmpr1a-PPI
grep -wiF mz.gene.s378.5 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Mz-PPIEdge_Attributes_Collated4d-Module2.txt > 4.MzBmpr1a-ModulePPI

grep -wiF pn.gene.s132.19 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Pn-Edge_Attributes_Collated4d.txt > 1.PnBmpr1a-Transcriptionnetwork
grep -wiF pn.gene.s132.19 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Pn-Edge_Attributes_Collated4d-Module2.txt > 2.PnBmpr1a-ModuleTranscriptionnetwork
grep -wiF pn.gene.s132.19 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Pn-PPIEdge_Attributes_Collated4d.txt > 3.PnBmpr1a-PPI
grep -wiF pn.gene.s132.19 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Pn-PPIEdge_Attributes_Collated4d-Module2.txt > 4.PnBmpr1a-ModulePPI

grep -wiF ab.gene.s467.18 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d.txt > 1.AbBmpr1a-Transcriptionnetwork
grep -wiF ab.gene.s467.18 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d-Module2.txt > 2.AbBmpr1a-ModuleTranscriptionnetwork
grep -wiF ab.gene.s467.18 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d.txt > 3.AbBmpr1a-PPI
grep -wiF ab.gene.s467.18 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d-Module2.txt > 4.AbBmpr1a-ModulePPI

grep -wiF nb.gene.s172.33 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Nb-Edge_Attributes_Collated4d.txt > 1.NbBmpr1a-Transcriptionnetwork
grep -wiF nb.gene.s172.33 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Nb-Edge_Attributes_Collated4d-Module2.txt > 2.NbBmpr1a-ModuleTranscriptionnetwork
grep -wiF nb.gene.s172.33 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Nb-PPIEdge_Attributes_Collated4d.txt > 3.NbBmpr1a-PPI
grep -wiF nb.gene.s172.33 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Nb-PPIEdge_Attributes_Collated4d-Module2.txt > 4.NbBmpr1a-ModulePPI

grep -wiF on.gene.UNK31.47 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d.txt > 1.OnBmpr1a-Transcriptionnetwork
grep -wiF on.gene.UNK31.47 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d-Module2.txt > 2.OnBmpr1a-ModuleTranscriptionnetwork
grep -wiF on.gene.UNK31.47 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d.txt > 3.OnBmpr1a-PPI
grep -wiF on.gene.UNK31.47 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d-Module2.txt > 4.OnBmpr1a-ModulePPI

# gdf10b - brain expression, axonal outgrowth
grep -wiF mz.gene.s51.93 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Mz-Edge_Attributes_Collated4d.txt > 1.MzGdf10b-Transcriptionnetwork
grep -wiF mz.gene.s51.93 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Mz-Edge_Attributes_Collated4d-Module9.txt > 2.MzGdf10b-ModuleTranscriptionnetwork
grep -wiF mz.gene.s51.93 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Mz-PPIEdge_Attributes_Collated4d.txt > 3.MzGdf10b-PPI
grep -wiF mz.gene.s51.93 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Mz-PPIEdge_Attributes_Collated4d-Module9.txt > 4.MzGdf10b-ModulePPI

grep -wiF pn.gene.s4.110 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Pn-Edge_Attributes_Collated4d.txt > 1.PnGdf10b-Transcriptionnetwork
grep -wiF pn.gene.s4.110 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Pn-Edge_Attributes_Collated4d-Module9.txt > 2.PnGdf10b-ModuleTranscriptionnetwork
grep -wiF pn.gene.s4.110 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Pn-PPIEdge_Attributes_Collated4d.txt > 3.PnGdf10b-PPI
grep -wiF pn.gene.s4.110 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Pn-PPIEdge_Attributes_Collated4d-Module9.txt > 4.PnGdf10b-ModulePPI

grep -wiF ab.gene.s237.13 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d.txt > 1.AbGdf10b-Transcriptionnetwork
grep -wiF ab.gene.s237.13 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d-Module9.txt > 2.AbGdf10b-ModuleTranscriptionnetwork
grep -wiF ab.gene.s237.13 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d.txt > 3.AbGdf10b-PPI
grep -wiF ab.gene.s237.13 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d-Module9.txt > 4.AbGdf10b-ModulePPI

grep -wiF nb.gene.s185.10 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Nb-Edge_Attributes_Collated4d.txt > 1.NbGdf10b-Transcriptionnetwork
grep -wiF nb.gene.s185.10 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Nb-Edge_Attributes_Collated4d-Module9.txt > 2.NbGdf10b-ModuleTranscriptionnetwork
grep -wiF nb.gene.s185.10 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Nb-PPIEdge_Attributes_Collated4d.txt > 3.NbGdf10b-PPI
grep -wiF nb.gene.s185.10 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Nb-PPIEdge_Attributes_Collated4d-Module9.txt > 4.NbGdf10b-ModulePPI

grep -wiF on.gene.LG8-24.192 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d.txt > 1.OnGdf10b-Transcriptionnetwork
grep -wiF on.gene.LG8-24.192 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d-Module5.txt > 2.OnGdf10b-ModuleTranscriptionnetwork
grep -wiF on.gene.LG8-24.192 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d.txt > 3.OnGdf10b-PPI
grep -wiF on.gene.LG8-24.192 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d-Module5.txt > 4.OnGdf10b-ModulePPI

# run the above
qsub -q Test -l select=1:mem=60GB:ncpus=1 1.fast-evolving-morph-primary.sh

########################################################################################
# ~~~~~~~ #  c)	Regulatory network divergence in well-studied traits under natural and/or sexual selection in cichlids
# e.g. opsins (sws1, sws2 and rh2) - huge amounts of module variation
########################################################################################

mkdir c.opsins
cd c.opsins

nano 1.opsins-primary.sh

#!/bin/bash
cd $PBS_O_WORKDIR;

### SWS1
# Mz
# Species all modules and module-specific of TG
grep -wiF mz.gene.s102.69 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Mz-Edge_Attributes_Collated4d.txt > 1.MzSWS1-Transcriptionnetwork
grep -wiF mz.gene.s102.69 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Mz-Edge_Attributes_Collated4d-Module1.txt > 2.MzSWS1-ModuleTranscriptionnetwork
grep -wiF mz.gene.s102.69 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Mz-PPIEdge_Attributes_Collated4d.txt > 3.MzSWS1-PPI
grep -wiF mz.gene.s102.69 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Mz-PPIEdge_Attributes_Collated4d-Module1.txt > 4.MzSWS1-ModulePPI

# Nb
# Species all modules and module-specific of TG
grep -wiF nb.gene.s1.386 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Nb-Edge_Attributes_Collated4d.txt > 1.NbSWS1-Transcriptionnetwork
grep -wiF nb.gene.s1.386 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Nb-Edge_Attributes_Collated4d-Module1.txt > 2.NbSWS1-ModuleTranscriptionnetwork
grep -wiF nb.gene.s1.386 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Nb-PPIEdge_Attributes_Collated4d.txt > 3.NbSWS1-PPI
grep -wiF nb.gene.s1.386 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Nb-PPIEdge_Attributes_Collated4d-Module1.txt > 4.NbSWS1-ModulePPI


### SWS2
# Pn
# Species all modules and module-specific of TG
grep -wiF pn.gene.s177.2 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Pn-Edge_Attributes_Collated4d.txt > 1.PnSWS2-Transcriptionnetwork
grep -wiF pn.gene.s177.2 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Pn-Edge_Attributes_Collated4d-Module1.txt > 2.PnSWS2-ModuleTranscriptionnetwork
grep -wiF pn.gene.s177.2 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Pn-PPIEdge_Attributes_Collated4d.txt > 3.PnSWS2-PPI
grep -wiF pn.gene.s177.2 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Pn-PPIEdge_Attributes_Collated4d-Module1.txt > 4.PnSWS2-ModulePPI

# Ab
# Species all modules and module-specific of TG
grep -wiF ab.gene.s9.15 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d.txt > 1.AbSWS2-Transcriptionnetwork
grep -wiF ab.gene.s9.15 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d-Module1.txt > 2.AbSWS2-ModuleTranscriptionnetwork
grep -wiF ab.gene.s9.15 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d.txt > 3.AbSWS2-PPI
grep -wiF ab.gene.s9.15 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d-Module1.txt > 4.AbSWS2-ModulePPI

# On
# Species all modules and module-specific of TG
grep -wiF on.gene.LG5.187 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d.txt > 1.OnSWS2-Transcriptionnetwork
grep -wiF on.gene.LG5.187 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d-Module6.txt > 2.OnSWS2-ModuleTranscriptionnetwork
grep -wiF on.gene.LG5.187 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d.txt > 3.OnSWS2-PPI
grep -wiF on.gene.LG5.187 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d-Module6.txt > 4.OnSWS2-ModulePPI


### Rh2
# Mz
# Species all modules and module-specific of TG
grep -wiF mz.gene.s18.149 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Mz-Edge_Attributes_Collated4d.txt > 1.MzRh2-Transcriptionnetwork
grep -wiF mz.gene.s18.149 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Mz-Edge_Attributes_Collated4d-Module1.txt > 2.MzRh2-ModuleTranscriptionnetwork
grep -wiF mz.gene.s18.149 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Mz-PPIEdge_Attributes_Collated4d.txt > 3.MzRh2-PPI
grep -wiF mz.gene.s18.149 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Mz-PPIEdge_Attributes_Collated4d-Module1.txt > 4.MzRh2-ModulePPI

# Pn
# Species all modules and module-specific of TG
grep -wiF pn.gene.s11.51 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Pn-Edge_Attributes_Collated4d.txt > 1.PnRh2-Transcriptionnetwork
grep -wiF pn.gene.s11.51 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Pn-Edge_Attributes_Collated4d-Module1.txt > 2.PnRh2-ModuleTranscriptionnetwork
grep -wiF pn.gene.s11.51 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Pn-PPIEdge_Attributes_Collated4d.txt > 3.PnRh2-PPI
grep -wiF pn.gene.s11.51 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Pn-PPIEdge_Attributes_Collated4d-Module1.txt > 4.PnRh2-ModulePPI

# Ab
# Species all modules and module-specific of TG
grep -wiF ab.gene.s86.69 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d.txt > 1.AbRh2-Transcriptionnetwork
grep -wiF ab.gene.s86.69 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d-Module1.txt > 2.AbRh2-ModuleTranscriptionnetwork
grep -wiF ab.gene.s86.69 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d.txt > 3.AbRh2-PPI
grep -wiF ab.gene.s86.69 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d-Module1.txt > 4.AbRh2-ModulePPI

# Nb
# Species all modules and module-specific of TG
grep -wiF nb.gene.s4.225 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Nb-Edge_Attributes_Collated4d.txt > 1.NbRh2-Transcriptionnetwork
grep -wiF nb.gene.s4.225 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Nb-Edge_Attributes_Collated4d-Module1.txt > 2.NbRh2-ModuleTranscriptionnetwork
grep -wiF nb.gene.s4.225 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Nb-PPIEdge_Attributes_Collated4d.txt > 3.NbRh2-PPI
grep -wiF nb.gene.s4.225 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Nb-PPIEdge_Attributes_Collated4d-Module1.txt > 4.NbRh2-ModulePPI

# On
# Species all modules and module-specific of TG
grep -wiF on.gene.LG5.742 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d.txt > 1.OnRh2-Transcriptionnetwork
grep -wiF on.gene.LG5.742 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d-Module5.txt > 2.OnRh2-ModuleTranscriptionnetwork
grep -wiF on.gene.LG5.742 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d.txt > 3.OnRh2-PPI
grep -wiF on.gene.LG5.742 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d-Module5.txt > 4.OnRh2-ModulePPI


### Rho
# Mz
# Species all modules and module-specific of TG
grep -wiF mz.gene.s12.95 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Mz-Edge_Attributes_Collated4d.txt > 1.MzRho-Transcriptionnetwork
grep -wiF mz.gene.s12.95 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Mz-Edge_Attributes_Collated4d-Module1.txt > 2.MzRho-ModuleTranscriptionnetwork
grep -wiF mz.gene.s12.95 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Mz-PPIEdge_Attributes_Collated4d.txt > 3.MzRho-PPI
grep -wiF mz.gene.s12.95 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Mz-PPIEdge_Attributes_Collated4d-Module1.txt > 4.MzRho-ModulePPI

# Ab
# Species all modules and module-specific of TG
grep -wiF ab.gene.s134.8 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d.txt > 1.AbRho-Transcriptionnetwork
grep -wiF ab.gene.s134.8 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d-Module6.txt > 2.AbRho-ModuleTranscriptionnetwork
grep -wiF ab.gene.s134.8 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d.txt > 3.AbRho-PPI
grep -wiF ab.gene.s134.8 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d-Module6.txt > 4.AbRho-ModulePPI

# On
# Species all modules and module-specific of TG
grep -wiF on.gene.LG20.398 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d.txt > 1.OnRho-Transcriptionnetwork
grep -wiF on.gene.LG20.398 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d-Module6.txt > 2.OnRho-ModuleTranscriptionnetwork
grep -wiF on.gene.LG20.398 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d.txt > 3.OnRho-PPI
grep -wiF on.gene.LG20.398 /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d-Module6.txt > 4.OnRho-ModulePPI

# run the above
qsub -q Test -l select=1:mem=60GB:ncpus=1 1.opsins-primary.sh


## Check the nr2c2-sws1 motif against all other instances of it and rxrb
## if it is conserved, we can think about tol2-transgenesis. Also, the flanking region is likely to make it specific.

cd /tgac/workarea/group-vh/Tarang/Cichlid_GRNs/Arboretum_GT_v3/1.TFBSs_v2/
# from the motifs, prep a fasta file to run mafft alignment
awk '$4=="nr2c2"||$4=="rxrb"' motifenr_merged-TFBSs_map2d.txt | awk '{print $2"_"$3"_"$4"--"$5"_"$6"_"$7"-"$17,$16}' OFS='\t' > nr2c2_rxrb-motif.txt
awk '{ printf ">%s\n%s\n",$1,$2 }' nr2c2_rxrb-motif.txt > nr2c2_rxrb-motif.fasta
for i in mz pn ab nb on ; do
  grep $i.gene nr2c2_rxrb-motif.txt | awk '{ printf ">%s\n%s\n",$1,$2 }' | sed 's/://g' | sed 's/(//g' | sed 's/)//g' > nr2c2_rxrb-motif_$i.fasta
done
# align and output tree from mafft
source mafft-7.271
for i in mz pn ab nb on ; do
  mafft --retree 0 --treeout --globalpair --reorder nr2c2_rxrb-motif_$i.fasta > nr2c2_rxrb-motif_$i.mafft.fasta
done


########################################################################################
# ~~~~~~~ #  d)	Genes associated with traits/phenotypes that overlap our six tissues, mainly coming from Lake Malawi in situ data (all embryonic though!)
# https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5291978/
########################################################################################

mkdir d.lmalawi_insitu
cd d.lmalawi_insitu

# "	FGF pathway - organogenesis and evolutionary novelty
# "	ligands fgf3 (MHB expr), fgf10 (MB) and fgf20 (HB)
# "	receptors fgfr1a and fgfr2 (CNS)
# "	sp8 zinc-finger TF (brain)
# "	repressor spry4 and TF twist1 (both in eyes + others)
# "	Forkhead box pathway - diverse roles incl lung and liver formation
# "	FoxA1 and FoxA2 (DMB expr)
# "	foxg1 (eye and brain expr)
# "	foxp2 (brain)


# "	Hedgehog pathway
# "	TFs gli1, gli2 and gli3 (MB), receptors ptch1, ptch2 (CNS) and smo (Brain), and the ligand shh


# "	Homeobox
# "	dlx1a, dlx2, dlx3b, dlx5, emx3, msx1, nkx2-1 and nkx2-5 (many associated with jaw development but also brain)
# "	dmbx1a, gsc, hopx, otx2, pax1, pax6, pax9, pitx2, pitx3 and rx3 (largely retinal and key targets for networks)


# "	Notch pathway
# "	deltaA, hes1, jag1, notch1 and notch2 (all retina) and deltaB, dlk1, jag2, and notch3 (all eye)


# "	Brain development and neurogenesis
# "	ap2a (neural crest evolution), chl1 (neural adhesion molecule), cntn3 (neurite outgrowth), TF tbr1, gata6, egr4, neurod1, neurod2, nrp1a, nrpn2a, plxna3, plxna4


# "	Muscle contraction
# "	acta2 and krt8

grep LakeMalawi_insitu ../Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt > LakeMalawi_insitu.txt # pull out gene IDs from main candidates table
cut -f1 LakeMalawi_insitu.txt > LakeMalawi_insitu2.txt

# created a script that reads each orthogroup line by line then outputs separate files for each species and orthogroup from the species-specific files and PPI files.
# you then need to use 'SNP_related.txt' file to see what each OG corresponds to (in terms of a gene)

nano 1.lmalawi_insitu-primary.sh

#!/bin/bash
cd $PBS_O_WORKDIR;

for i in Mz Pn Ab Pn Nb On ; do
  while read F ; do
    filename=`echo 1.$i$F-Transcriptionnetwork`
    grep -wiF "$F" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/${i}-Edge_Attributes_Collated4d.txt > $filename
  done < LakeMalawi_insitu2.txt
done

awk '{print $2,$1}' OFS='\t' LakeMalawi_insitu.txt > Mz-LakeMalawi_insitu.txt
awk '{print $3,$1}' OFS='\t' LakeMalawi_insitu.txt > Pn-LakeMalawi_insitu.txt
awk '{print $4,$1}' OFS='\t' LakeMalawi_insitu.txt > Ab-LakeMalawi_insitu.txt
awk '{print $5,$1}' OFS='\t' LakeMalawi_insitu.txt > Nb-LakeMalawi_insitu.txt
awk '{print $6,$1}' OFS='\t' LakeMalawi_insitu.txt > On-LakeMalawi_insitu.txt

for i in Mz Pn Ab Nb On ; do
  while read -r gene OG ; do
    filename=`echo 1.$i$OG-PPI`
    grep -wiF "$gene" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/$i-PPIEdge_Attributes_Collated4d.txt > $filename
  done < $i-LakeMalawi_insitu.txt
done

# Now, find a way to extract networks from modules of main gene only
# 1. Pull out modules for each orthogroup
# 2. Separate the above by each species - col1: OG; col2 - module
# 2. Assign col1 to variable and use to grep, then assign col2 to variable and use to select Species-module file to grep

for i in Mz Pn Ab Nb On ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' ../../../Module_genesandexpr/$i-speciesspecnames_clusterassign.txt $i-LakeMalawi_insitu.txt |
  awk '{print $2,$3}' OFS='\t' | grep -v NA > $i-LakeMalawi_insitu2.txt
done

for i in Mz Pn Ab Nb On ; do
  while read -r OG Module ; do
    filename=`echo 1.$i$OG-ModuleTranscriptionnetwork`
    grep -wiF "$OG" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/$i-Edge_Attributes_Collated4d-Module$Module.txt > $filename
  done < $i-LakeMalawi_insitu2.txt
done

# since the PPI files do not have OGIDs, use gene IDs
for i in Mz Pn Ab Nb On ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' ../../../Module_genesandexpr/$i-speciesspecnames_clusterassign.txt $i-LakeMalawi_insitu.txt |
  awk '{print $1,$3}' OFS='\t' | grep -v NA > $i-LakeMalawi_insitu3.txt
done

for i in Mz Pn Ab Nb On ; do
  while read -r OG Module ; do
    filename=`echo 1.$i$OG-ModulePPI`
    grep -wiF "$OG" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/$i-PPIEdge_Attributes_Collated4d-Module$Module.txt > $filename
  done < $i-LakeMalawi_insitu3.txt
done

# run the above
qsub -q Test -l select=1:mem=60GB:ncpus=1 1.lmalawi_insitu-primary.sh


########################################################################################
# ~~~~~~~ #  e)	From Hahn et al. 2017 evol letters - Using 40 individuals of four Diplotaxodon deepwater (>50m) species and RAD-Seq, identified genes under selection (filtered for overlap with tissues we have e.g. removed haemoglobins under selection):
########################################################################################

# "	visual perception and signal transduction: ACTR1B (beta centractin), Rh1 (rhodopsin), PPIase (peptidyl-prolyl cis-trans isomerase), SGPP1 (sphingosine-phosphate 1 phosphatase 1), and DENND4B
# "	craniofacial and eye morphogenesis: ALX3 (aristaless-like 3), PXDN (peroxidasin), FOX (Forkhead box transcription factor, 2×), ZMIZ (zinc finger miz domain containing protein, 2×), RPGRIP1L (retinitis pigmentosa GTPase regulator interacting protein 1, synonym Fantom), MEIS2 (homeobox meis2 protein), FGFR1 (fibroblast growth factor receptor 1), SOX (Sry box transcription factor, 2×), NEUCRIN (Draxin), and TCF7L1 (transcription factor 7-like 1, formerly known as TCF3).

mkdir f.ps_LakeMalawi_benthics
cd f.ps_LakeMalawi_benthics

grep PS_LakeMalawi_benthics ../Candidates_IDs_Fast_Opsins_Hahn_SNPs.txt > PS_LakeMalawi_benthics.txt # pull out gene IDs from main candidates table
cut -f1 PS_LakeMalawi_benthics.txt > PS_LakeMalawi_benthics2.txt

# created a script that reads each orthogroup line by line then outputs separate files for each species and orthogroup from the species-specific files and PPI files.
# you then need to use 'SNP_related.txt' file to see what each OG corresponds to (in terms of a gene)

nano 1.ps_LakeMalawi_benthics-primary.sh

#!/bin/bash

for i in Mz Pn Ab Pn Nb On ; do
  while read F ; do
    filename=`echo 1.$i$F-Transcriptionnetwork`
    grep -wiF "$F" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/${i}-Edge_Attributes_Collated4d.txt > $filename
  done < PS_LakeMalawi_benthics2.txt
done

awk '{print $2,$1}' OFS='\t' PS_LakeMalawi_benthics.txt > Mz-PS_LakeMalawi_benthics.txt
awk '{print $3,$1}' OFS='\t' PS_LakeMalawi_benthics.txt > Pn-PS_LakeMalawi_benthics.txt
awk '{print $4,$1}' OFS='\t' PS_LakeMalawi_benthics.txt > Ab-PS_LakeMalawi_benthics.txt
awk '{print $5,$1}' OFS='\t' PS_LakeMalawi_benthics.txt > Nb-PS_LakeMalawi_benthics.txt
awk '{print $6,$1}' OFS='\t' PS_LakeMalawi_benthics.txt > On-PS_LakeMalawi_benthics.txt

for i in Mz Pn Ab Nb On ; do
  while read -r gene OG ; do
    filename=`echo 1.$i$OG-PPI`
    grep -wiF "$gene" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/$i-PPIEdge_Attributes_Collated4d.txt > $filename
  done < $i-PS_LakeMalawi_benthics.txt
done

# Now, find a way to extract networks from modules of main gene only
# 1. Pull out modules for each orthogroup
# 2. Separate the above by each species - col1: OG; col2 - module
# 2. Assign col1 to variable and use to grep, then assign col2 to variable and use to select Species-module file to grep

for i in Mz Pn Ab Nb On ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' ../../../Module_genesandexpr/$i-speciesspecnames_clusterassign.txt $i-PS_LakeMalawi_benthics.txt |
  awk '{print $2,$3}' OFS='\t' | grep -v NA > $i-PS_LakeMalawi_benthics2.txt
done

for i in Mz Pn Ab Nb On ; do
  while read -r OG Module ; do
    filename=`echo 1.$i$OG-ModuleTranscriptionnetwork`
    grep -wiF "$OG" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/$i-Edge_Attributes_Collated4d-Module$Module.txt > $filename
  done < $i-PS_LakeMalawi_benthics2.txt
done

# since the PPI files do not have OGIDs, use gene IDs
for i in Mz Pn Ab Nb On ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' ../../../Module_genesandexpr/$i-speciesspecnames_clusterassign.txt $i-PS_LakeMalawi_benthics.txt |
  awk '{print $1,$3}' OFS='\t' | grep -v NA > $i-PS_LakeMalawi_benthics3.txt
done

for i in Mz Pn Ab Nb On ; do
  while read -r OG Module ; do
    filename=`echo 1.$i$OG-ModulePPI`
    grep -wiF "$OG" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/$i-PPIEdge_Attributes_Collated4d-Module$Module.txt > $filename
  done < $i-PS_LakeMalawi_benthics3.txt
done


# run the above on interactive
sh 1.ps_LakeMalawi_benthics-primary.sh


########################################################################################
# ~~~~~~~ #  f)	Regulatory network divergence in duplicated genes
# "	Through the network approach, and based on regulatory rewiring, can we identify signatures of subfunctionalization or neofunctionalization in pairs of duplicated genes?
########################################################################################

mkdir /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/candidates/g.duplicated
cd /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/candidates/g.duplicated

# I suppose the most interesting thing to do in the context of ‘duplicated genes’ is to observe their co-expression in modules (as we had originally planned to do).
# I figure we may be able to predict/link gene function, duplication, and retention all to the observed expression in tissues.
# For example, are duplicate copies expressed in the same/different tissue and to what level. We could go deeper if any of them have ‘hits’ for vertebrate motifs in their promoter, if so we could do a thorough analysis of mutations in TFBSs to support any potential novel/shared function.
# If this is successful then again, are there any CNEs in close proximity (potentially acting as enhancers) for the duplicate genes and what is there conservation across the species.
# I think this is probably the approach/angle we should look to analyse the duplicate genes.

####    g. i) USE THE BRAWAND DUPLICATES TOO, JUSTIFIED AS THEY ARE INFERRED USING THREE (INSTEAD OF ONE) METHOD
mkdir Brawand
cd Brawand
# Use file 1.dupList_FINAL.txt - these are the Brawand duplicates
# filter for the presence of gene's in modules, adding the module to the table to observe coexpression
for i in mz.gene pn.gene ab.gene nb.gene on.gene ; do
  grep $i 1.dupList_FINAL.txt > 1.dupList_FINAL-$i.txt
done

for i in Mz Pn Ab Nb On ; do
  for j in mz.gene pn.gene ab.gene nb.gene on.gene ; do
    awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;next}{if(a[$5]){print $0,a[$5];}else{print $0,"REMOVEME";}}' ../../../../Module_genesandexpr/$i-speciesspecnames_clusterassign.txt 1.dupList_FINAL-$j.txt | grep -v 'REMOVEME' >> 1.dupList_FINAL-$i.txt.1 # maps paralog1 module
    awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;next}{if(a[$6]){print $0,a[$6];}else{print $0,"REMOVEME";}}' ../../../../Module_genesandexpr/$i-speciesspecnames_clusterassign.txt 1.dupList_FINAL-$i.txt.1 | grep -v 'REMOVEME' >> 1.dupList_FINAL-$i.txt # maps paralog2 module
  done
done
rm 1.dupList_FINAL-*.txt.1
# Output: col12 - paralog1 module; col13 - paralog2 module

# Prepare the file so that all duplicate genes are a list - this can be used to grep on final edge attributes file to pull out all interactions of gene duplicates
for i in Mz Pn Ab Nb On ; do
  cut -f5 1.dupList_FINAL-$i.txt > 1.dupList_FINAL-$i-geneA.txt
  cut -f6 1.dupList_FINAL-$i.txt > 1.dupList_FINAL-$i-geneB.txt
  cat 1.dupList_FINAL-$i-geneA.txt 1.dupList_FINAL-$i-geneB.txt > 1.dupList-$i-geneA_B_list.txt
done
rm 1.dupList_FINAL-*-geneA.txt ; rm 1.dupList_FINAL-*-geneB.txt


nano 1.Brawand_duplicated_genes-primary.sh

#!/bin/bash
cd $PBS_O_WORKDIR;

for i in Mz Pn Ab Nb On ; do
  while read F ; do
    filename=`echo 1.$i.$F-Transcriptionnetwork`
    grep -wiF "$F" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/${i}-Edge_Attributes_Collated4d.txt > $filename
  done < 1.dupList-$i-geneA_B_list.txt
done

for i in Mz Pn Ab Nb On ; do
  while read -r gene ; do
    filename=`echo 1.$i.$gene-PPI`
    grep -wiF "$gene" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/${i}-PPIEdge_Attributes_Collated4d.txt > $filename
  done < 1.dupList-$i-geneA_B_list.txt
done

# Now, find a way to extract networks from modules of main gene only
# 1. Pull out modules for each gene
# 2. Separate the above by each species - col1: gene; col2 - module
# 2. Assign col1 to variable and use to grep, then assign col2 to variable and use to select Species-module file to grep

for i in Mz Pn Ab Nb On ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' ../../../../Module_genesandexpr/$i-speciesspecnames_clusterassign.txt 1.dupList-$i-geneA_B_list.txt > 1.dupList-$i-geneA_B_list.txt2
done

for i in Mz Pn Ab Nb On ; do
  while read -r gene Module ; do
    filename=`echo 1.$i.$gene-ModuleTranscriptionnetwork`
    grep -wiF "$gene" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/${i}-Edge_Attributes_Collated4d-Module$Module.txt > $filename
  done < 1.dupList-$i-geneA_B_list.txt2
done

for i in Mz Pn Ab Nb On ; do
  while read -r gene Module ; do
    filename=`echo 1.$i.$gene-ModulePPI`
    grep -wiF "$gene" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/${i}-PPIEdge_Attributes_Collated4d-Module$Module.txt > $filename
  done < 1.dupList-$i-geneA_B_list.txt2
done

# run the above on interactive
qsub -q Test -l select=1:mem=60GB:ncpus=1 1.Brawand_duplicated_genes-primary.sh

####    g. ii) Also, use the duplicated genes as inferred by gene trees - details below
# Dup_pairs_common_used.txt - The 4 pairs in common with Brawand that we're actually using
# Dup_pairs_common.txt - The 278 pairs in common with Brawand, regardless of whether we end up using them in Arboretum (includes the above 4)
# Dup_pairs_novel_used.txt - 130 duplication pairs that we are using, not found by Brawand
# Dup_pairs_novel_all.txt - 2,597 duplication pairs that we found, not found by Brawand, regardless of whether we end up using them in Arboretum

# Use the Dup_pairs_common_used.txt and Dup_pairs_novel_used.txt files

# transpose the two files into a single column and cat
cat Dup_pairs_common_used.txt | awk '{print $1}' > Dup_pairs_common_used1.txt
cat Dup_pairs_common_used.txt | awk '{print $2}' >> Dup_pairs_common_used1.txt
cat Dup_pairs_novel_used.txt | awk '{print $1}' > Dup_pairs_novel_used1.txt
cat Dup_pairs_novel_used.txt | awk '{print $2}' >> Dup_pairs_novel_used1.txt
cat Dup_pairs_common_used1.txt Dup_pairs_novel_used1.txt > Dup_pairs_combined.txt ; rm *_used1.txt # create a combined file and remove intermediates

# create species-specific dup pairs files
grep 'mz.gene' Dup_pairs_combined.txt > Mz-Dup_pairs_combined.txt
#   68 Mz-Dup_pairs_combined.txt
grep 'pn.gene' Dup_pairs_combined.txt > Pn-Dup_pairs_combined.txt
#   58 Pn-Dup_pairs_combined.txt
grep 'ab.gene' Dup_pairs_combined.txt > Ab-Dup_pairs_combined.txt
#   76 Ab-Dup_pairs_combined.txt
grep 'nb.gene' Dup_pairs_combined.txt > Nb-Dup_pairs_combined.txt
#   48 Nb-Dup_pairs_combined.txt
grep 'on.gene' Dup_pairs_combined.txt > On-Dup_pairs_combined.txt
#   18 On-Dup_pairs_combined.txt


nano 1.duplicated_genes-primary-Mzarray.sh

#!/bin/bash -e
#SBATCH -p ei-short # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --array=0-67
#SBATCH --mem-per-cpu 8240
#SBATCH -t 0-0:45
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR

mapfile -t mzdups < Mz-Dup_pairs_combined.txt
printf '/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Mz-Edge_Attributes_Collated4d.txt\n%.0s' {1..68} > mzedge
mapfile -t mzedge < mzedge
grep -wiF ${mzdups[${SLURM_ARRAY_TASK_ID}]} ${mzedge[${SLURM_ARRAY_TASK_ID}]} > 1.${mzdups[${SLURM_ARRAY_TASK_ID}]}.Mz-Transcriptionnetwork

mapfile -t mzdups < Mz-Dup_pairs_combined.txt
printf '/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Mz-PPIEdge_Attributes_Collated4d.txt' {1..68} > mzPPIedge
mapfile -t mzPPIedge < mzPPIedge
grep -wiF ${mzdups[${SLURM_ARRAY_TASK_ID}]} ${mzPPIedge[${SLURM_ARRAY_TASK_ID}]} > 1.${mzdups[${SLURM_ARRAY_TASK_ID}]}.Mz-PPI

# run the above
sbatch 1.duplicated_genes-primary-Mzarray.sh


nano 1.duplicated_genes-primary-Pnarray.sh

#!/bin/bash -e
#SBATCH -p ei-short # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --array=0-57
#SBATCH --mem-per-cpu 8240
#SBATCH -t 0-0:45
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR

mapfile -t pndups < Pn-Dup_pairs_combined.txt
printf '/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Pn-Edge_Attributes_Collated4d.txt\n%.0s' {1..58} > pnedge
mapfile -t pnedge < pnedge
grep -wiF ${pndups[${SLURM_ARRAY_TASK_ID}]} ${pnedge[${SLURM_ARRAY_TASK_ID}]} > 1.${pndups[${SLURM_ARRAY_TASK_ID}]}.Pn-Transcriptionnetwork

mapfile -t pndups < Pn-Dup_pairs_combined.txt
printf '/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Pn-PPIEdge_Attributes_Collated4d.txt' {1..58} > pnPPIedge
mapfile -t pnPPIedge < pnPPIedge
grep -wiF ${pndups[${SLURM_ARRAY_TASK_ID}]} ${pnPPIedge[${SLURM_ARRAY_TASK_ID}]} > 1.${pndups[${SLURM_ARRAY_TASK_ID}]}.Pn-PPI

# run the above
sbatch 1.duplicated_genes-primary-Pnarray.sh


nano 1.duplicated_genes-primary-Abarray.sh

#!/bin/bash -e
#SBATCH -p ei-short # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --array=0-75
#SBATCH --mem-per-cpu 8240
#SBATCH -t 0-0:45
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR

mapfile -t abdups < Ab-Dup_pairs_combined.txt
printf '/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Ab-Edge_Attributes_Collated4d.txt\n%.0s' {1..76} > abedge
mapfile -t abedge < abedge
grep -wiF ${abdups[${SLURM_ARRAY_TASK_ID}]} ${abedge[${SLURM_ARRAY_TASK_ID}]} > 1.${abdups[${SLURM_ARRAY_TASK_ID}]}.Ab-Transcriptionnetwork

mapfile -t abdups < Ab-Dup_pairs_combined.txt
printf '/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Ab-PPIEdge_Attributes_Collated4d.txt' {1..76} > abPPIedge
mapfile -t abPPIedge < abPPIedge
grep -wiF ${abdups[${SLURM_ARRAY_TASK_ID}]} ${abPPIedge[${SLURM_ARRAY_TASK_ID}]} > 1.${abdups[${SLURM_ARRAY_TASK_ID}]}.Ab-PPI

# run the above
sbatch 1.duplicated_genes-primary-Abarray.sh

nano 1.duplicated_genes-primary-Nbarray.sh

#!/bin/bash -e
#SBATCH -p ei-short # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --array=0-47
#SBATCH --mem-per-cpu 8240
#SBATCH -t 0-0:45
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR

mapfile -t nbdups < Nb-Dup_pairs_combined.txt
printf '/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/Nb-Edge_Attributes_Collated4d.txt\n%.0s' {1..48} > nbedge
mapfile -t nbedge < nbedge
grep -wiF ${nbdups[${SLURM_ARRAY_TASK_ID}]} ${nbedge[${SLURM_ARRAY_TASK_ID}]} > 1.${nbdups[${SLURM_ARRAY_TASK_ID}]}.Nb-Transcriptionnetwork

mapfile -t nbdups < Nb-Dup_pairs_combined.txt
printf '/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/Nb-PPIEdge_Attributes_Collated4d.txt' {1..48} > nbPPIedge
mapfile -t nbPPIedge < nbPPIedge
grep -wiF ${nbdups[${SLURM_ARRAY_TASK_ID}]} ${nbPPIedge[${SLURM_ARRAY_TASK_ID}]} > 1.${nbdups[${SLURM_ARRAY_TASK_ID}]}.Nb-PPI

# run the above
sbatch 1.duplicated_genes-primary-Nbarray.sh


nano 1.duplicated_genes-primary-Onarray.sh

#!/bin/bash -e
#SBATCH -p ei-short # partition (queue)
#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of tasks
#SBATCH --array=0-17
#SBATCH --mem-per-cpu 8240
#SBATCH -t 0-0:45
#SBATCH --mail-type=ALL # notifications for job done & fail
#SBATCH --mail-user=Tarang.Mehta@earlham.ac.uk # send-to address
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR

mapfile -t ondups < On-Dup_pairs_combined.txt
printf '/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/On-Edge_Attributes_Collated4d.txt\n%.0s' {1..18} > onedge
mapfile -t onedge < onedge
grep -wiF ${ondups[${SLURM_ARRAY_TASK_ID}]} ${onedge[${SLURM_ARRAY_TASK_ID}]} > 1.${ondups[${SLURM_ARRAY_TASK_ID}]}.On-Transcriptionnetwork

mapfile -t ondups < On-Dup_pairs_combined.txt
printf '/tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/On-PPIEdge_Attributes_Collated4d.txt' {1..18} > onPPIedge
mapfile -t onPPIedge < onPPIedge
grep -wiF ${ondups[${SLURM_ARRAY_TASK_ID}]} ${onPPIedge[${SLURM_ARRAY_TASK_ID}]} > 1.${ondups[${SLURM_ARRAY_TASK_ID}]}.On-PPI

# run the above
sbatch 1.duplicated_genes-primary-Onarray.sh


nano 1.duplicated_genes-primary.sh

#!/bin/bash
cd $PBS_O_WORKDIR;

# created a script that reads each gene line by line then outputs separate files for each species and orthogroup from the species-specific files and PPI files.

# Now, find a way to extract networks from modules of main gene only
# 1. Pull out modules for each gene
# 2. Separate the above by each species - col1: gene; col2 - module
# 2. Assign col1 to variable and use to grep, then assign col2 to variable and use to select Species-module file to grep

for i in Mz Pn Ab Nb On ; do
  awk 'BEGIN{OFS="\t"}NR==FNR{a[$1]=$2;};NR>FNR{if($1 in a){print $0,a[$1];}else{print $0,"NA";}}' ../../../Module_genesandexpr/$i-speciesspecnames_clusterassign.txt $i-Dup_pairs_combined.txt | grep -v NA > $i-Dup_pairs_combined2.txt
done

for i in Mz Pn Ab Nb On ; do
  while read -r gene Module ; do
    filename=`echo 1.$i.$gene-ModuleTranscriptionnetwork`
    grep -wiF "$gene" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/${i}-Edge_Attributes_Collated4d-Module$Module.txt > $filename
  done < $i-Dup_pairs_combined2.txt
done

for i in Mz Pn Ab Nb On ; do
  while read -r gene Module ; do
    filename=`echo 1.$i.$gene-ModulePPI`
    grep -wiF "$gene" /tgac/scratch/mehtat/Cichlid_GRNs/Arboretum_GT_v3/PPI_Edge_Attributes/${i}-PPIEdge_Attributes_Collated4d-Module$Module.txt > $filename
  done < $i-Dup_pairs_combined2.txt
done

# run the above on interactive
qsub -q Test -l select=1:mem=60GB:ncpus=1 1.duplicated_genes-primary.sh

#### Sort out all candidate networks so that non OGs have unified names - this is for comparing in Cytoscape
cd /Users/mehtat/Documents/TGAC/Projects/Cichlid_GRNs/Arboretum_GT_v3/Edge_Attributes/candidates
for i in */*Transcriptionnetwork ; do
  awk '{OFS="\t"} {if ($18=="targetscan7") $3=$1; print $0}' $i |
  awk '{OFS="\t"} {if ($18=="targetscan7") $2=$1; print $0}' |
  awk '{OFS="\t"} {if ($18=="CNE_Proximal") $3=$1; print $0}' |
  awk '{OFS="\t"} {if ($18=="CNE_Proximal") $2=$1; print $0}' |
  awk '{OFS="\t"} {if ($18=="CNE_motif") $3=$1; print $0}' |
  awk '{OFS="\t"} {if ($18=="CNE_motif") $2=$1; print $0}' > $i.v2
done #DONE - also created v3 files for simple re-mapping to node table
